<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0515.1630                               -->
<workbook original-version='18.1' source-build='2019.2.0 (20192.19.0515.1630)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='XI.9_Chapter_xi_2017' inline='true' name='federated.1ou07g61kn9s0q18t8rmg0d7s6ie' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='XI.9_Chapter_xi_2017' name='textscan.042on881f9gsii19wgeee1yum2px'>
            <connection class='textscan' directory='C:/Users/ROOHI/Desktop/FinalProject_Group3_Storytelling (1).twb Files/Data/Final Project' filename='XI.9_Chapter_xi_2017.csv' password='' port='0' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.042on881f9gsii19wgeee1yum2px' name='XI.9_Chapter_xi_2017.csv' table='[XI.9_Chapter_xi_2017#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Region' ordinal='0' />
            <column datatype='string' name='Country/Region' ordinal='1' />
            <column datatype='real' name='2010' ordinal='2' />
            <column datatype='real' name='2011' ordinal='3' />
            <column datatype='real' name='2012' ordinal='4' />
            <column datatype='real' name='2013' ordinal='5' />
            <column datatype='real' name='2014' ordinal='6' />
            <column datatype='real' name='2015' ordinal='7' />
            <column datatype='real' name='2016' ordinal='8' />
            <column datatype='real' name='% share in 2016' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[XI.9_Chapter_xi_2017.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[XI.9_Chapter_xi_2017.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[XI.9_Chapter_xi_2017.csv]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2010]</local-name>
            <parent-name>[XI.9_Chapter_xi_2017.csv]</parent-name>
            <remote-alias>2010</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2011</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2011]</local-name>
            <parent-name>[XI.9_Chapter_xi_2017.csv]</parent-name>
            <remote-alias>2011</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2012</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2012]</local-name>
            <parent-name>[XI.9_Chapter_xi_2017.csv]</parent-name>
            <remote-alias>2012</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2013</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2013]</local-name>
            <parent-name>[XI.9_Chapter_xi_2017.csv]</parent-name>
            <remote-alias>2013</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2014</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2014]</local-name>
            <parent-name>[XI.9_Chapter_xi_2017.csv]</parent-name>
            <remote-alias>2014</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2015</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2015]</local-name>
            <parent-name>[XI.9_Chapter_xi_2017.csv]</parent-name>
            <remote-alias>2015</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2016]</local-name>
            <parent-name>[XI.9_Chapter_xi_2017.csv]</parent-name>
            <remote-alias>2016</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% share in 2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% share in 2016]</local-name>
            <parent-name>[XI.9_Chapter_xi_2017.csv]</parent-name>
            <remote-alias>% share in 2016</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% Share In 2016' datatype='real' name='[% share in 2016]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.200637' measure-ordering='alphabetic' measure-percentage='0.799363' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Consumption_By_Region_in_crosst+ (Multiple Connections)' inline='true' name='federated.0h3ycl41imxh2x19sqe2z1gqepz4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Class Dataset' name='excel-direct.0aqmnwp14mcffc1bsey0t1n29ycf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ROOHI/Desktop/Class Dataset.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='StatewiseDomesticProduct_3aug18' name='excel-direct.0jvez781wnpmwt1fsw8xm0dk7r5x'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/91948/Downloads/StatewiseDomesticProduct_3aug18.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[region_state].[State Code]' />
              <expression op='[Energy_India_Master].[State Code]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Consumption_By_Region_in_crosst].[Region]' />
                <expression op='[Installed_Capacity_by_State_cro].[Region]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[region_state].[State Code]' />
                  <expression op='[E_Statewise_Potential_data].[State Code]' />
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[region_state].[Country]' />
                    <expression op='[Consumption].[Country]' />
                  </expression>
                </clause>
                <relation join='inner' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[region_state].[State]' />
                      <expression op='[Processed-NSDP-Current].[State]' />
                    </expression>
                  </clause>
                  <relation join='inner' type='join'>
                    <clause type='join'>
                      <expression op='='>
                        <expression op='[Consumption_By_Region_in_crosst].[Region]' />
                        <expression op='[region_state].[Region]' />
                      </expression>
                    </clause>
                    <relation connection='excel-direct.0aqmnwp14mcffc1bsey0t1n29ycf' name='Consumption_By_Region_in_crosst' table='[Consumption_By_Region_in_crosst$]' type='table'>
                      <columns gridOrigin='A1:G8:no:A1:G8:0' header='yes' outcome='2'>
                        <column datatype='string' name='Region (master state)' ordinal='0' />
                        <column datatype='string' name='Region' ordinal='1' />
                        <column datatype='real' name='% of Total Consumption GWh along Region (master state), Region' ordinal='2' />
                        <column datatype='real' name='Consumption GWh(2014)' ordinal='3' />
                        <column datatype='real' name='Consumption GWh(2015)' ordinal='4' />
                        <column datatype='integer' name='Consumption GWh(2016)' ordinal='5' />
                        <column datatype='real' name='Consumption GWh(2017)' ordinal='6' />
                      </columns>
                    </relation>
                    <relation connection='excel-direct.0aqmnwp14mcffc1bsey0t1n29ycf' name='region_state' table='[region_state$]' type='table'>
                      <columns gridOrigin='A1:D38:no:A1:D38:0' header='yes' outcome='6'>
                        <column datatype='string' name='Region' ordinal='0' />
                        <column datatype='string' name='State Code' ordinal='1' />
                        <column datatype='string' name='State' ordinal='2' />
                        <column datatype='string' name='Country' ordinal='3' />
                      </columns>
                    </relation>
                  </relation>
                  <relation connection='excel-direct.0jvez781wnpmwt1fsw8xm0dk7r5x' name='Processed-NSDP-Current' table='[&apos;Processed-NSDP-Current$&apos;]' type='table'>
                    <columns gridOrigin='A1:H34:no:A1:H34:0' header='yes' outcome='2'>
                      <column datatype='string' name='State' ordinal='0' />
                      <column datatype='real' name='2011-12' ordinal='1' />
                      <column datatype='real' name='2012-13' ordinal='2' />
                      <column datatype='real' name='2013-14' ordinal='3' />
                      <column datatype='real' name='2014-15' ordinal='4' />
                      <column datatype='real' name='2015-16' ordinal='5' />
                      <column datatype='real' name='2016-17' ordinal='6' />
                      <column datatype='real' name='2017-18' ordinal='7' />
                    </columns>
                  </relation>
                </relation>
                <relation connection='excel-direct.0aqmnwp14mcffc1bsey0t1n29ycf' name='Consumption' table='[Consumption$]' type='table'>
                  <columns gridOrigin='A1:C5:no:A1:C5:0' header='yes' outcome='6'>
                    <column datatype='integer' name='Year' ordinal='0' />
                    <column datatype='real' name='Consumption GWh' ordinal='1' />
                    <column datatype='string' name='Country' ordinal='2' />
                  </columns>
                </relation>
              </relation>
              <relation connection='excel-direct.0aqmnwp14mcffc1bsey0t1n29ycf' name='E_Statewise_Potential_data' table='[E_Statewise_Potential_data$]' type='table'>
                <columns gridOrigin='A1:F181:no:A1:F181:0' header='yes' outcome='6'>
                  <column datatype='real' name='CapacityIdentifiedGW' ordinal='0' />
                  <column datatype='real' name='CapacityIdentified MW' ordinal='1' />
                  <column datatype='string' name='EnergySource Grouped' ordinal='2' />
                  <column datatype='string' name='Energy Source' ordinal='3' />
                  <column datatype='string' name='State (master state)' ordinal='4' />
                  <column datatype='string' name='State Code' ordinal='5' />
                </columns>
              </relation>
            </relation>
            <relation connection='excel-direct.0aqmnwp14mcffc1bsey0t1n29ycf' name='Installed_Capacity_by_State_cro' table='[Installed_Capacity_by_State_cro$]' type='table'>
              <columns gridOrigin='A1:D144:no:A1:D144:0' header='yes' outcome='2'>
                <column datatype='string' name='Energy Source' ordinal='0' />
                <column datatype='string' name='State (master state)' ordinal='1' />
                <column datatype='string' name='Region' ordinal='2' />
                <column datatype='real' name='Capacity MW' ordinal='3' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.0aqmnwp14mcffc1bsey0t1n29ycf' name='Energy_India_Master' table='[Energy_India_Master$]' type='table'>
            <columns gridOrigin='A1:D35:no:A1:D35:0' header='yes' outcome='6'>
              <column datatype='string' name='State Code' ordinal='0' />
              <column datatype='string' name='State' ordinal='1' />
              <column datatype='real' name='% of Total Capacity GW' ordinal='2' />
              <column datatype='real' name='Capacity MW' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[% of Total Capacity GW]' value='[Energy_India_Master].[% of Total Capacity GW]' />
          <map key='[% of Total Consumption GWh along Region (master state), Region]' value='[Consumption_By_Region_in_crosst].[% of Total Consumption GWh along Region (master state), Region]' />
          <map key='[2011-12]' value='[Processed-NSDP-Current].[2011-12]' />
          <map key='[2012-13]' value='[Processed-NSDP-Current].[2012-13]' />
          <map key='[2013-14]' value='[Processed-NSDP-Current].[2013-14]' />
          <map key='[2014-15]' value='[Processed-NSDP-Current].[2014-15]' />
          <map key='[2015-16]' value='[Processed-NSDP-Current].[2015-16]' />
          <map key='[2016-17]' value='[Processed-NSDP-Current].[2016-17]' />
          <map key='[2017-18]' value='[Processed-NSDP-Current].[2017-18]' />
          <map key='[Capacity MW (Energy!India!Master)]' value='[Energy_India_Master].[Capacity MW]' />
          <map key='[Capacity MW]' value='[Installed_Capacity_by_State_cro].[Capacity MW]' />
          <map key='[CapacityIdentified MW]' value='[E_Statewise_Potential_data].[CapacityIdentified MW]' />
          <map key='[CapacityIdentifiedGW]' value='[E_Statewise_Potential_data].[CapacityIdentifiedGW]' />
          <map key='[Consumption GWh(2014)]' value='[Consumption_By_Region_in_crosst].[Consumption GWh(2014)]' />
          <map key='[Consumption GWh(2015)]' value='[Consumption_By_Region_in_crosst].[Consumption GWh(2015)]' />
          <map key='[Consumption GWh(2016)]' value='[Consumption_By_Region_in_crosst].[Consumption GWh(2016)]' />
          <map key='[Consumption GWh(2017)]' value='[Consumption_By_Region_in_crosst].[Consumption GWh(2017)]' />
          <map key='[Consumption GWh]' value='[Consumption].[Consumption GWh]' />
          <map key='[Country (Consumption)]' value='[Consumption].[Country]' />
          <map key='[Country]' value='[region_state].[Country]' />
          <map key='[Energy Source (Installed!Capacity!by!State!cro)]' value='[Installed_Capacity_by_State_cro].[Energy Source]' />
          <map key='[Energy Source]' value='[E_Statewise_Potential_data].[Energy Source]' />
          <map key='[EnergySource Grouped]' value='[E_Statewise_Potential_data].[EnergySource Grouped]' />
          <map key='[Region (Installed!Capacity!by!State!cro)]' value='[Installed_Capacity_by_State_cro].[Region]' />
          <map key='[Region (master state)]' value='[Consumption_By_Region_in_crosst].[Region (master state)]' />
          <map key='[Region (region!state)]' value='[region_state].[Region]' />
          <map key='[Region]' value='[Consumption_By_Region_in_crosst].[Region]' />
          <map key='[State (Energy!India!Master)]' value='[Energy_India_Master].[State]' />
          <map key='[State (Processed-NSDP-Current)]' value='[Processed-NSDP-Current].[State]' />
          <map key='[State (master state) (Installed!Capacity!by!State!cro)]' value='[Installed_Capacity_by_State_cro].[State (master state)]' />
          <map key='[State (master state)]' value='[E_Statewise_Potential_data].[State (master state)]' />
          <map key='[State Code (E!Statewise!Potential!data)]' value='[E_Statewise_Potential_data].[State Code]' />
          <map key='[State Code (Energy!India!Master)]' value='[Energy_India_Master].[State Code]' />
          <map key='[State Code]' value='[region_state].[State Code]' />
          <map key='[State]' value='[region_state].[State]' />
          <map key='[Year]' value='[Consumption].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Region (master state)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (master state)]</local-name>
            <parent-name>[Consumption_By_Region_in_crosst]</parent-name>
            <remote-alias>Region (master state)</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Consumption_By_Region_in_crosst]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of Total Consumption GWh along Region (master state), Region</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% of Total Consumption GWh along Region (master state), Region]</local-name>
            <parent-name>[Consumption_By_Region_in_crosst]</parent-name>
            <remote-alias>% of Total Consumption GWh along Region (master state), Region</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumption GWh(2014)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Consumption GWh(2014)]</local-name>
            <parent-name>[Consumption_By_Region_in_crosst]</parent-name>
            <remote-alias>Consumption GWh(2014)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumption GWh(2015)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Consumption GWh(2015)]</local-name>
            <parent-name>[Consumption_By_Region_in_crosst]</parent-name>
            <remote-alias>Consumption GWh(2015)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumption GWh(2016)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Consumption GWh(2016)]</local-name>
            <parent-name>[Consumption_By_Region_in_crosst]</parent-name>
            <remote-alias>Consumption GWh(2016)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumption GWh(2017)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Consumption GWh(2017)]</local-name>
            <parent-name>[Consumption_By_Region_in_crosst]</parent-name>
            <remote-alias>Consumption GWh(2017)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Consumption_By_Region_in_crosst]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G8:no:A1:G8:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (region!state)]</local-name>
            <parent-name>[region_state]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State Code]</local-name>
            <parent-name>[region_state]</parent-name>
            <remote-alias>State Code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[region_state]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[region_state]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[region_state]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D38:no:A1:D38:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State (Processed-NSDP-Current)]</local-name>
            <parent-name>[Processed-NSDP-Current]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2011-12</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2011-12]</local-name>
            <parent-name>[Processed-NSDP-Current]</parent-name>
            <remote-alias>2011-12</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2012-13</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2012-13]</local-name>
            <parent-name>[Processed-NSDP-Current]</parent-name>
            <remote-alias>2012-13</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2013-14</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2013-14]</local-name>
            <parent-name>[Processed-NSDP-Current]</parent-name>
            <remote-alias>2013-14</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2014-15</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2014-15]</local-name>
            <parent-name>[Processed-NSDP-Current]</parent-name>
            <remote-alias>2014-15</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2015-16</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2015-16]</local-name>
            <parent-name>[Processed-NSDP-Current]</parent-name>
            <remote-alias>2015-16</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2016-17</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2016-17]</local-name>
            <parent-name>[Processed-NSDP-Current]</parent-name>
            <remote-alias>2016-17</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2017-18</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2017-18]</local-name>
            <parent-name>[Processed-NSDP-Current]</parent-name>
            <remote-alias>2017-18</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Processed-NSDP-Current]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H34:no:A1:H34:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Consumption]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumption GWh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Consumption GWh]</local-name>
            <parent-name>[Consumption]</parent-name>
            <remote-alias>Consumption GWh</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Consumption)]</local-name>
            <parent-name>[Consumption]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Consumption]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C5:no:A1:C5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CapacityIdentifiedGW</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CapacityIdentifiedGW]</local-name>
            <parent-name>[E_Statewise_Potential_data]</parent-name>
            <remote-alias>CapacityIdentifiedGW</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CapacityIdentified MW</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CapacityIdentified MW]</local-name>
            <parent-name>[E_Statewise_Potential_data]</parent-name>
            <remote-alias>CapacityIdentified MW</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EnergySource Grouped</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EnergySource Grouped]</local-name>
            <parent-name>[E_Statewise_Potential_data]</parent-name>
            <remote-alias>EnergySource Grouped</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy Source</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Energy Source]</local-name>
            <parent-name>[E_Statewise_Potential_data]</parent-name>
            <remote-alias>Energy Source</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State (master state)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State (master state)]</local-name>
            <parent-name>[E_Statewise_Potential_data]</parent-name>
            <remote-alias>State (master state)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State Code (E!Statewise!Potential!data)]</local-name>
            <parent-name>[E_Statewise_Potential_data]</parent-name>
            <remote-alias>State Code</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[E_Statewise_Potential_data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F181:no:A1:F181:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy Source</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Energy Source (Installed!Capacity!by!State!cro)]</local-name>
            <parent-name>[Installed_Capacity_by_State_cro]</parent-name>
            <remote-alias>Energy Source</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State (master state)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State (master state) (Installed!Capacity!by!State!cro)]</local-name>
            <parent-name>[Installed_Capacity_by_State_cro]</parent-name>
            <remote-alias>State (master state)</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (Installed!Capacity!by!State!cro)]</local-name>
            <parent-name>[Installed_Capacity_by_State_cro]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Capacity MW</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Capacity MW]</local-name>
            <parent-name>[Installed_Capacity_by_State_cro]</parent-name>
            <remote-alias>Capacity MW</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Installed_Capacity_by_State_cro]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D144:no:A1:D144:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State Code (Energy!India!Master)]</local-name>
            <parent-name>[Energy_India_Master]</parent-name>
            <remote-alias>State Code</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State (Energy!India!Master)]</local-name>
            <parent-name>[Energy_India_Master]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of Total Capacity GW</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% of Total Capacity GW]</local-name>
            <parent-name>[Energy_India_Master]</parent-name>
            <remote-alias>% of Total Capacity GW</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Capacity MW</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Capacity MW (Energy!India!Master)]</local-name>
            <parent-name>[Energy_India_Master]</parent-name>
            <remote-alias>Capacity MW</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Energy_India_Master]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D35:no:A1:D35:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[% of Total Consumption GWh along Region (master state), Region]' role='measure' type='quantitative' />
      <column datatype='real' name='[2011-12]' role='measure' type='quantitative' />
      <column datatype='real' name='[2012-13]' role='measure' type='quantitative' />
      <column datatype='real' name='[2013-14]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[2014-15 (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='5' formula='[2014-15]' peg='0' size='145393' />
      </column>
      <column datatype='real' name='[2014-15]' role='measure' type='quantitative' />
      <column datatype='real' name='[2015-16]' role='measure' type='quantitative' />
      <column datatype='real' name='[2016-17]' role='measure' type='quantitative' />
      <column datatype='real' name='[2017-18]' role='measure' type='quantitative' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Capacity MW:qk]&quot;' value='Installed Capacity' />
          <alias key='&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:CapacityIdentified MW:qk]&quot;' value='Potential Identified' />
        </aliases>
      </column>
      <column datatype='real' name='[Capacity MW]' role='measure' type='quantitative' />
      <column datatype='real' name='[CapacityIdentified MW]' role='measure' type='quantitative' />
      <column caption='Capacity Identified GW' datatype='real' name='[CapacityIdentifiedGW]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Consumption GWh(2014) (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='5' formula='[Consumption GWh(2014)]' peg='0' size='120133' />
      </column>
      <column datatype='real' name='[Consumption GWh(2014)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Consumption GWh(2015)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Consumption GWh(2016)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Consumption GWh(2017)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Consumption GWh]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country (Consumption)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Energy Source (Installed!Capacity!by!State!cro)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Region (Installed!Capacity!by!State!cro)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Region (master state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Region (region!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='string' name='[State (Energy!India!Master)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State (Processed-NSDP-Current)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State (master state) (Installed!Capacity!by!State!cro)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State (master state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State Code (E!Statewise!Potential!data)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State Code (Energy!India!Master)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State Code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[2014-15]' derivation='Avg' name='[avg:2014-15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Consumption GWh(2017)]' derivation='Sum' name='[diff:sum:Consumption GWh(2017):qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Consumption GWh(2017)]' derivation='Sum' name='[diff:sum:Consumption GWh(2017):qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[India]' derivation='InOut' name='[io:India:nk]' pivot='key' type='nominal'>
        <aliases>
          <alias key='true' value='India' />
        </aliases>
      </column-instance>
      <column-instance column='[Energy Source (Installed!Capacity!by!State!cro)]' derivation='None' name='[none:Energy Source (Installed!Capacity!by!State!cro):nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Consumption GWh(2017)]' derivation='Sum' name='[pcdf:sum:Consumption GWh(2017):qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Consumption GWh(2014)]' derivation='Stdev' name='[std:Consumption GWh(2014):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Consumption GWh(2015)]' derivation='Stdev' name='[std:Consumption GWh(2015):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Consumption GWh(2016)]' derivation='Stdev' name='[std:Consumption GWh(2016):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Consumption GWh(2017)]' derivation='Stdev' name='[std:Consumption GWh(2017):qk]' pivot='key' type='quantitative' />
      <column-instance column='[% of Total Consumption GWh along Region (master state), Region]' derivation='Sum' name='[sum:% of Total Consumption GWh along Region (master state), Region:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2011-12]' derivation='Sum' name='[sum:2011-12:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2012-13]' derivation='Sum' name='[sum:2012-13:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2013-14]' derivation='Sum' name='[sum:2013-14:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2014-15]' derivation='Sum' name='[sum:2014-15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2015-16]' derivation='Sum' name='[sum:2015-16:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2016-17]' derivation='Sum' name='[sum:2016-17:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2017-18]' derivation='Sum' name='[sum:2017-18:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Capacity MW]' derivation='Sum' name='[sum:Capacity MW:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CapacityIdentified MW]' derivation='Sum' name='[sum:CapacityIdentified MW:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CapacityIdentifiedGW]' derivation='Sum' name='[sum:CapacityIdentifiedGW:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Consumption GWh(2014)]' derivation='Sum' name='[sum:Consumption GWh(2014):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Consumption GWh(2015)]' derivation='Sum' name='[sum:Consumption GWh(2015):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Consumption GWh(2016)]' derivation='Sum' name='[sum:Consumption GWh(2016):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Consumption GWh(2017)]' derivation='Sum' name='[sum:Consumption GWh(2017):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Consumption GWh]' derivation='Sum' name='[sum:Consumption GWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Consumption GWh(2016)]' derivation='Var' name='[var:Consumption GWh(2016):qk]' pivot='key' type='quantitative' />
      <group caption='India' name='[India]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='&quot;ER&quot;' function='range' level='[none:Region:nk]' to='&quot;WR&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group caption='Set 1' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='member' level='[io:India:nk]' member='true' />
      </group>
      <group caption='Set 2' name='[Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='member' level='[io:India:nk]' member='true' />
      </group>
      <group caption='Set 3' name='[Set 3]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='member' level='[io:India:nk]' member='true' />
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/ROOHI/Desktop/FinalProject_Group3_Storytelling (1).twb Files/Data/FinalProject_Group3.twb Files/Consumption_By_Region_in_crosst+ (Multiple Connections).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/19/2019 05:32:46 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[% of Total Capacity GW]' value='[Extract].[% of Total Capacity GW]' />
            <map key='[% of Total Consumption GWh along Region (master state), Region]' value='[Extract].[% of Total Consumption GWh along Region (master state), Region]' />
            <map key='[2011-12]' value='[Extract].[2011-12]' />
            <map key='[2012-13]' value='[Extract].[2012-13]' />
            <map key='[2013-14]' value='[Extract].[2013-14]' />
            <map key='[2014-15]' value='[Extract].[2014-15]' />
            <map key='[2015-16]' value='[Extract].[2015-16]' />
            <map key='[2016-17]' value='[Extract].[2016-17]' />
            <map key='[2017-18]' value='[Extract].[2017-18]' />
            <map key='[Capacity MW (Energy!India!Master)]' value='[Extract].[Capacity MW]' />
            <map key='[Capacity MW]' value='[Extract].[Capacity MW1]' />
            <map key='[CapacityIdentified MW]' value='[Extract].[CapacityIdentified MW]' />
            <map key='[CapacityIdentifiedGW]' value='[Extract].[CapacityIdentifiedGW]' />
            <map key='[Consumption GWh(2014)]' value='[Extract].[Consumption GWh(2014)]' />
            <map key='[Consumption GWh(2015)]' value='[Extract].[Consumption GWh(2015)]' />
            <map key='[Consumption GWh(2016)]' value='[Extract].[Consumption GWh(2016)]' />
            <map key='[Consumption GWh(2017)]' value='[Extract].[Consumption GWh(2017)]' />
            <map key='[Consumption GWh]' value='[Extract].[Consumption GWh]' />
            <map key='[Country (Consumption)]' value='[Extract].[Country]' />
            <map key='[Country]' value='[Extract].[Country1]' />
            <map key='[Energy Source (Installed!Capacity!by!State!cro)]' value='[Extract].[Energy Source]' />
            <map key='[Energy Source]' value='[Extract].[Energy Source1]' />
            <map key='[EnergySource Grouped]' value='[Extract].[EnergySource Grouped]' />
            <map key='[Region (Installed!Capacity!by!State!cro)]' value='[Extract].[Region]' />
            <map key='[Region (master state)]' value='[Extract].[Region (master state)]' />
            <map key='[Region (region!state)]' value='[Extract].[Region1]' />
            <map key='[Region]' value='[Extract].[Region2]' />
            <map key='[State (Energy!India!Master)]' value='[Extract].[State]' />
            <map key='[State (Processed-NSDP-Current)]' value='[Extract].[State1]' />
            <map key='[State (master state) (Installed!Capacity!by!State!cro)]' value='[Extract].[State (master state)]' />
            <map key='[State (master state)]' value='[Extract].[State (master state)1]' />
            <map key='[State Code (E!Statewise!Potential!data)]' value='[Extract].[State Code]' />
            <map key='[State Code (Energy!India!Master)]' value='[Extract].[State Code1]' />
            <map key='[State Code]' value='[Extract].[State Code2]' />
            <map key='[State]' value='[Extract].[State2]' />
            <map key='[Year]' value='[Extract].[Year]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='Consumption_By_Region_in_crosst+ (Multiple Connections)' increment-value='%null%' refresh-type='create' rows-inserted='18876' timestamp-start='2019-07-19 17:32:46.812' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Region (master state)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region (master state)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region (master state)</remote-alias>
              <ordinal>0</ordinal>
              <family>Consumption_By_Region_in_crosst</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region2</remote-alias>
              <ordinal>1</ordinal>
              <family>Consumption_By_Region_in_crosst</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>% of Total Consumption GWh along Region (master state), Region</remote-name>
              <remote-type>5</remote-type>
              <local-name>[% of Total Consumption GWh along Region (master state), Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>% of Total Consumption GWh along Region (master state), Region</remote-alias>
              <ordinal>2</ordinal>
              <family>Consumption_By_Region_in_crosst</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Consumption GWh(2014)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Consumption GWh(2014)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Consumption GWh(2014)</remote-alias>
              <ordinal>3</ordinal>
              <family>Consumption_By_Region_in_crosst</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Consumption GWh(2015)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Consumption GWh(2015)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Consumption GWh(2015)</remote-alias>
              <ordinal>4</ordinal>
              <family>Consumption_By_Region_in_crosst</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Consumption GWh(2016)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Consumption GWh(2016)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Consumption GWh(2016)</remote-alias>
              <ordinal>5</ordinal>
              <family>Consumption_By_Region_in_crosst</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Consumption GWh(2017)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Consumption GWh(2017)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Consumption GWh(2017)</remote-alias>
              <ordinal>6</ordinal>
              <family>Consumption_By_Region_in_crosst</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region (region!state)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region1</remote-alias>
              <ordinal>7</ordinal>
              <family>region_state</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State Code2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State Code2</remote-alias>
              <ordinal>8</ordinal>
              <family>region_state</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State2</remote-alias>
              <ordinal>9</ordinal>
              <family>region_state</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country1</remote-alias>
              <ordinal>10</ordinal>
              <family>region_state</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State (Processed-NSDP-Current)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State1</remote-alias>
              <ordinal>11</ordinal>
              <family>Processed-NSDP-Current</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2011-12</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2011-12]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2011-12</remote-alias>
              <ordinal>12</ordinal>
              <family>Processed-NSDP-Current</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2012-13</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2012-13]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2012-13</remote-alias>
              <ordinal>13</ordinal>
              <family>Processed-NSDP-Current</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2013-14</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2013-14]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2013-14</remote-alias>
              <ordinal>14</ordinal>
              <family>Processed-NSDP-Current</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2014-15</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2014-15]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2014-15</remote-alias>
              <ordinal>15</ordinal>
              <family>Processed-NSDP-Current</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2015-16</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2015-16]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2015-16</remote-alias>
              <ordinal>16</ordinal>
              <family>Processed-NSDP-Current</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2016-17</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2016-17]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2016-17</remote-alias>
              <ordinal>17</ordinal>
              <family>Processed-NSDP-Current</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2017-18</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2017-18]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2017-18</remote-alias>
              <ordinal>18</ordinal>
              <family>Processed-NSDP-Current</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>19</ordinal>
              <family>Consumption</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Consumption GWh</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Consumption GWh]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Consumption GWh</remote-alias>
              <ordinal>20</ordinal>
              <family>Consumption</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (Consumption)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>21</ordinal>
              <family>Consumption</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CapacityIdentifiedGW</remote-name>
              <remote-type>5</remote-type>
              <local-name>[CapacityIdentifiedGW]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CapacityIdentifiedGW</remote-alias>
              <ordinal>22</ordinal>
              <family>E_Statewise_Potential_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>153</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CapacityIdentified MW</remote-name>
              <remote-type>5</remote-type>
              <local-name>[CapacityIdentified MW]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CapacityIdentified MW</remote-alias>
              <ordinal>23</ordinal>
              <family>E_Statewise_Potential_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>153</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>EnergySource Grouped</remote-name>
              <remote-type>129</remote-type>
              <local-name>[EnergySource Grouped]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>EnergySource Grouped</remote-alias>
              <ordinal>24</ordinal>
              <family>E_Statewise_Potential_data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Energy Source1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Energy Source]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Energy Source1</remote-alias>
              <ordinal>25</ordinal>
              <family>E_Statewise_Potential_data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State (master state)1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State (master state)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State (master state)1</remote-alias>
              <ordinal>26</ordinal>
              <family>E_Statewise_Potential_data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State Code (E!Statewise!Potential!data)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State Code</remote-alias>
              <ordinal>27</ordinal>
              <family>E_Statewise_Potential_data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Energy Source</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Energy Source (Installed!Capacity!by!State!cro)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Energy Source</remote-alias>
              <ordinal>28</ordinal>
              <family>Installed_Capacity_by_State_cro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State (master state)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State (master state) (Installed!Capacity!by!State!cro)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State (master state)</remote-alias>
              <ordinal>29</ordinal>
              <family>Installed_Capacity_by_State_cro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>35</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region (Installed!Capacity!by!State!cro)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>30</ordinal>
              <family>Installed_Capacity_by_State_cro</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Capacity MW1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Capacity MW]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Capacity MW1</remote-alias>
              <ordinal>31</ordinal>
              <family>Installed_Capacity_by_State_cro</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>143</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State Code1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State Code (Energy!India!Master)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State Code1</remote-alias>
              <ordinal>32</ordinal>
              <family>Energy_India_Master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State (Energy!India!Master)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>33</ordinal>
              <family>Energy_India_Master</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>% of Total Capacity GW</remote-name>
              <remote-type>5</remote-type>
              <local-name>[% of Total Capacity GW]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>% of Total Capacity GW</remote-alias>
              <ordinal>34</ordinal>
              <family>Energy_India_Master</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Capacity MW</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Capacity MW (Energy!India!Master)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Capacity MW</remote-alias>
              <ordinal>35</ordinal>
              <family>Energy_India_Master</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.646497' group-percentage='0.0955414' measure-ordering='alphabetic' measure-percentage='0.257962' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]&#10;[none:Region:nk]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <multibucket>
                <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Capacity MW:qk]&quot;</bucket>
                <bucket>&quot;ER&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4f7cba'>
              <multibucket>
                <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:CapacityIdentified MW:qk]&quot;</bucket>
                <bucket>&quot;ER&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4f7cba'>
              <multibucket>
                <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:CapacityIdentified MW:qk]&quot;</bucket>
                <bucket>&quot;WR&quot;</bucket>
              </multibucket>
            </map>
            <map to='#57a337'>
              <multibucket>
                <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:CapacityIdentified MW:qk]&quot;</bucket>
                <bucket>&quot;NER&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a26dc2'>
              <multibucket>
                <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Capacity MW:qk]&quot;</bucket>
                <bucket>&quot;WR&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a2b627'>
              <multibucket>
                <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Capacity MW:qk]&quot;</bucket>
                <bucket>&quot;NER&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d5bb21'>
              <multibucket>
                <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Capacity MW:qk]&quot;</bucket>
                <bucket>&quot;NR&quot;</bucket>
              </multibucket>
            </map>
            <map to='#eb364a'>
              <multibucket>
                <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:CapacityIdentified MW:qk]&quot;</bucket>
                <bucket>&quot;SR&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f06719'>
              <multibucket>
                <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Capacity MW:qk]&quot;</bucket>
                <bucket>&quot;SR&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f89217'>
              <multibucket>
                <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:CapacityIdentified MW:qk]&quot;</bucket>
                <bucket>&quot;NR&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Energy Source (Installed!Capacity!by!State!cro):nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;HYDRO&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>%null%</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;NUCLEAR&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;DIESEL&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;COAL&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;GAS&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;RES&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:2015-16:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[std:Consumption GWh(2014):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Capacity MW:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Consumption GWh(2014):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[diff:sum:Consumption GWh(2017):qk:3]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[diff:sum:Consumption GWh(2017):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[pcdf:sum:Consumption GWh(2017):qk:3]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[std:Consumption GWh(2017):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Consumption GWh(2017):qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:2016-17:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:2012-13:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:\% of Total Consumption GWh along Region (master state), Region:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:2013-14:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:CapacityIdentifiedGW:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Consumption GWh:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[std:Consumption GWh(2016):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Consumption GWh(2016):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[var:Consumption GWh(2016):qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[avg:2014-15:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:2014-15:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[std:Consumption GWh(2015):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:CapacityIdentified MW:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Consumption GWh(2015):qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:2017-18:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:2011-12:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
    <datasource caption='Region Wise Consumtion and GDP (GDP-Consumption Region) (2)' inline='true' name='federated.0zmxr4z0g8guwf1f7qtw61ntolgx (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='GDP-Consumption Region' name='excel-direct.1crcx851oqbwp51h5ao6m1t8hbni'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ROOHI/Desktop/FinalProject_Group3_Storytelling (1).twb Files/Data/PGDM 1/GDP-Consumption Region.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1crcx851oqbwp51h5ao6m1t8hbni' name='Region Wise Consumtion and GDP' table='[&apos;Region Wise Consumtion and GDP$&apos;]' type='table'>
          <columns gridOrigin='A1:D21:no:A1:D21:0' header='yes' outcome='2'>
            <column datatype='string' name='Region' ordinal='0' />
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='1' />
            <column datatype='real' name='Energy Consumption' ordinal='2' />
            <column datatype='real' name='GDP' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Region Wise Consumtion and GDP]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D21:no:A1:D21:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Region Wise Consumtion and GDP]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Region Wise Consumtion and GDP]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy Consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy Consumption]</local-name>
            <parent-name>[Region Wise Consumtion and GDP]</parent-name>
            <remote-alias>Energy Consumption</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[Region Wise Consumtion and GDP]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='real' name='[GDP]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='date' fiscal-year-start='3' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[GDP]' derivation='Attribute' name='[attr:GDP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP]' derivation='None' name='[none:GDP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.464968' measure-ordering='alphabetic' measure-percentage='0.535032' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zmxr4z0g8guwf1f7qtw61ntolgx (copy)].[attr:GDP:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zmxr4z0g8guwf1f7qtw61ntolgx (copy)].[none:GDP:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zmxr4z0g8guwf1f7qtw61ntolgx (copy)].[sum:GDP:qk]&quot;</bucket>
            </map>
            <map to='#6ba711'>
              <bucket>&quot;[federated.0zmxr4z0g8guwf1f7qtw61ntolgx (copy)]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Overall GDP  (GDP-Consumption Region)' inline='true' name='federated.1ubxuip1myrp4m17xd21g0kuna3p' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='GDP-Consumption Region' name='excel-direct.0jsy4381oqoj5c1ab064p0yyri68'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ROOHI/Desktop/FinalProject_Group3_Storytelling (1).twb Files/Data/PGDM 1/GDP-Consumption Region.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0jsy4381oqoj5c1ab064p0yyri68' name='Overall GDP ' table='[&apos;Overall GDP $&apos;]' type='table'>
          <columns gridOrigin='A1:C5:no:A1:C5:0' header='yes' outcome='6'>
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='0' />
            <column datatype='real' name='GDP' ordinal='1' />
            <column datatype='real' name='Energy Consumtion' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Overall GDP ]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C5:no:A1:C5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Overall GDP ]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[Overall GDP ]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy Consumtion</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy Consumtion]</local-name>
            <parent-name>[Overall GDP ]</parent-name>
            <remote-alias>Energy Consumtion</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='real' name='[Energy Consumtion]' role='measure' type='quantitative' />
      <column datatype='real' name='[GDP]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Energy Consumtion]' derivation='Attribute' name='[attr:Energy Consumtion:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP]' derivation='Attribute' name='[attr:GDP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Energy Consumtion]' derivation='None' name='[none:Energy Consumtion:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP]' derivation='None' name='[none:GDP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Energy Consumtion]' derivation='Sum' name='[sum:Energy Consumtion:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.43554' measure-ordering='alphabetic' measure-percentage='0.56446' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1c12a7'>
              <bucket>&quot;[federated.1ubxuip1myrp4m17xd21g0kuna3p]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ubxuip1myrp4m17xd21g0kuna3p].[attr:Energy Consumtion:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ubxuip1myrp4m17xd21g0kuna3p].[none:Energy Consumtion:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ubxuip1myrp4m17xd21g0kuna3p].[sum:Energy Consumtion:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ubxuip1myrp4m17xd21g0kuna3p].[attr:GDP:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ubxuip1myrp4m17xd21g0kuna3p].[none:GDP:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ubxuip1myrp4m17xd21g0kuna3p].[sum:GDP:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Country_Imports_data+ (Class Dataset)' inline='true' name='federated.0oa07rc1cqtrrh193iq9v132xasv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Class Dataset' name='excel-direct.0exeb5c1mqaw2j1cfnga40w4idve'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/91948/Downloads/Class Dataset.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Country_Imports_data].[Coal Type]' />
              <expression op='[Petroleum_Products_Import_cross].[Oil Type]' />
            </expression>
          </clause>
          <relation connection='excel-direct.0exeb5c1mqaw2j1cfnga40w4idve' name='Country_Imports_data' table='[Country_Imports_data$]' type='table'>
            <columns gridOrigin='A1:F52:no:A1:F52:0' header='yes' outcome='6'>
              <column datatype='real' name='Amt ₹ Crore' ordinal='0' />
              <column datatype='string' name='Coal Type' ordinal='1' />
              <column datatype='string' name='Country (master country)' ordinal='2' />
              <column datatype='string' name='Country' ordinal='3' />
              <column datatype='real' name='Qty In Million Tonnes' ordinal='4' />
              <column datatype='integer' name='YearValue (master year)' ordinal='5' />
            </columns>
          </relation>
          <relation connection='excel-direct.0exeb5c1mqaw2j1cfnga40w4idve' name='Petroleum_Products_Import_cross' table='[Petroleum_Products_Import_cross$]' type='table'>
            <columns gridOrigin='A1:D111:no:A1:D111:0' header='yes' outcome='2'>
              <column datatype='string' name='Oil Type' ordinal='0' />
              <column datatype='integer' name='Year Name' ordinal='1' />
              <column datatype='integer' name='Amount RsCrore' ordinal='2' />
              <column datatype='integer' name='Qty 000Tonne' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Amt ₹ Crore</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Amt ₹ Crore]</local-name>
            <parent-name>[Country_Imports_data]</parent-name>
            <remote-alias>Amt ₹ Crore</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coal Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Coal Type]</local-name>
            <parent-name>[Country_Imports_data]</parent-name>
            <remote-alias>Coal Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country (master country)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (master country)]</local-name>
            <parent-name>[Country_Imports_data]</parent-name>
            <remote-alias>Country (master country)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Country_Imports_data]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Qty In Million Tonnes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Qty In Million Tonnes]</local-name>
            <parent-name>[Country_Imports_data]</parent-name>
            <remote-alias>Qty In Million Tonnes</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YearValue (master year)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YearValue (master year)]</local-name>
            <parent-name>[Country_Imports_data]</parent-name>
            <remote-alias>YearValue (master year)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Country_Imports_data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F52:no:A1:F52:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Oil Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Oil Type]</local-name>
            <parent-name>[Petroleum_Products_Import_cross]</parent-name>
            <remote-alias>Oil Type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year Name</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year Name]</local-name>
            <parent-name>[Petroleum_Products_Import_cross]</parent-name>
            <remote-alias>Year Name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Amount RsCrore</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Amount RsCrore]</local-name>
            <parent-name>[Petroleum_Products_Import_cross]</parent-name>
            <remote-alias>Amount RsCrore</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Qty 000Tonne</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Qty 000Tonne]</local-name>
            <parent-name>[Petroleum_Products_Import_cross]</parent-name>
            <remote-alias>Qty 000Tonne</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Petroleum_Products_Import_cross]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D111:no:A1:D111:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Coal Type]' role='dimension' type='nominal' />
      <column datatype='string' name='[Country (master country)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;BAHARAIN IS&quot;' value='&quot;Bahrain&quot;' />
          <semantic-value key='&quot;CHINA P R&quot;' value='&quot;China&quot;' />
          <semantic-value key='&quot;NETHERLAND&quot;' value='&quot;Netherlands&quot;' />
          <semantic-value key='&quot;SAUDI ARAB&quot;' value='&quot;Saudi Arabia&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year Name]' role='dimension' type='quantitative' />
      <column-instance column='[Coal Type]' derivation='None' name='[none:Coal Type:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_GB' class='hyper' dbname='C:/Users/ROOHI/Desktop/FinalProject_Group3_Storytelling (1).twb Files/Data/FinalProject_Group3_Storytelling.twb Files/Country_Imports_data+ (Class Dataset).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/23/2019 04:45:55 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Country_Imports_data+ (Class Dataset)' increment-value='%null%' refresh-type='create' rows-inserted='161' timestamp-start='2019-07-23 16:45:55.438' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Amt ₹ Crore</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Amt ₹ Crore]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Amt ₹ Crore</remote-alias>
              <ordinal>0</ordinal>
              <family>Country_Imports_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>48</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Coal Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Coal Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Coal Type</remote-alias>
              <ordinal>1</ordinal>
              <family>Country_Imports_data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country (master country)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (master country)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country (master country)</remote-alias>
              <ordinal>2</ordinal>
              <family>Country_Imports_data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>34</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>3</ordinal>
              <family>Country_Imports_data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>34</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Qty In Million Tonnes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Qty In Million Tonnes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Qty In Million Tonnes</remote-alias>
              <ordinal>4</ordinal>
              <family>Country_Imports_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>YearValue (master year)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[YearValue (master year)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>YearValue (master year)</remote-alias>
              <ordinal>5</ordinal>
              <family>Country_Imports_data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Oil Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Oil Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Oil Type</remote-alias>
              <ordinal>6</ordinal>
              <family>Petroleum_Products_Import_cross</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year Name</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year Name</remote-alias>
              <ordinal>7</ordinal>
              <family>Petroleum_Products_Import_cross</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Amount RsCrore</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Amount RsCrore]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Amount RsCrore</remote-alias>
              <ordinal>8</ordinal>
              <family>Petroleum_Products_Import_cross</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>103</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Qty 000Tonne</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Qty 000Tonne]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Qty 000Tonne</remote-alias>
              <ordinal>9</ordinal>
              <family>Petroleum_Products_Import_cross</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>102</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.449082' measure-ordering='alphabetic' measure-percentage='0.550918' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Coal Type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;NON-COKING&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;COKING&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;COKE&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Consumption_Forecast (Alternative_Investment_dataset)' inline='true' name='federated.1d0ssow19n9rtn13fdz711dpll1z' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Alternative_Investment_dataset' name='excel-direct.0z0lktm0d7yhj21911rys05jw9yo'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ROOHI/Desktop/FinalProject_Group3_Storytelling (1).twb Files/Data/Downloads/Alternative_Investment_dataset.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0z0lktm0d7yhj21911rys05jw9yo' name='Consumption_Forecast' table='[Consumption_Forecast$]' type='table'>
          <columns gridOrigin='A1:T37:no:A1:T37:0' header='yes' outcome='2'>
            <column datatype='string' name='Region' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='real' name='Population 2019' ordinal='2' />
            <column datatype='real' name='Population with access to electricity' ordinal='3' />
            <column datatype='real' name='Household' ordinal='4' />
            <column datatype='real' name='Household 1' ordinal='5' />
            <column datatype='real' name='Installed Capacity MW(2015)' ordinal='6' />
            <column datatype='real' name='Installed Capacity GW(2015)' ordinal='7' />
            <column datatype='real' name='2016' ordinal='8' />
            <column datatype='real' name='2017' ordinal='9' />
            <column datatype='real' name='2018' ordinal='10' />
            <column datatype='real' name='2019' ordinal='11' />
            <column datatype='real' name='Consumption GWh(2019)' ordinal='12' />
            <column datatype='real' name='Consumption 88%' ordinal='13' />
            <column datatype='real' name='Consumption GW 2019' ordinal='14' />
            <column datatype='real' name='Deficit 2019(GW)' ordinal='15' />
            <column datatype='real' name='Consumption GWh(2018)' ordinal='16' />
            <column datatype='real' name='Consumption 88% 1' ordinal='17' />
            <column datatype='real' name='Consumption GW 2018' ordinal='18' />
            <column datatype='real' name='Deficit 2018(GW)' ordinal='19' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population 2019</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population 2019]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Population 2019</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population with access to electricity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population with access to electricity]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Population with access to electricity</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Household</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Household]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Household</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Household 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Household 1]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Household 1</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Installed Capacity MW(2015)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Installed Capacity MW(2015)]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Installed Capacity MW(2015)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Installed Capacity GW(2015)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Installed Capacity GW(2015)]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Installed Capacity GW(2015)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2016]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>2016</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2017]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>2017</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>2018</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2019</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2019]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>2019</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumption GWh(2019)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Consumption GWh(2019)]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Consumption GWh(2019)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumption 88%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Consumption 88%]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Consumption 88%</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumption GW 2019</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Consumption GW 2019]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Consumption GW 2019</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deficit 2019(GW)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deficit 2019(GW)]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Deficit 2019(GW)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumption GWh(2018)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Consumption GWh(2018)]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Consumption GWh(2018)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumption 88% 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Consumption 88% 1]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Consumption 88% 1</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumption GW 2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Consumption GW 2018]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Consumption GW 2018</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deficit 2018(GW)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deficit 2018(GW)]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Deficit 2018(GW)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:T37:no:A1:T37:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[2018]' role='measure' type='quantitative' />
      <column caption='Consumption GW 2018' datatype='real' name='[Consumption GW 2019 1]' role='measure' type='quantitative' />
      <column datatype='real' name='[Consumption GWh(2018)]' role='measure' type='quantitative' />
      <column caption='Deficit 2018(GW) ' datatype='real' name='[Deficit 2019(GW) 1]' role='measure' type='quantitative' />
      <column datatype='real' name='[Deficit 2019(GW)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[2018]' derivation='Attribute' name='[attr:2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Consumption GW 2019 1]' derivation='Attribute' name='[attr:Consumption GW 2019 1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deficit 2019(GW) 1]' derivation='Attribute' name='[attr:Deficit 2019(GW) 1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deficit 2019(GW)]' derivation='Attribute' name='[attr:Deficit 2019(GW):qk]' pivot='key' type='quantitative' />
      <column-instance column='[2018]' derivation='Sum' name='[sum:2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Consumption GW 2019 1]' derivation='Sum' name='[sum:Consumption GW 2019 1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Consumption GWh(2018)]' derivation='Sum' name='[sum:Consumption GWh(2018):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deficit 2019(GW) 1]' derivation='Sum' name='[sum:Deficit 2019(GW) 1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deficit 2019(GW)]' derivation='Sum' name='[sum:Deficit 2019(GW):qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.200637' measure-ordering='alphabetic' measure-percentage='0.799363' rowDisplayCount='36' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:2018:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1d0ssow19n9rtn13fdz711dpll1z].[sum:2018:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1d0ssow19n9rtn13fdz711dpll1z].[sum:Consumption GWh(2018):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1d0ssow19n9rtn13fdz711dpll1z]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1d0ssow19n9rtn13fdz711dpll1z].[sum:Deficit 2019(GW):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW) 1:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1d0ssow19n9rtn13fdz711dpll1z].[sum:Deficit 2019(GW) 1:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW):qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Consumption GW 2019 1:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1d0ssow19n9rtn13fdz711dpll1z].[sum:Consumption GW 2019 1:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Region Wise Consumtion and GDP (GDP-Consumption Region)' inline='true' name='federated.0zmxr4z0g8guwf1f7qtw61ntolgx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='GDP-Consumption Region' name='excel-direct.06mag3t1fvgz9h10xfl6a08r8qgk'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ROOHI/Desktop/FinalProject_Group3_Storytelling (1).twb Files/Data/PGDM/GDP-Consumption Region.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.06mag3t1fvgz9h10xfl6a08r8qgk' name='Region Wise Consumtion and GDP' table='[&apos;Region Wise Consumtion and GDP$&apos;]' type='table'>
          <columns gridOrigin='A1:D21:no:A1:D21:0' header='yes' outcome='2'>
            <column datatype='string' name='Region' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Energy Consumption' ordinal='2' />
            <column datatype='real' name='GDP' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Region Wise Consumtion and GDP]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Region Wise Consumtion and GDP]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy Consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy Consumption]</local-name>
            <parent-name>[Region Wise Consumtion and GDP]</parent-name>
            <remote-alias>Energy Consumption</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[Region Wise Consumtion and GDP]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Region Wise Consumtion and GDP]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D21:no:A1:D21:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='real' name='[Energy Consumption]' role='measure' type='quantitative' />
      <column datatype='real' name='[GDP]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Energy Consumption]' derivation='Attribute' name='[attr:Energy Consumption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP]' derivation='None' name='[none:GDP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Energy Consumption]' derivation='Sum' name='[sum:Energy Consumption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.484026' measure-ordering='alphabetic' measure-percentage='0.515974' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zmxr4z0g8guwf1f7qtw61ntolgx].[attr:Energy Consumption:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zmxr4z0g8guwf1f7qtw61ntolgx].[sum:Energy Consumption:qk]&quot;</bucket>
            </map>
            <map to='#6fa71b'>
              <bucket>&quot;[federated.0zmxr4z0g8guwf1f7qtw61ntolgx]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0zmxr4z0g8guwf1f7qtw61ntolgx].[none:GDP:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0zmxr4z0g8guwf1f7qtw61ntolgx].[sum:GDP:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Consumption_Forecast (Alternative_Investment_dataset) (2)' inline='true' name='federated.0zueiss04ggew41c7rs5b18rsrm9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Alternative_Investment_dataset' name='excel-direct.11t2g6r1ylwl861892lrs1ncl489'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ROOHI/Desktop/FinalProject_Group3_Storytelling (1).twb Files/Data/Downloads/Alternative_Investment_dataset.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.11t2g6r1ylwl861892lrs1ncl489' name='Consumption_Forecast' table='[Consumption_Forecast$]' type='table'>
          <columns gridOrigin='A1:T37:no:A1:T37:0' header='yes' outcome='2'>
            <column datatype='string' name='Region' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='real' name='Population 2019' ordinal='2' />
            <column datatype='real' name='Population with access to electricity' ordinal='3' />
            <column datatype='real' name='Household' ordinal='4' />
            <column datatype='real' name='Household 1' ordinal='5' />
            <column datatype='real' name='Installed Capacity MW(2015)' ordinal='6' />
            <column datatype='real' name='Installed Capacity GW(2015)' ordinal='7' />
            <column datatype='real' name='2016' ordinal='8' />
            <column datatype='real' name='2017' ordinal='9' />
            <column datatype='real' name='2018' ordinal='10' />
            <column datatype='real' name='2019' ordinal='11' />
            <column datatype='real' name='Consumption GWh(2019)' ordinal='12' />
            <column datatype='real' name='Consumption 88%' ordinal='13' />
            <column datatype='real' name='Consumption GW 2019' ordinal='14' />
            <column datatype='real' name='Deficit 2019(GW)' ordinal='15' />
            <column datatype='real' name='Consumption GWh(2018)' ordinal='16' />
            <column datatype='real' name='Consumption 88% 1' ordinal='17' />
            <column datatype='real' name='Consumption GW 2018' ordinal='18' />
            <column datatype='real' name='Deficit 2018(GW)' ordinal='19' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population 2019</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population 2019]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Population 2019</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population with access to electricity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population with access to electricity]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Population with access to electricity</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Household</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Household]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Household</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Household 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Household 1]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Household 1</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Installed Capacity MW(2015)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Installed Capacity MW(2015)]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Installed Capacity MW(2015)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Installed Capacity GW(2015)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Installed Capacity GW(2015)]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Installed Capacity GW(2015)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2016]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>2016</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2017]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>2017</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>2018</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2019</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2019]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>2019</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumption GWh(2019)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Consumption GWh(2019)]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Consumption GWh(2019)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumption 88%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Consumption 88%]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Consumption 88%</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumption GW 2019</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Consumption GW 2019]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Consumption GW 2019</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deficit 2019(GW)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deficit 2019(GW)]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Deficit 2019(GW)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumption GWh(2018)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Consumption GWh(2018)]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Consumption GWh(2018)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumption 88% 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Consumption 88% 1]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Consumption 88% 1</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumption GW 2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Consumption GW 2018]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Consumption GW 2018</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deficit 2018(GW)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deficit 2018(GW)]</local-name>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias>Deficit 2018(GW)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Consumption_Forecast]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:T37:no:A1:T37:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Population 2019]' role='measure' type='quantitative' />
      <column datatype='real' name='[Population with access to electricity]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Population 2019]' derivation='Attribute' name='[attr:Population 2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population with access to electricity]' derivation='Attribute' name='[attr:Population with access to electricity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population 2019]' derivation='Sum' name='[sum:Population 2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population with access to electricity]' derivation='Sum' name='[sum:Population with access to electricity:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.182109' measure-ordering='alphabetic' measure-percentage='0.817891' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zueiss04ggew41c7rs5b18rsrm9].[attr:Population 2019:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0zueiss04ggew41c7rs5b18rsrm9].[sum:Population 2019:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0zueiss04ggew41c7rs5b18rsrm9]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0zueiss04ggew41c7rs5b18rsrm9].[attr:Population with access to electricity:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0zueiss04ggew41c7rs5b18rsrm9].[sum:Population with access to electricity:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Deficit/Surplus' inline='true' name='federated.0v95dj11eh3k831f6wedo1oz3bp9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Class Dataset' name='excel-direct.0zpztei0ao3v9t14u3iun0v0kjfw'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ROOHI/Desktop/FinalProject_Group3_Storytelling (1).twb Files/Data/Personal/Class Dataset.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0zpztei0ao3v9t14u3iun0v0kjfw' name='Deficit by State' table='[&apos;Deficit by State$&apos;]' type='table'>
          <columns gridOrigin='A1:C52:no:A1:C52:0' header='yes' outcome='2'>
            <column datatype='string' name='State/Union Territory' ordinal='0' />
            <column datatype='string' name='F2' ordinal='1' />
            <column datatype='real' name='% Renewable' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>State/Union Territory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State/Union Territory]</local-name>
            <parent-name>[Deficit by State]</parent-name>
            <remote-alias>State/Union Territory</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[Deficit by State]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% Renewable</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% Renewable]</local-name>
            <parent-name>[Deficit by State]</parent-name>
            <remote-alias>% Renewable</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Deficit by State]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C52:no:A1:C52:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([% Renewable]) / TOTAL(SUM([% Renewable]))'>
          <table-calc ordering-type='Table' />
        </calculation>
      </column>
      <column caption='Deficit/Surplus' datatype='string' name='[F2]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='Adequate' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State/Union Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[F2]' derivation='None' name='[none:F2:nk]' pivot='key' type='nominal' />
      <column-instance column='[State/Union Territory]' derivation='None' name='[none:State/Union Territory:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Deficit/Surplus,State/Union Territory)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:F2:nk]' />
          <groupfilter function='level-members' level='[none:State/Union Territory:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.398089' measure-ordering='alphabetic' measure-percentage='0.601911' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:F2:nk]' type='palette'>
            <map to='#309143'>
              <bucket>&quot;82\%&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;17\%&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;32\%&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;4\%&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;5\%&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;6\%&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;7\%&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;8\%&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Deficit/Surplus&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;-15\%&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;-19\%&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;-10\%&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;-13\%&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;-7\%&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;-4\%&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;-5\%&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='AlternativeSource_Distribution' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Energy Source (Installed!Capacity!by!State!cro)' />
        <param name='target' value='AlternativeSource_Distribution' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Coal Imports'>
      <layout-options>
        <title>
          <formatted-text>
            <run>National Security - Coal Imports</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Country_Imports_data+ (Class Dataset)' name='federated.0oa07rc1cqtrrh193iq9v132xasv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0oa07rc1cqtrrh193iq9v132xasv'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;BAHARAIN IS&quot;' value='&quot;Bahrain&quot;' />
                <semantic-value key='&quot;CHINA P R&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;NETHERLAND&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;SAUDI ARAB&quot;' value='&quot;Saudi Arabia&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Qty In Million Tonnes]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Qty In Million Tonnes]' derivation='Sum' name='[sum:Qty In Million Tonnes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0oa07rc1cqtrrh193iq9v132xasv].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0oa07rc1cqtrrh193iq9v132xasv].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0oa07rc1cqtrrh193iq9v132xasv].[Longitude (generated)]' field-type='quantitative' max='27198633.237886038' min='-20179164.403052434' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0oa07rc1cqtrrh193iq9v132xasv].[Latitude (generated)]' field-type='quantitative' max='13249061.615202811' min='-6515909.2490889858' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0oa07rc1cqtrrh193iq9v132xasv].[sum:Qty In Million Tonnes:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0oa07rc1cqtrrh193iq9v132xasv].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0oa07rc1cqtrrh193iq9v132xasv].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0oa07rc1cqtrrh193iq9v132xasv].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0oa07rc1cqtrrh193iq9v132xasv].[sum:Qty In Million Tonnes:qk]' value='Coal In Million Tonnes'>
              <formatted-text>
                <run>Coal In Million Tonnes</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0oa07rc1cqtrrh193iq9v132xasv].[sum:Qty In Million Tonnes:qk]' />
              <text column='[federated.0oa07rc1cqtrrh193iq9v132xasv].[sum:Qty In Million Tonnes:qk]' />
              <lod column='[federated.0oa07rc1cqtrrh193iq9v132xasv].[none:Country:nk]' />
              <geometry column='[federated.0oa07rc1cqtrrh193iq9v132xasv].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oa07rc1cqtrrh193iq9v132xasv].[Latitude (generated)]</rows>
        <cols>[federated.0oa07rc1cqtrrh193iq9v132xasv].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3B5B0213-3C3D-4AE8-8A05-99B2371E9E0B}' />
    </worksheet>
    <worksheet name='Deficit/Surplus Bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deficit/Surplus Renewable %</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Deficit/Surplus' name='federated.0v95dj11eh3k831f6wedo1oz3bp9' />
          </datasources>
          <datasource-dependencies datasource='federated.0v95dj11eh3k831f6wedo1oz3bp9'>
            <column datatype='real' name='[% Renewable]' role='measure' type='quantitative' />
            <column caption='Deficit/Surplus' datatype='string' name='[F2]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Adequate' />
              </aliases>
            </column>
            <column datatype='string' name='[State/Union Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[F2]' derivation='None' name='[none:F2:nk]' pivot='key' type='nominal' />
            <column-instance column='[State/Union Territory]' derivation='None' name='[none:State/Union Territory:nk]' pivot='key' type='nominal' />
            <column-instance column='[% Renewable]' derivation='Sum' name='[sum:% Renewable:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:State/Union Territory:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State/Union Territory:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:State/Union Territory:nk]' member='%null%' />
                <groupfilter function='member' level='[none:State/Union Territory:nk]' member='&quot;DVC&quot;' />
                <groupfilter function='member' level='[none:State/Union Territory:nk]' member='&quot;Eastern Region&quot;' />
                <groupfilter function='member' level='[none:State/Union Territory:nk]' member='&quot;North-Eastern Region&quot;' />
                <groupfilter function='member' level='[none:State/Union Territory:nk]' member='&quot;Northern Region&quot;' />
                <groupfilter function='member' level='[none:State/Union Territory:nk]' member='&quot;Southern Region&quot;' />
                <groupfilter function='member' level='[none:State/Union Territory:nk]' member='&quot;Western Region&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:State/Union Territory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:F2:nk]' />
              <lod column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[sum:% Renewable:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[sum:% Renewable:qk]</rows>
        <cols>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:State/Union Territory:nk]</cols>
      </table>
      <simple-id uuid='{A9ECD7FB-17FD-44E8-BEC5-CDF47A056B01}' />
    </worksheet>
    <worksheet name='Deficit/Surplus Bubbles'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deficit/Surplus Renewable %</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Deficit/Surplus' name='federated.0v95dj11eh3k831f6wedo1oz3bp9' />
          </datasources>
          <datasource-dependencies datasource='federated.0v95dj11eh3k831f6wedo1oz3bp9'>
            <column datatype='real' name='[% Renewable]' role='measure' type='quantitative' />
            <column caption='Deficit/Surplus' datatype='string' name='[F2]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Adequate' />
              </aliases>
            </column>
            <column datatype='string' name='[State/Union Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[F2]' derivation='None' name='[none:F2:nk]' pivot='key' type='nominal' />
            <column-instance column='[State/Union Territory]' derivation='None' name='[none:State/Union Territory:nk]' pivot='key' type='nominal' />
            <column-instance column='[% Renewable]' derivation='Sum' name='[sum:% Renewable:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[Exclusions (Deficit/Surplus,State/Union Territory)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:F2:nk]' />
                <groupfilter function='level-members' level='[none:State/Union Territory:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:F2:nk]' member='%null%' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:State/Union Territory:nk]' member='&quot;Central - Unallocated&quot;' />
                  <groupfilter function='member' level='[none:State/Union Territory:nk]' member='&quot;Eastern Region&quot;' />
                  <groupfilter function='member' level='[none:State/Union Territory:nk]' member='&quot;North-Eastern Region&quot;' />
                  <groupfilter function='member' level='[none:State/Union Territory:nk]' member='&quot;Northern Region&quot;' />
                  <groupfilter function='member' level='[none:State/Union Territory:nk]' member='&quot;Southern Region&quot;' />
                  <groupfilter function='member' level='[none:State/Union Territory:nk]' member='&quot;Western Region&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[sum:% Renewable:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[Exclusions (Deficit/Surplus,State/Union Territory)]</column>
            <column>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[sum:% Renewable:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[sum:% Renewable:qk]' />
              <text column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:F2:nk]' />
              <text column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:State/Union Territory:nk]' />
              <color column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:F2:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B121B5BA-46AF-46F7-9742-84310587CCD2}' />
    </worksheet>
    <worksheet name='Deficit/Surplus Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deficit/Surplus across states</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Deficit/Surplus' name='federated.0v95dj11eh3k831f6wedo1oz3bp9' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0v95dj11eh3k831f6wedo1oz3bp9'>
            <column caption='Deficit/Surplus' datatype='string' name='[F2]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Adequate' />
              </aliases>
            </column>
            <column datatype='string' name='[State/Union Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[F2]' derivation='None' name='[none:F2:nk]' pivot='key' type='nominal' />
            <column-instance column='[State/Union Territory]' derivation='None' name='[none:State/Union Territory:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:F2:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:F2:nk]' />
              <groupfilter function='member' level='[none:F2:nk]' member='&quot;Deficit/Surplus&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:F2:nk]</column>
            <column>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[Latitude (generated)]</column>
            <column>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[Longitude (generated)]' field-type='quantitative' max='11071660.647570554' min='6885689.338279454' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[Latitude (generated)]' field-type='quantitative' max='4571299.3394729514' min='845565.62065502722' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:State/Union Territory:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:State/Union Territory:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:State/Union Territory:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:F2:nk]' />
              <text column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:F2:nk]' />
              <lod column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:State/Union Territory:nk]' />
              <geometry column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[Latitude (generated)]</rows>
        <cols>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3F62D96B-AE13-4C00-928E-3175F7DC86A1}' />
    </worksheet>
    <worksheet name='Demand forecast  2018 Vs  2019'>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumption_Forecast (Alternative_Investment_dataset)' name='federated.1d0ssow19n9rtn13fdz711dpll1z' />
          </datasources>
          <datasource-dependencies datasource='federated.1d0ssow19n9rtn13fdz711dpll1z'>
            <column datatype='real' name='[Consumption GWh(2018)]' role='measure' type='quantitative' />
            <column caption='Deficit 2018(GW) ' datatype='real' name='[Deficit 2019(GW) 1]' role='measure' type='quantitative' />
            <column datatype='real' name='[Deficit 2019(GW)]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Deficit 2019(GW) 1]' derivation='Attribute' name='[attr:Deficit 2019(GW) 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deficit 2019(GW)]' derivation='Attribute' name='[attr:Deficit 2019(GW):qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption GWh(2018)]' derivation='Sum' name='[sum:Consumption GWh(2018):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deficit 2019(GW)]' derivation='Sum' name='[sum:Deficit 2019(GW):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW):qk]' scope='cols' value='Deficit / Surplus 2019' />
            <encoding attr='space' class='0' field='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW) 1:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW) 1:qk]' scope='cols' value='Deficit / Surplus 2018' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1d0ssow19n9rtn13fdz711dpll1z].[sum:Consumption GWh(2018):qk]' palette='green_gold_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1d0ssow19n9rtn13fdz711dpll1z].[sum:Deficit 2019(GW):qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <reference-line axis-column='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW):qk]' z-order='1' />
            <reference-line axis-column='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW) 1:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='none' probability='95' scope='per-cell' value-column='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW) 1:qk]' z-order='2' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1d0ssow19n9rtn13fdz711dpll1z].[sum:Deficit 2019(GW):qk]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW) 1:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1d0ssow19n9rtn13fdz711dpll1z].[sum:Consumption GWh(2018):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1d0ssow19n9rtn13fdz711dpll1z].[none:State:nk]</rows>
        <cols>([federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW):qk] + [federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW) 1:qk])</cols>
      </table>
      <simple-id uuid='{1EDBFDCB-125E-48A7-BC89-81C7D87916DC}' />
    </worksheet>
    <worksheet name='Demand_Forecast'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Future Energy Demand Forecast</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>The trend of average Consumption of electricity in GWh for Years 2012 to 2023.&#10;The touch points on axis-Y gives the demand forecast with respect to axis-X on the trend line.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumption_By_Region_in_crosst+ (Multiple Connections)' name='federated.0h3ycl41imxh2x19sqe2z1gqepz4' />
          </datasources>
          <datasource-dependencies datasource='federated.0h3ycl41imxh2x19sqe2z1gqepz4'>
            <column datatype='real' name='[Consumption GWh]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Consumption GWh]' derivation='Avg' name='[avg:Consumption GWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Year:qk]' field-type='quantitative' max='2023' min='2012' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[avg:Consumption GWh:qk]' field-type='quantitative' max='2263753.3276538737' min='-56553.437878576107' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='stroke-color' id='annotation_0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[avg:Consumption GWh:qk]</rows>
        <cols>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Year:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: 2018</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Energy Demand GWh: </run>
              <run bold='true'>&lt;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[avg:Consumption GWh:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2017.9903047091414'>
                  <node-reference>
                    <axis>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Year:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='1252254.6958827637'>
                  <node-reference>
                    <axis>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[avg:Consumption GWh:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='77' y='80' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: 2019</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Energy Demand  GWh: </run>
              <run bold='true'>&lt;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[avg:Consumption GWh:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2019.0013850415512'>
                  <node-reference>
                    <axis>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Year:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='1397677.8218562461'>
                  <node-reference>
                    <axis>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[avg:Consumption GWh:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-42' y='-80' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: 2020</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Energy Demand : </run>
              <run bold='true'>&lt;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[avg:Consumption GWh:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2019.9986149584488'>
                  <node-reference>
                    <axis>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Year:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='1539869.3228080957'>
                  <node-reference>
                    <axis>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[avg:Consumption GWh:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='102' y='204' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: 2021</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Energy Demand GWh: </run>
              <run bold='true'>&lt;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[avg:Consumption GWh:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2021.0027700831024'>
                  <node-reference>
                    <axis>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Year:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='1682060.8237599449'>
                  <node-reference>
                    <axis>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[avg:Consumption GWh:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='0' y='-66' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: 2022</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Energy Demand GWh: </run>
              <run bold='true'>&lt;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[avg:Consumption GWh:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2022.0020775623268'>
                  <node-reference>
                    <axis>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Year:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='1827483.9497334268'>
                  <node-reference>
                    <axis>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[avg:Consumption GWh:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-18' y='115' />
          </annotation>
          <annotation class='point' id='6' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: </run>
              <run bold='true'>&lt;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Year:qk]&gt;</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Avg. Consumption GWh: </run>
              <run bold='true'>&lt;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[avg:Consumption GWh:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Year:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[avg:Consumption GWh:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[avg:Consumption GWh:qk]</field>
                      <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Year:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>653528.06981519994</value>
                    <value>2014</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='42' y='80' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: </run>
              <run bold='true'>&lt;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Year:qk]&gt;</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Avg. Consumption GWh: </run>
              <run bold='true'>&lt;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[avg:Consumption GWh:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Year:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[avg:Consumption GWh:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[avg:Consumption GWh:qk]</field>
                      <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Year:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>1102599.6799999999</value>
                    <value>2017</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-88' y='-97' />
          </annotation>
          <annotation class='point' id='8' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: </run>
              <run bold='true'>&lt;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Year:qk]&gt;</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Avg. Consumption GWh: </run>
              <run bold='true'>&lt;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[avg:Consumption GWh:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Year:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[avg:Consumption GWh:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[avg:Consumption GWh:qk]</field>
                      <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Year:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>946600.0</value>
                    <value>2016</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='78' y='102' />
          </annotation>
          <annotation class='point' id='9' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: </run>
              <run bold='true'>&lt;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Year:qk]&gt;</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Avg. Consumption GWh: </run>
              <run bold='true'>&lt;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[avg:Consumption GWh:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Year:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[avg:Consumption GWh:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[avg:Consumption GWh:qk]</field>
                      <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Year:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>836321.10000000044</value>
                    <value>2015</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-80' y='-55' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{8B4D422A-2D8B-445D-B78E-A7FF71268E3C}' />
    </worksheet>
    <worksheet name='Energy Consumption Vs Intalled Capacuty 2018'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Energy Consumption Vs Intalled Capacity 2018</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumption_Forecast (Alternative_Investment_dataset)' name='federated.1d0ssow19n9rtn13fdz711dpll1z' />
          </datasources>
          <datasource-dependencies datasource='federated.1d0ssow19n9rtn13fdz711dpll1z'>
            <column datatype='real' name='[2018]' role='measure' type='quantitative' />
            <column caption='Consumption GW 2018' datatype='real' name='[Consumption GW 2019 1]' role='measure' type='quantitative' />
            <column caption='Deficit 2018(GW) ' datatype='real' name='[Deficit 2019(GW) 1]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[2018]' derivation='Attribute' name='[attr:2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Consumption GW 2019 1]' derivation='Attribute' name='[attr:Consumption GW 2019 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deficit 2019(GW) 1]' derivation='Attribute' name='[attr:Deficit 2019(GW) 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Consumption GW 2019 1:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Consumption GW 2019 1:qk]' scope='rows' value='Consumption GW ' />
            <format attr='title' class='0' field='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:2018:qk]' scope='rows' value='Installed Capacity' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW) 1:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:2018:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW) 1:qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Consumption GW 2019 1:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW) 1:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:2018:qk] + [federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Consumption GW 2019 1:qk])</rows>
        <cols>[federated.1d0ssow19n9rtn13fdz711dpll1z].[none:State:nk]</cols>
      </table>
      <simple-id uuid='{A091BBD4-DFDA-4D8F-99B9-F27AB14420B2}' />
    </worksheet>
    <worksheet name='Energy Consumption Vs Intalled Capacuty 2019'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Energy Consumption Vs Intalled Capacuty 2019</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumption_Forecast (Alternative_Investment_dataset)' name='federated.1d0ssow19n9rtn13fdz711dpll1z' />
          </datasources>
          <datasource-dependencies datasource='federated.1d0ssow19n9rtn13fdz711dpll1z'>
            <column datatype='real' name='[2019]' role='measure' type='quantitative' />
            <column datatype='real' name='[Consumption GW 2019]' role='measure' type='quantitative' />
            <column caption='Deficit 2018(GW) ' datatype='real' name='[Deficit 2019(GW) 1]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[2019]' derivation='Attribute' name='[attr:2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Consumption GW 2019]' derivation='Attribute' name='[attr:Consumption GW 2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deficit 2019(GW) 1]' derivation='Attribute' name='[attr:Deficit 2019(GW) 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Consumption GW 2019:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:2019:qk]' scope='rows' value='Installed Capacity' />
            <format attr='title' class='0' field='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Consumption GW 2019:qk]' scope='rows' value='Consumption GW ' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW) 1:qk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:2019:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW) 1:qk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Consumption GW 2019:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW) 1:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:2019:qk] + [federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Consumption GW 2019:qk])</rows>
        <cols>[federated.1d0ssow19n9rtn13fdz711dpll1z].[none:State:nk]</cols>
      </table>
      <simple-id uuid='{15D424EA-AC55-4DEA-B06E-29B9C8196601}' />
    </worksheet>
    <worksheet name='Energy deficit/surplus across states for Renewable Sources'>
      <table>
        <view>
          <datasources>
            <datasource caption='Deficit/Surplus' name='federated.0v95dj11eh3k831f6wedo1oz3bp9' />
          </datasources>
          <datasource-dependencies datasource='federated.0v95dj11eh3k831f6wedo1oz3bp9'>
            <column datatype='real' name='[% Renewable]' role='measure' type='quantitative' />
            <column caption='Deficit/Surplus' datatype='string' name='[F2]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Adequate' />
              </aliases>
            </column>
            <column datatype='string' name='[State/Union Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[F2]' derivation='None' name='[none:F2:nk]' pivot='key' type='nominal' />
            <column-instance column='[State/Union Territory]' derivation='None' name='[none:State/Union Territory:nk]' pivot='key' type='nominal' />
            <column-instance column='[% Renewable]' derivation='Sum' name='[sum:% Renewable:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:State/Union Territory:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Andaman &amp; Nicobar&quot;' function='range' level='[none:State/Union Territory:nk]' to='&quot;Bihar&quot;' />
              <groupfilter from='&quot;Chandigarh&quot;' function='range' level='[none:State/Union Territory:nk]' to='&quot;Delhi&quot;' />
              <groupfilter from='&quot;Goa&quot;' function='range' level='[none:State/Union Territory:nk]' to='&quot;Nagaland&quot;' />
              <groupfilter from='&quot;Odisha&quot;' function='range' level='[none:State/Union Territory:nk]' to='&quot;Sikkim&quot;' />
              <groupfilter function='member' level='[none:State/Union Territory:nk]' member='&quot;Tamil Nadu&quot;' />
              <groupfilter function='member' level='[none:State/Union Territory:nk]' member='&quot;Telangana&quot;' />
              <groupfilter from='&quot;Tripura&quot;' function='range' level='[none:State/Union Territory:nk]' to='&quot;West Bengal&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:State/Union Territory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#555555' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='stroke-color' id='refline3' value='#555555' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='reverse-palette' id='refline0' value='false' />
            <format attr='stroke-color' id='refline0' value='#666666' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:F2:nk]' />
              <text column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:F2:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[sum:% Renewable:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='average' id='refline0' label-type='automatic' percentage-bands='true' probability='95' scope='per-pane' symmetric='false' value-column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[sum:% Renewable:qk]' z-order='1'>
              <reference-line-value percentage='60' />
              <reference-line-value percentage='80' />
            </reference-line>
            <reference-line axis-column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[sum:% Renewable:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[sum:% Renewable:qk]' z-order='2' />
            <reference-line axis-column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[sum:% Renewable:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline2' label-type='none' scope='per-pane' symmetric='true' tile-count='4' value-column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[sum:% Renewable:qk]' z-order='3' />
            <reference-line axis-column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[sum:% Renewable:qk]' enable-instant-analytics='true' formula='median' id='refline3' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[sum:% Renewable:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:State/Union Territory:nk]</rows>
        <cols>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[sum:% Renewable:qk]</cols>
      </table>
      <simple-id uuid='{9D95155B-BAA8-4195-8C00-09E1E6B229C0}' />
    </worksheet>
    <worksheet name='Forecasted Deficit for Each State 2018'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Forecasted Consumption(Deficit/Surplus)  for Each State 2018</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumption_Forecast (Alternative_Investment_dataset)' name='federated.1d0ssow19n9rtn13fdz711dpll1z' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1d0ssow19n9rtn13fdz711dpll1z'>
            <column caption='Deficit 2018(GW) ' datatype='real' name='[Deficit 2019(GW) 1]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Deficit 2019(GW) 1]' derivation='Attribute' name='[attr:Deficit 2019(GW) 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW) 1:qk]' />
              <text column='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW) 1:qk]' />
              <text column='[federated.1d0ssow19n9rtn13fdz711dpll1z].[none:State:nk]' />
              <lod column='[federated.1d0ssow19n9rtn13fdz711dpll1z].[none:State:nk]' />
              <geometry column='[federated.1d0ssow19n9rtn13fdz711dpll1z].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1d0ssow19n9rtn13fdz711dpll1z].[Latitude (generated)]</rows>
        <cols>[federated.1d0ssow19n9rtn13fdz711dpll1z].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{10F47595-EDE3-4394-8D6E-D39EAD5F8F9F}' />
    </worksheet>
    <worksheet name='Forecasted Deficit for Each State 2018 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Forecasted Consumption(Deficit/Surplus) for Each State 2019</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumption_Forecast (Alternative_Investment_dataset)' name='federated.1d0ssow19n9rtn13fdz711dpll1z' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1d0ssow19n9rtn13fdz711dpll1z'>
            <column datatype='real' name='[Deficit 2019(GW)]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Deficit 2019(GW)]' derivation='Attribute' name='[attr:Deficit 2019(GW):qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1d0ssow19n9rtn13fdz711dpll1z].[Longitude (generated)]' field-type='quantitative' max='8517445.690583175' min='6927676.2395654563' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1d0ssow19n9rtn13fdz711dpll1z].[Latitude (generated)]' field-type='quantitative' max='2809575.0701854401' min='1582730.6151598571' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW):qk]' />
              <text column='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW):qk]' />
              <text column='[federated.1d0ssow19n9rtn13fdz711dpll1z].[none:State:nk]' />
              <lod column='[federated.1d0ssow19n9rtn13fdz711dpll1z].[none:State:nk]' />
              <geometry column='[federated.1d0ssow19n9rtn13fdz711dpll1z].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1d0ssow19n9rtn13fdz711dpll1z].[Latitude (generated)]</rows>
        <cols>[federated.1d0ssow19n9rtn13fdz711dpll1z].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5C3868CF-CA03-4B64-8D06-A3842D13DF92}' />
    </worksheet>
    <worksheet name='Overall GDP and Energy Consumption Relation'>
      <table>
        <view>
          <datasources>
            <datasource caption='Overall GDP  (GDP-Consumption Region)' name='federated.1ubxuip1myrp4m17xd21g0kuna3p' />
          </datasources>
          <datasource-dependencies datasource='federated.1ubxuip1myrp4m17xd21g0kuna3p'>
            <column datatype='real' name='[Energy Consumtion]' role='measure' type='quantitative' />
            <column datatype='real' name='[GDP]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Energy Consumtion]' derivation='Attribute' name='[attr:Energy Consumtion:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP]' derivation='Attribute' name='[attr:GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Energy Consumtion]' derivation='None' name='[none:Energy Consumtion:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP]' derivation='None' name='[none:GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ubxuip1myrp4m17xd21g0kuna3p].[none:Energy Consumtion:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ubxuip1myrp4m17xd21g0kuna3p].[none:GDP:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.1ubxuip1myrp4m17xd21g0kuna3p].[attr:GDP:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#d3b348' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ubxuip1myrp4m17xd21g0kuna3p].[none:Energy Consumtion:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.1ubxuip1myrp4m17xd21g0kuna3p].[attr:Energy Consumtion:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year of Year:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Energy Consumtion:&#9;&lt;[federated.1ubxuip1myrp4m17xd21g0kuna3p].[none:Energy Consumtion:qk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ubxuip1myrp4m17xd21g0kuna3p].[none:GDP:qk] + [federated.1ubxuip1myrp4m17xd21g0kuna3p].[none:Energy Consumtion:qk])</rows>
        <cols>[federated.1ubxuip1myrp4m17xd21g0kuna3p].[tyr:Year:qk]</cols>
      </table>
      <simple-id uuid='{BFD9AABF-A930-43D9-811A-A810D4657C12}' />
    </worksheet>
    <worksheet name='Region Wise Energy Consumption and GDP'>
      <table>
        <view>
          <datasources>
            <datasource caption='Region Wise Consumtion and GDP (GDP-Consumption Region) (2)' name='federated.0zmxr4z0g8guwf1f7qtw61ntolgx (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.0zmxr4z0g8guwf1f7qtw61ntolgx (copy)'>
            <column datatype='real' name='[Energy Consumption]' role='measure' type='quantitative' />
            <column datatype='real' name='[GDP]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' fiscal-year-start='3' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Energy Consumption]' derivation='Attribute' name='[attr:Energy Consumption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP]' derivation='Attribute' name='[attr:GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Energy Consumption]' derivation='None' name='[none:Energy Consumption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP]' derivation='None' name='[none:GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0zmxr4z0g8guwf1f7qtw61ntolgx (copy)].[none:GDP:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0zmxr4z0g8guwf1f7qtw61ntolgx (copy)].[none:GDP:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0zmxr4z0g8guwf1f7qtw61ntolgx (copy)].[none:Energy Consumption:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0zmxr4z0g8guwf1f7qtw61ntolgx (copy)].[:Measure Names]' />
              <text column='[federated.0zmxr4z0g8guwf1f7qtw61ntolgx (copy)].[attr:Energy Consumption:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0zmxr4z0g8guwf1f7qtw61ntolgx (copy)].[none:GDP:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.0zmxr4z0g8guwf1f7qtw61ntolgx (copy)].[attr:GDP:qk]' />
              <tooltip column='[federated.0zmxr4z0g8guwf1f7qtw61ntolgx (copy)].[attr:Energy Consumption:qk]' />
              <lod column='[federated.0zmxr4z0g8guwf1f7qtw61ntolgx (copy)].[tyr:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0zmxr4z0g8guwf1f7qtw61ntolgx (copy)].[none:Energy Consumption:qk] + [federated.0zmxr4z0g8guwf1f7qtw61ntolgx (copy)].[none:GDP:qk])</rows>
        <cols>([federated.0zmxr4z0g8guwf1f7qtw61ntolgx (copy)].[none:Region:nk] * [federated.0zmxr4z0g8guwf1f7qtw61ntolgx (copy)].[tyr:Year:qk])</cols>
      </table>
      <simple-id uuid='{E960776D-22FE-4B2E-9097-F7D362AE4A0E}' />
    </worksheet>
    <worksheet name='Region_Sources_Of_Energy1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Source Of Energy Recommendation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumption_By_Region_in_crosst+ (Multiple Connections)' name='federated.0h3ycl41imxh2x19sqe2z1gqepz4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0h3ycl41imxh2x19sqe2z1gqepz4'>
            <column datatype='real' name='[Capacity MW]' role='measure' type='quantitative' />
            <column datatype='real' name='[CapacityIdentified MW]' role='measure' type='quantitative' />
            <column datatype='string' name='[Energy Source (Installed!Capacity!by!State!cro)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Energy Source (Installed!Capacity!by!State!cro)]' derivation='None' name='[none:Energy Source (Installed!Capacity!by!State!cro):nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Capacity MW]' derivation='Sum' name='[sum:Capacity MW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CapacityIdentified MW]' derivation='Sum' name='[sum:CapacityIdentified MW:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Energy Source (Installed!Capacity!by!State!cro):nk]' />
              <groupfilter function='member' level='[none:Energy Source (Installed!Capacity!by!State!cro):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Capacity MW:qk]' scope='cols' value='Installed Capacity MW' />
            <format attr='title' class='0' field='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:CapacityIdentified MW:qk]' scope='rows' value='Potential Capacity MW' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='shape' field='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]' value='Energy Source'>
              <formatted-text>
                <run>Energy Source</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-snap-zoom' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Region:nk]' />
              <shape column='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]' />
              <text column='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:CapacityIdentified MW:qk]</rows>
        <cols>([federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Region:nk] * [federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Capacity MW:qk])</cols>
      </table>
      <simple-id uuid='{BC6FF42D-1DF9-49EB-AB43-963AF12AD615}' />
    </worksheet>
    <worksheet name='Region_Sources_Of_Energy2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Source Of Energy Recommendation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumption_By_Region_in_crosst+ (Multiple Connections)' name='federated.0h3ycl41imxh2x19sqe2z1gqepz4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0h3ycl41imxh2x19sqe2z1gqepz4'>
            <column datatype='real' name='[Capacity MW]' role='measure' type='quantitative' />
            <column datatype='real' name='[CapacityIdentified MW]' role='measure' type='quantitative' />
            <column datatype='string' name='[Energy Source (Installed!Capacity!by!State!cro)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Energy Source (Installed!Capacity!by!State!cro)]' derivation='None' name='[none:Energy Source (Installed!Capacity!by!State!cro):nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Capacity MW]' derivation='Sum' name='[sum:Capacity MW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CapacityIdentified MW]' derivation='Sum' name='[sum:CapacityIdentified MW:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Capacity MW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:CapacityIdentified MW:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Energy Source (Installed!Capacity!by!State!cro):nk]' />
              <groupfilter function='member' level='[none:Energy Source (Installed!Capacity!by!State!cro):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]</column>
            <column>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-snap-zoom' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[:Measure Names]' />
              <lod column='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Capacity MW:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[Multiple Values]</rows>
        <cols>([federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Region:nk] / [federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk])</cols>
      </table>
      <simple-id uuid='{0CF0ECF0-1BF5-4BDA-99C6-72A6668C01D1}' />
    </worksheet>
    <worksheet name='Region_Sources_Of_Energy3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Source Of Energy Recommendation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumption_By_Region_in_crosst+ (Multiple Connections)' name='federated.0h3ycl41imxh2x19sqe2z1gqepz4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0h3ycl41imxh2x19sqe2z1gqepz4'>
            <column datatype='real' name='[Capacity MW]' role='measure' type='quantitative' />
            <column datatype='real' name='[CapacityIdentified MW]' role='measure' type='quantitative' />
            <column datatype='string' name='[Energy Source (Installed!Capacity!by!State!cro)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Energy Source (Installed!Capacity!by!State!cro)]' derivation='None' name='[none:Energy Source (Installed!Capacity!by!State!cro):nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Capacity MW]' derivation='Sum' name='[sum:Capacity MW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CapacityIdentified MW]' derivation='Sum' name='[sum:CapacityIdentified MW:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Capacity MW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:CapacityIdentified MW:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Energy Source (Installed!Capacity!by!State!cro):nk]' />
              <groupfilter function='member' level='[none:Energy Source (Installed!Capacity!by!State!cro):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]</column>
            <column>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-snap-zoom' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]' />
              <lod column='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Capacity MW:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[Multiple Values]</rows>
        <cols>([federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Region:nk] / [federated.0h3ycl41imxh2x19sqe2z1gqepz4].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{A0DE2312-4CCB-4C26-A466-C04A9F4C91B2}' />
    </worksheet>
    <worksheet name='Region_Sources_Of_Energy4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Source Of Energy Recommendation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumption_By_Region_in_crosst+ (Multiple Connections)' name='federated.0h3ycl41imxh2x19sqe2z1gqepz4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0h3ycl41imxh2x19sqe2z1gqepz4'>
            <column datatype='real' name='[Capacity MW]' role='measure' type='quantitative' />
            <column datatype='real' name='[CapacityIdentified MW]' role='measure' type='quantitative' />
            <column datatype='string' name='[Energy Source (Installed!Capacity!by!State!cro)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Energy Source (Installed!Capacity!by!State!cro)]' derivation='None' name='[none:Energy Source (Installed!Capacity!by!State!cro):nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Capacity MW]' derivation='Sum' name='[sum:Capacity MW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CapacityIdentified MW]' derivation='Sum' name='[sum:CapacityIdentified MW:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Capacity MW:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:CapacityIdentified MW:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Capacity MW:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:CapacityIdentified MW:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Energy Source (Installed!Capacity!by!State!cro):nk]' />
              <groupfilter function='member' level='[none:Energy Source (Installed!Capacity!by!State!cro):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]</column>
            <column>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-snap-zoom' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[:Measure Names]' />
              <color column='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[Multiple Values]</rows>
        <cols>([federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Region:nk] / ([federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk] / [federated.0h3ycl41imxh2x19sqe2z1gqepz4].[:Measure Names]))</cols>
      </table>
      <simple-id uuid='{FF88AC7A-B130-4F12-B8CB-7B0191E34350}' />
    </worksheet>
    <worksheet name='Sources_Of_Energy'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Source Of Energy Recommendation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumption_By_Region_in_crosst+ (Multiple Connections)' name='federated.0h3ycl41imxh2x19sqe2z1gqepz4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0h3ycl41imxh2x19sqe2z1gqepz4'>
            <column datatype='real' name='[Capacity MW]' role='measure' type='quantitative' />
            <column datatype='real' name='[CapacityIdentified MW]' role='measure' type='quantitative' />
            <column datatype='string' name='[Energy Source (Installed!Capacity!by!State!cro)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Energy Source (Installed!Capacity!by!State!cro)]' derivation='None' name='[none:Energy Source (Installed!Capacity!by!State!cro):nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Capacity MW]' derivation='Sum' name='[sum:Capacity MW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CapacityIdentified MW]' derivation='Sum' name='[sum:CapacityIdentified MW:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Energy Source (Installed!Capacity!by!State!cro):nk]' />
              <groupfilter function='member' level='[none:Energy Source (Installed!Capacity!by!State!cro):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Capacity MW:qk]' scope='cols' value='Installed Capacity MW' />
            <format attr='title' class='0' field='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:CapacityIdentified MW:qk]' scope='rows' value='Potential Capacity MW' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='shape' field='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]' value='Energy Source'>
              <formatted-text>
                <run>Energy Source</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-snap-zoom' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Region:nk]' />
              <shape column='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]' />
              <text column='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Region:nk]' />
              <text column='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:CapacityIdentified MW:qk]</rows>
        <cols>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Capacity MW:qk]</cols>
      </table>
      <simple-id uuid='{370C8BA8-6AFF-41BE-9F85-47368215582C}' />
    </worksheet>
    <worksheet name='oil Imports'>
      <layout-options>
        <title>
          <formatted-text>
            <run>National Security - Oil Imports</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='XI.9_Chapter_xi_2017' name='federated.1ou07g61kn9s0q18t8rmg0d7s6ie' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ou07g61kn9s0q18t8rmg0d7s6ie'>
            <column datatype='real' name='[2016]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[2016]' derivation='Sum' name='[sum:2016:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ou07g61kn9s0q18t8rmg0d7s6ie].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1ou07g61kn9s0q18t8rmg0d7s6ie].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1ou07g61kn9s0q18t8rmg0d7s6ie].[none:Country/Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country/Region:nk]' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;India&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ou07g61kn9s0q18t8rmg0d7s6ie].[none:Country/Region:nk]</column>
            <column>[federated.1ou07g61kn9s0q18t8rmg0d7s6ie].[Latitude (generated)]</column>
            <column>[federated.1ou07g61kn9s0q18t8rmg0d7s6ie].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ou07g61kn9s0q18t8rmg0d7s6ie].[Longitude (generated)]' field-type='quantitative' max='41751378.341591343' min='-16166401.400436256' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ou07g61kn9s0q18t8rmg0d7s6ie].[Latitude (generated)]' field-type='quantitative' max='19892625.900855858' min='-14778032.411553308' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ou07g61kn9s0q18t8rmg0d7s6ie].[sum:2016:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1ou07g61kn9s0q18t8rmg0d7s6ie].[none:Country/Region:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1ou07g61kn9s0q18t8rmg0d7s6ie].[none:Country/Region:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1ou07g61kn9s0q18t8rmg0d7s6ie].[none:Country/Region:nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1ou07g61kn9s0q18t8rmg0d7s6ie].[sum:2016:qk]' value='Oil import in Million Tonne'>
              <formatted-text>
                <run>Oil import in Million Tonne</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ou07g61kn9s0q18t8rmg0d7s6ie].[sum:2016:qk]' />
              <text column='[federated.1ou07g61kn9s0q18t8rmg0d7s6ie].[sum:2016:qk]' />
              <lod column='[federated.1ou07g61kn9s0q18t8rmg0d7s6ie].[none:Country/Region:nk]' />
              <geometry column='[federated.1ou07g61kn9s0q18t8rmg0d7s6ie].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ou07g61kn9s0q18t8rmg0d7s6ie].[Latitude (generated)]</rows>
        <cols>[federated.1ou07g61kn9s0q18t8rmg0d7s6ie].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{05FF0B4C-1F3B-4221-A1D0-467019162A7A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='AlternativeSource_Distribution'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='49000' id='7' param='horz' type='layout-flow' w='84800' x='800' y='50000'>
            <zone h='49000' id='5' type='layout-basic' w='84800' x='800' y='50000'>
              <zone h='49000' id='10' name='Region_Sources_Of_Energy2' w='84800' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='49000' id='12' name='Region_Sources_Of_Energy3' w='84800' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='53625' id='13' name='Region_Sources_Of_Energy3' pane-specification-id='0' param='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]' type='color' w='13600' x='85600' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='44375' id='11' name='Region_Sources_Of_Energy2' pane-specification-id='0' param='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[:Measure Names]' type='color' w='13600' x='85600' y='54625'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='94' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='95' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49000' id='12' is-fixed='true' name='Region_Sources_Of_Energy3' w='84800' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='53625' id='13' name='Region_Sources_Of_Energy3' pane-specification-id='0' param='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]' type='color' w='13600' x='85600' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='Region_Sources_Of_Energy2' w='84800' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='44375' id='11' name='Region_Sources_Of_Energy2' pane-specification-id='0' param='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[:Measure Names]' type='color' w='13600' x='85600' y='54625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{500E12A5-7A63-4F99-B7C4-4E19F92F1FEF}' />
    </dashboard>
    <dashboard name='Demand Forecast'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='Demand forecast  2018 Vs  2019' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='Demand_Forecast' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='2750' id='8' name='Demand forecast  2018 Vs  2019' pane-specification-id='5' param='[federated.1d0ssow19n9rtn13fdz711dpll1z].[sum:Consumption GWh(2018):qk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='2750' id='9' name='Demand forecast  2018 Vs  2019' pane-specification-id='4' param='[federated.1d0ssow19n9rtn13fdz711dpll1z].[sum:Deficit 2019(GW):qk]' type='color' w='16000' x='83200' y='3750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='53' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='54' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Demand forecast  2018 Vs  2019' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2750' id='8' name='Demand forecast  2018 Vs  2019' pane-specification-id='5' param='[federated.1d0ssow19n9rtn13fdz711dpll1z].[sum:Consumption GWh(2018):qk]' type='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2750' id='9' name='Demand forecast  2018 Vs  2019' pane-specification-id='4' param='[federated.1d0ssow19n9rtn13fdz711dpll1z].[sum:Deficit 2019(GW):qk]' type='color' w='16000' x='83200' y='3750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='Demand_Forecast' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A5397A34-45BD-42DA-8931-6DA431D27595}' />
    </dashboard>
    <dashboard name='Electrification in India' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Electrification in India</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-description'>
          <format attr='font-style' id='story-description_9' value='normal' />
          <format attr='font-weight' id='story-description_9' value='normal' />
          <format attr='text-decoration' id='story-description_9' value='none' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Introduction' captured-sheet='' id='1' />
                  <story-point caption='Assumptions &amp; methodologies' captured-sheet='' id='2' />
                  <story-point caption='Energy deficit/surplus across states' captured-sheet='Energy deficit/surplus across states for Renewable Sources' id='3' />
                  <story-point caption='Dashboard to understand energy deficit/surplus across states' captured-sheet='Energy deficit/surplus Dashboard' id='4' />
                  <story-point caption='Future energqy demand forecast' captured-sheet='Demand_Forecast' id='5' />
                  <story-point caption='Energy Consumption forecast 2018 &amp; 2019' captured-sheet='Energy Consumption Forecast for FY 2018 - 2019' id='6'>
                    <capturedDeltas>
                      <worksheet name='Forecasted Deficit for Each State 2018 (2)'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1d0ssow19n9rtn13fdz711dpll1z].[Latitude (generated)]' field-type='quantitative' max='4896140.853545527' min='62654.34603606473' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1d0ssow19n9rtn13fdz711dpll1z].[Longitude (generated)]' field-type='quantitative' max='12324923.769038163' min='6061595.797779873' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Deficit / Surplus Forecast ' captured-sheet='Demand forecast  2018 Vs  2019' id='7' />
                  <story-point caption='Potential Identified for each source' captured-sheet='Sources_Of_Energy' id='9'>
                    <capturedDeltas>
                      <worksheet name='Sources_Of_Energy'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:CapacityIdentified MW:qk]' field-type='quantitative' max='17523316.841445584' min='-5710390.7434752211' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Capacity MW:qk]' field-type='quantitative' max='9637342.6908461917' min='-4578199.5704659503' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Region Wise potential identified Vs Installed capcity' captured-sheet='AlternativeSource_Distribution' id='8' />
                  <story-point caption='Statewise Recomendation' captured-sheet='Source_Of_Energy_Recommendation' id='10' />
                  <story-point caption='Affects of electricity consumption on GDP' captured-sheet='Overall GDP and Energy Consumption Relation' id='11' />
                  <story-point caption='Region wise GDP releation to energy consumption' captured-sheet='Region Wise Energy Consumption and GDP' id='12' />
                  <story-point caption='National Secuities' captured-sheet='National Security' id='13'>
                    <capturedDeltas>
                      <worksheet name='Coal Imports'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0oa07rc1cqtrrh193iq9v132xasv].[Latitude (generated)]' field-type='quantitative' max='15696113.425697161' min='-4879892.3655723874' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0oa07rc1cqtrrh193iq9v132xasv].[Longitude (generated)]' field-type='quantitative' max='33119912.370466288' min='-16201983.691558434' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <worksheet name='oil Imports'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1ou07g61kn9s0q18t8rmg0d7s6ie].[Latitude (generated)]' field-type='quantitative' max='18227857.065423451' min='-12020759.027868386' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1ou07g61kn9s0q18t8rmg0d7s6ie].[Longitude (generated)]' field-type='quantitative' max='42404228.376723714' min='-30103483.475031938' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Conclusion' captured-sheet='' id='14' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='29046' id='6' story-point-id='1' type='text' w='50886' x='24114' y='28112'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Book,serif'>Data Analysis &amp; Visualization for identifying sources to achieve 100% electrification in India by alternative energy sources and its effects on GDP</run>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Æ </run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='83299' hidden='true' id='7' story-point-id='2' type='text' w='93799' x='4331' y='15249'>
          <formatted-text>
            <run bold='true' fontcolor='#000000'>Assumptions</run>
            <run>Æ&#10;</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000'>-          The government will only subsidize energy if it shows a higher than average relationship between energy consumption and GDP. Further they will give preference to states that have an upcoming general election next year. </run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#000000'>-    2019 is a pivotal year for elections; one of the main agenda items that the ruling party will use to incentives citizenry is electronification of all of India </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#000000'>Methodologies</run>
            <run>Æ&#10;</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000'>Poor Household Electrification:</run>
            <run fontalignment='0' fontcolor='#000000'> Even with 99.5% village electrification in the state, there is only 42% rural household electrification indicating significant rise in energy demand in the future and hence need for increasing the generating capacity and strengthening the transmission and distribution network. The number of consumers would increase in future and distribution utility would have to take care of this </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000'>Æ  </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000'>Energy Consumption by State Methodology</run>
            <run fontalignment='0' fontcolor='#000000'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000'>                Population of states (rural vs. village) use 2011 Census(</run>
            <run auto-url='true' fontalignment='0' fontcolor='#0000ff' hyperlink='tabdoc:load-url url=&amp;quot;http://censusindia.gov.in&amp;quot;' underline='true'>http://censusindia.gov.in</run>
            <run fontalignment='0' fontcolor='#000000'>) assuming 1.3% YoY Growth </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000'>                Consumption by Region (electronification rate) </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000'>                Consumption per Capita by State </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000'>                Aggregate to State Level </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000'>Æ  </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000'>Energy Deficit Methodology</run>
            <run fontalignment='0' fontcolor='#000000'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000'>                Existing Provided Percentages (Deficit by State Tab) </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000'>                Electronification Factor </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000'>                Growth 3% YoY </run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='68568' hidden='true' id='8' story-point-id='14' type='text' w='86220' x='5807' y='18672'>
          <formatted-text>
            <run bold='true' fontname='Tableau Book,serif' fontsize='18'>Conclusion</run>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='18'>Æ </run>
            <run>Æ&#10;</run>
            <run fontname='Tableau Book,serif'>Æ </run>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontname='Tableau Book,serif'>Based on the population growth in India, energy demand is increasing proportionally. </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontname='Tableau Book,serif'>Æ </run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontname='Tableau Book,serif'>The depleting natural resources and threat on national security influence investing in alternative sources for energy generation. </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontname='Tableau Book,serif'>Æ </run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontname='Tableau Book,serif'>The future energy demand needs to be overcome by using locally available resources or renewable sources.</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontname='Tableau Book,serif'>Æ </run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontname='Tableau Book,serif'>The increased imports for sources like Coal, crude oil and another raw materials impact GDP. </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontname='Tableau Book,serif'>Æ </run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontname='Tableau Book,serif'>Taking many factors into consideration like national security, Impact on GDP, pollution and depleting sources we gradually want to move towards renewable resources.</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontname='Tableau Book,serif'>Æ </run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book'>Æ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontname='Tableau Book,serif'>The idea is to bridge the gap between deficit states with surplus states and also increase the potential for generating more from renewable sources.</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book'>Æ </run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontname='Tableau Book,serif'>The Government of India and Private firms can identify the deficit regions to set up power plants and achieve the demand and in turn the 100% electrification benchmark</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book'>Æ </run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{523C3DD1-B836-4B27-A0E6-B9F93D91B7E0}' />
    </dashboard>
    <dashboard name='Energy Consumption Forecast for FY 2018 - 2019'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='48899' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='48899' id='5' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='48899' id='3' name='Forecasted Deficit for Each State 2018' w='41200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48899' id='9' name='Forecasted Deficit for Each State 2018 (2)' w='41200' x='42000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='48899' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='2750' id='8' name='Forecasted Deficit for Each State 2018' pane-specification-id='0' param='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW) 1:qk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='2750' id='10' name='Forecasted Deficit for Each State 2018 (2)' pane-specification-id='0' param='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW):qk]' type='color' w='16000' x='83200' y='3750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='49101' id='11' name='Energy Consumption Vs Intalled Capacuty 2018' w='49200' x='800' y='49899'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49101' id='12' name='Energy Consumption Vs Intalled Capacuty 2019' w='49200' x='50000' y='49899'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='55' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='56' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='48899' id='3' is-fixed='true' name='Forecasted Deficit for Each State 2018' w='41200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2750' id='8' name='Forecasted Deficit for Each State 2018' pane-specification-id='0' param='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW) 1:qk]' type='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48899' id='9' is-fixed='true' name='Forecasted Deficit for Each State 2018 (2)' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2750' id='10' name='Forecasted Deficit for Each State 2018 (2)' pane-specification-id='0' param='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW):qk]' type='color' w='16000' x='83200' y='3750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49101' id='11' is-fixed='true' name='Energy Consumption Vs Intalled Capacuty 2018' w='49200' x='800' y='49899'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49101' id='12' is-fixed='true' name='Energy Consumption Vs Intalled Capacuty 2019' w='49200' x='50000' y='49899'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4EC911C5-87C3-413F-B12A-263A05F91AC9}' />
    </dashboard>
    <dashboard name='Energy Consumption affect on GDP'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='49000' id='3' name='Region Wise Energy Consumption and GDP' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49000' id='5' name='Overall GDP and Energy Consumption Relation' w='98400' x='800' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='48' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='49' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Region Wise Energy Consumption and GDP' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='Overall GDP and Energy Consumption Relation' w='98400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E3023797-77C0-46B7-9B89-93C79DB7736E}' />
    </dashboard>
    <dashboard name='Energy deficit/surplus Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='88400' x='800' y='1000'>
              <zone h='46625' id='3' name='Deficit/Surplus Map' w='48595' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='51375' id='9' name='Deficit/Surplus Bar' w='88400' x='800' y='47625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='46625' id='21' name='Deficit/Surplus Bubbles' w='39805' x='49395' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='100' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='10000' x='89200' y='1000'>
              <zone h='2750' id='8' name='Deficit/Surplus Map' pane-specification-id='0' param='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:F2:nk]' type='color' w='10000' x='89200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='150' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='151' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='46625' id='3' is-fixed='true' name='Deficit/Surplus Map' w='48595' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2750' id='8' name='Deficit/Surplus Map' pane-specification-id='0' param='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:F2:nk]' type='color' w='10000' x='89200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46625' id='21' is-fixed='true' name='Deficit/Surplus Bubbles' w='39805' x='49395' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51375' id='9' is-fixed='true' name='Deficit/Surplus Bar' w='88400' x='800' y='47625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CD63B06D-3C59-474E-9D1B-84DB46BFDA38}' />
    </dashboard>
    <dashboard name='National Security'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='Coal Imports' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='oil Imports' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8125' id='8' name='Coal Imports' pane-specification-id='0' param='[federated.0oa07rc1cqtrrh193iq9v132xasv].[sum:Qty In Million Tonnes:qk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='10' name='oil Imports' pane-specification-id='0' param='[federated.1ou07g61kn9s0q18t8rmg0d7s6ie].[sum:2016:qk]' type='color' w='16000' x='83200' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='89' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='90' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Coal Imports' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='8' name='Coal Imports' pane-specification-id='0' param='[federated.0oa07rc1cqtrrh193iq9v132xasv].[sum:Qty In Million Tonnes:qk]' type='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='oil Imports' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='10' name='oil Imports' pane-specification-id='0' param='[federated.1ou07g61kn9s0q18t8rmg0d7s6ie].[sum:2016:qk]' type='color' w='16000' x='83200' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CD4BD0E2-2FE2-401D-93FD-82EB00123690}' />
    </dashboard>
    <dashboard name='Source_Of_Energy_Recommendation'>
      <style />
      <size maxheight='768' maxwidth='1024' minheight='768' minwidth='1024' preset-index='2' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='7' param='horz' type='layout-flow' w='98438' x='781' y='1042'>
            <zone h='97916' id='5' type='layout-basic' w='98438' x='781' y='1042'>
              <zone h='42838' id='3' name='Region_Sources_Of_Energy1' w='88867' x='781' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='55078' id='16' name='Region_Sources_Of_Energy4' w='98438' x='781' y='43880'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='26172' id='8' name='Region_Sources_Of_Energy1' pane-specification-id='0' param='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]' type='shape' w='9571' x='89648' y='17708'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16666' id='9' name='Region_Sources_Of_Energy1' pane-specification-id='0' param='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Region:nk]' type='color' w='9571' x='89648' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='196' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='197' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='42838' id='3' is-fixed='true' name='Region_Sources_Of_Energy1' w='88867' x='781' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='26172' id='8' name='Region_Sources_Of_Energy1' pane-specification-id='0' param='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]' type='shape' w='9571' x='89648' y='17708'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16666' id='9' name='Region_Sources_Of_Energy1' pane-specification-id='0' param='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Region:nk]' type='color' w='9571' x='89648' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='55078' id='16' is-fixed='true' name='Region_Sources_Of_Energy4' w='98438' x='781' y='43880'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0534E5E1-8C38-4BBB-90FA-AF9C8E2C426D}' />
    </dashboard>
  </dashboards>
  <windows source-height='198'>
    <window class='worksheet' maximized='true' name='Energy deficit/surplus across states for Renewable Sources'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:F2:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:F2:nk]</field>
            <field>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:State/Union Territory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3C5FD6D1-AF92-4332-BDCA-797421749AB6}' />
    </window>
    <window class='dashboard' name='Energy deficit/surplus Dashboard'>
      <viewpoints>
        <viewpoint name='Deficit/Surplus Bar' />
        <viewpoint name='Deficit/Surplus Bubbles'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Deficit/Surplus Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:F2:nk]</field>
            </color-one-way>
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D4B9F133-9F3B-43F2-847D-B81A48A0F383}' />
    </window>
    <window class='worksheet' name='Energy Consumption Vs Intalled Capacuty 2018'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW) 1:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW) 1:qk]</field>
            <field>[federated.1d0ssow19n9rtn13fdz711dpll1z].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{102EEAA7-BC4A-41F4-851C-772E23BA399E}' />
    </window>
    <window class='worksheet' name='Forecasted Deficit for Each State 2018'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW) 1:qk]</field>
            <field>[federated.1d0ssow19n9rtn13fdz711dpll1z].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{015B52A8-773B-4F3F-81D5-F70E9D88B8FB}' />
    </window>
    <window class='worksheet' name='Energy Consumption Vs Intalled Capacuty 2019'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW) 1:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW) 1:qk]</field>
            <field>[federated.1d0ssow19n9rtn13fdz711dpll1z].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D0BE9E6B-9778-41E9-9DB0-45756EFF040F}' />
    </window>
    <window class='worksheet' name='Forecasted Deficit for Each State 2018 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW) 1:qk]</field>
            <field>[federated.1d0ssow19n9rtn13fdz711dpll1z].[attr:Deficit 2019(GW):qk]</field>
            <field>[federated.1d0ssow19n9rtn13fdz711dpll1z].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6F92FAAE-3FAA-4BEE-9D01-E282B56F1607}' />
    </window>
    <window class='worksheet' name='Demand forecast  2018 Vs  2019'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.1d0ssow19n9rtn13fdz711dpll1z].[sum:Consumption GWh(2018):qk]' type='color' />
            <card pane-specification-id='4' param='[federated.1d0ssow19n9rtn13fdz711dpll1z].[sum:Deficit 2019(GW):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1d0ssow19n9rtn13fdz711dpll1z].[none:State:nk]</field>
            <field>[federated.1d0ssow19n9rtn13fdz711dpll1z].[sum:Consumption GWh(2018):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BAA04969-7EAE-447D-BA25-58F7B85F8B1B}' />
    </window>
    <window class='worksheet' name='Demand_Forecast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Country:nk]</field>
            <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{1B8AD527-C513-4E6C-95E6-52A8ED034A5B}' />
    </window>
    <window class='dashboard' name='Energy Consumption Forecast for FY 2018 - 2019'>
      <viewpoints>
        <viewpoint name='Energy Consumption Vs Intalled Capacuty 2018'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Energy Consumption Vs Intalled Capacuty 2019'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Forecasted Deficit for Each State 2018'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Forecasted Deficit for Each State 2018 (2)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A8E56887-732A-411C-A6D4-021E5DD2051A}' />
    </window>
    <window class='dashboard' name='Demand Forecast'>
      <viewpoints>
        <viewpoint name='Demand forecast  2018 Vs  2019' />
        <viewpoint name='Demand_Forecast'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{420415E0-596D-40EF-8460-8F8F275EFE3E}' />
    </window>
    <window class='dashboard' name='Energy Consumption affect on GDP'>
      <viewpoints>
        <viewpoint name='Overall GDP and Energy Consumption Relation'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Region Wise Energy Consumption and GDP'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E5A0DFC6-1E2F-4291-BCE7-2C6CA8A0FE82}' />
    </window>
    <window class='dashboard' name='Source_Of_Energy_Recommendation'>
      <viewpoints>
        <viewpoint name='Region_Sources_Of_Energy1'>
          <zoom type='fit-width' />
          <highlight>
            <color-one-way>
              <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Region:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Region_Sources_Of_Energy4'>
          <zoom type='entire-view' />
          <highlight field='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[:Measure Names]&#10;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Region:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{CDBF5A67-3351-469B-B933-54D03D2EE17E}' />
    </window>
    <window class='worksheet' name='Region Wise Energy Consumption and GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zmxr4z0g8guwf1f7qtw61ntolgx (copy)].[:Measure Names]</field>
            <field>[federated.0zmxr4z0g8guwf1f7qtw61ntolgx (copy)].[none:Energy Consumption:qk]</field>
            <field>[federated.0zmxr4z0g8guwf1f7qtw61ntolgx (copy)].[none:GDP:qk]</field>
            <field>[federated.0zmxr4z0g8guwf1f7qtw61ntolgx (copy)].[none:Region:nk]</field>
            <field>[federated.0zmxr4z0g8guwf1f7qtw61ntolgx (copy)].[none:Year:qk]</field>
            <field>[federated.0zmxr4z0g8guwf1f7qtw61ntolgx (copy)].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{7D96377D-639C-4D36-B496-FED3B34B41B4}' />
    </window>
    <window class='worksheet' name='Overall GDP and Energy Consumption Relation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ubxuip1myrp4m17xd21g0kuna3p].[none:Year:qk]</field>
            <field>[federated.1ubxuip1myrp4m17xd21g0kuna3p].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2D27DF30-39C7-430F-B9BA-7195DA5AA757}' />
    </window>
    <window class='dashboard' name='AlternativeSource_Distribution'>
      <viewpoints>
        <viewpoint name='Region_Sources_Of_Energy2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Region_Sources_Of_Energy3'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{5CF15EE5-39F3-441F-9CB4-7B0987CDFCFD}' />
    </window>
    <window class='worksheet' name='Sources_Of_Energy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]</field>
            <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source:nk]</field>
            <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9A857DE9-2F0A-4C5F-95A7-E5DC2FA313BB}' />
    </window>
    <window class='dashboard' name='National Security'>
      <viewpoints>
        <viewpoint name='Coal Imports'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='oil Imports'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{3B8E36AB-A2FB-4D6D-B58D-EF16ADC98906}' />
    </window>
    <window class='worksheet' name='Region_Sources_Of_Energy2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[:Measure Names]</field>
            <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]</field>
            <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source:nk]</field>
            <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9AD6484C-2DCA-4D99-A9A8-4F58E3FB9DAF}' />
    </window>
    <window class='worksheet' name='Region_Sources_Of_Energy3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[:Measure Names]</field>
            <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]</field>
            <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source:nk]</field>
            <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Region:nk]</field>
            <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Capacity MW:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{06D0F354-CABB-44F9-B41B-6806C7DB665E}' />
    </window>
    <window class='worksheet' name='Region_Sources_Of_Energy1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]' type='shape' />
            <card pane-specification-id='0' param='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Region:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Capacity MW:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:CapacityIdentified MW:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]</field>
                  <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:Capacity MW:qk]</field>
                  <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[sum:CapacityIdentified MW:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>%null%</value>
                <value>38531349.600000076</value>
                <value>35140777.959999956</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]</field>
            <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source:nk]</field>
            <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{91848E5F-56BC-4C7E-8FCC-CA5EF40F6524}' />
    </window>
    <window class='worksheet' name='Region_Sources_Of_Energy4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[:Measure Names]&#10;[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Region:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[:Measure Names]</field>
            <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source (Installed!Capacity!by!State!cro):nk]</field>
            <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Energy Source:nk]</field>
            <field>[federated.0h3ycl41imxh2x19sqe2z1gqepz4].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F94703C6-8B9E-4203-9821-76803F50CFD9}' />
    </window>
    <window class='worksheet' name='Deficit/Surplus Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:F2:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:F2:nk]</field>
            <field>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:State/Union Territory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{135615CF-0C1A-4508-9E4E-958C741C63FD}' />
    </window>
    <window class='worksheet' name='Deficit/Surplus Bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:F2:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[:Measure Names]</field>
            <field>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:F2:nk]</field>
            <field>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:State/Union Territory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FE0FD1DB-D07B-476E-A48A-239809E5A33E}' />
    </window>
    <window class='worksheet' name='Deficit/Surplus Bubbles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:F2:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:F2:nk]</field>
                  <field>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:State/Union Territory:nk]</field>
                  <field>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[sum:% Renewable:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>%null%</value>
                <value>&quot;Western Region&quot;</value>
                <value>0.20430000000000001</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[:Measure Names]</field>
            <field>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:F2:nk]</field>
            <field>[federated.0v95dj11eh3k831f6wedo1oz3bp9].[none:State/Union Territory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E9BD340C-6CF9-4061-846C-7547EC1FC9DE}' />
    </window>
    <window class='worksheet' name='Coal Imports'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0oa07rc1cqtrrh193iq9v132xasv].[sum:Qty In Million Tonnes:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields>
                    <field>[federated.0oa07rc1cqtrrh193iq9v132xasv].[none:Coal Type:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0oa07rc1cqtrrh193iq9v132xasv].[none:Coal Type:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0oa07rc1cqtrrh193iq9v132xasv].[none:Country:nk]</field>
            <field>[federated.0oa07rc1cqtrrh193iq9v132xasv].[none:Oil Type:nk]</field>
            <field>[federated.0oa07rc1cqtrrh193iq9v132xasv].[none:Year Name:qk]</field>
            <field>[federated.0oa07rc1cqtrrh193iq9v132xasv].[sum:Qty In Million Tonnes:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{A6999CDA-D66F-43DB-B204-39409F586BD2}' />
    </window>
    <window class='worksheet' name='oil Imports'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='222'>
            <card pane-specification-id='0' param='[federated.1ou07g61kn9s0q18t8rmg0d7s6ie].[sum:2016:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ou07g61kn9s0q18t8rmg0d7s6ie].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{F298A792-1F09-4DC9-87B7-0E0EED452996}' />
    </window>
    <window class='dashboard' name='Electrification in India'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{6DCE77B6-1DD3-4716-BA49-27E81E43C5D7}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='AlternativeSource_Distribution' width='192'>
      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
      cQk8Yga++27NMesbvwVv/tYLUPNiaVQ8z2E5UgfYa2+ren3QjcSYBmiwG/t2gFwqwfzyBn63
      GV9khKWZSS5d2h4k2asf+UV13/Wkfoxl49GOY2H7CZ6n39zgs82+HUBvefRm5x37fRTXzR3H
      TPaX9cHK4CjZtwOE233MLMd3LI9+HDz8i39HbvmZx6e+C5z52n8kt7HIzHv/o8bm5LV/iSc8
      cCz6DF5O9u0AFoeHc6e2l0V/vDz64w0yBJsHU88VYDvW+nHorWDzoGkaYujUk3wep4uhU9uf
      69jC9jO7au7YkSaG/GiahlOQnixS+3S6TZB2nHen7fZ5RW9E97yPv+ulid7Ik7966Y8/72Zb
      77x7lcVhy7FeWexmi829p20jykKW5e1w6Oew1au75ylHQdObIXEAcrlc3f0CFEXZNba7Xtpe
      ee9le5jz1ktvRk2NKsdmLOOjOm9Dw6GjsdiTz0/EqFUeTc/waGaaYlXdmQYkEgnisShrsY3d
      M5ZSRFNSjW2985azW2wlk0xMLzzZ8+Bp25XFeRYW5oknMzW22a1NkslNpheWn+v3Pq8m2P69
      K0vzJLbSNWnx9TUWFhdZWVuvtVVKTE5OMzk5SbGi7JlvPb17aX46Ta8snrduoyuLPJyaYi0W
      r7VVyiQ2t5ienKBQ2X1XinqaU9EYkk6aXlk8Tm+IA+SzadbX15EVnZuLLJErK5iUMnmpdkqb
      VMyTLVVQqjoRiKrM+vo665tZ7JZa6enUFmtra1Tl2gKUqzILq+v4HSb0JtJlcznMJhP5fL4m
      rSpXWF3fwrHLBSW5GWd9fR3RZKlJKxZyrK2tUShKOpaQ3toAi4tSofa8+Xwes8lEVkcTVQnN
      4kBRVcxi7SyvevlWpCLr6+sUpYqupvhGjLW1NQSx9gm5blnsUbdVWUGVZWwOnfXGVZnlhQXa
      2/3kdGzrtalKscDa2hqpQlG3Qdcri4Y4QCq5hZReZ6uks7q0xUnAacbuC+K21ZaigojZJKDq
      PZkpFRKbSeZWYngctZWzsZkkXywiScWaNKvbQ4ffQyKZ0Z1j2t4WwGyx4Pd6a9JyUhWvy66v
      Cdja3GRufh6ny12TthJdJ18soqr681f9gXY2N6J4A201aW2BALIm0hkM1Bpa3fjsUK3KuvN8
      LQ4PSlVC1WrnCJfyGTL5IptbW7qaUtk8+WKRbLb27uH2ePF7nCQzuVrDPerW7/fjdZiIp2rr
      h0qR9o4QeUlGKldrkuu1qa2VKMV8EUVV0XPpemXcEAfo7ukhFk/isupkX9xks2xidm5O98rl
      tFu3X6h1rqZYnLS7LcgKqGptpfvdTkyagslS2zOlaRoImm5jAdhIbDI7O4fFWntev9eNqqpU
      9e5oQKQrRLEgoehM7u4O+rFaTORL+g6gabtrim3E2YwtUVJ0ylHT0DTQ0Lc1i9udEzZHbdiF
      L9iJkt9CNNt0bZ1WM7JUwBcI6+oVdtO8R91u2+/yeGN1ftKZouDRcZ56baq9O4jJaiGVL+HU
      PefuZdwQB5h5NM/o576AXEzWJrrC9AcdjIycxGKuPX02kyadSmK16lROOU1KdnFpKEiiUNug
      0pkMxYqKWq29wpRSKVRVQBNF9NZNGOjrY3hoCKvO0vClfBallCVf1a/UpbUE737+TTbW12vS
      0ukMia0srl2en6SKgtNuJZWsvRoPDfTT3TeIx6FTFtUSVrudnu5u0sXaK2Y6lSK5tYXDUdsk
      VudniZy6hMuq/3vSqU3MDj/ZVO17WCqVRhU0/QUB9qhbqapg84Zod+k5tEwyU2JrM4nbVft7
      67WpYjpNNLGFz+WgtiTql3FDHCAUDLC6soIvEKxNLG2RlCy0W8ssbtUORnl9fvyBNmw6V2Js
      Xhxagc2CRoe3tpD8be10dATxemsH5xxeF+WqjMNm1e37jSW2iEQ6WZyfr7V1e/H4Avhc+nvl
      +NxOVmPrT3bPfBqLy0tfTxd+HU0AarWEw+nCofP4tLASJdLVxXpsVc+SzUSCzUQCReei6g8E
      aGtvx2yqreKOcAeb6zEcztpzAoS6+vB7HXh1Hge9LgdVWcOmt4fEHnUrFXJsJhJkc7UbgyCY
      aWvz0R5sR9C5WtdrU4LFxYm+Hvx+r+79sF4ZNyQYLrGV5tSp00xPT0Fn6JkzOijnlkjZAnQH
      axtxR7iLXYMjKlnKoodeV5GNbIVe/85KkAp58kUJq91J5zNt0eoKcGpE51n6MXKF2EaC7p6e
      miR/oB0C7buaZgsSp08OMT23QrtveEeaUi2TSmdBNNMZrnWQgeGTu+brtoksrawR6uisTbQH
      OHcuAIUN5vK197Se3v5d891Y3yDcO8za/CPd9Fw6SUVWcXv9NWmuQJARvQsb7Fm3/YPbZTOn
      c5HB4mKob/co2XptSlWqbKbSgIjv2Yqnfhk3xAFODA+wvLxE78BwbaLJhk0rUyjL1L6S7IHV
      T4d3g6zqqWn8sP3SaLFtO8B+8XudJJIZPDqVvhd93Z0sryU4cWKoJq29rQ0EE+j0qOyFxxdg
      fmlNvy9cKfFoYQOHWSYY3qVB7kLv0Ami0RVCnRHd9EAgQEVW8fjqXDD02KNuY2srCCYLZov+
      u0c96rUpd3sbAQRAROe5oS4NcQCTxU5//y5XIFXG5Q8gq+z6YlKP9lCthz+mWq2AIFCt7n/F
      MNFix+2oHEiTy+vHtYvjiJpCRdYQdPsn6qNp4Pd59VdOUxVyxRImS5WKooJu39YuCAKR7r5d
      kyuVMgiifjd2PfaoW6lUxGR1UJT0ntTrU69NmUQNqSIjCPsqBQD+PyoGl/BqJN7hAAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Coal Imports' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Deficit/Surplus Bar' width='192'>
      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
      D8jopQ2SvN1tAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Deficit/Surplus Bubbles' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Deficit/Surplus Map' width='192'>
      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
      27fmyKVN3vggyUB/nHc/mKAjGiaWCHL9whStiSiZrM3kTJanxrq4eXWGpCk4MJyoukKJxzUm
      mnSkadcMOV6VXA8oCxaZvEsTKkg2VgIJnUWNTz+xbNGp/Hv1YoHklTwdUzkMx0O8O8NPTZfo
      4RiZS1m0BZWn//xb96WwwqrCWGuTXxRFIRaLNQLcHjCu6zL+wX9msC299NlaBcibNmFDJZMr
      cmvKpKfNIG0JMPOU1CDSseltjzCTdmiLCtB0puZMnjjcsU5OLdvnF9+bY/hX80u/24r5VUrJ
      rK5xJqFzrVXlRr8CNRKBhrM6f/bJdoKBcgPAymXzps+bf3qOljlz1XUr32uFgoz8xb9l8OTY
      Fv5y22fVOsYwjFUbYsMwGsL/ENA0DY8wsKwAazfB0XD5GSXiURLxspOonAuzug5O24p8kK62
      1c6kmTmbQt5j/nKOnjMLOyro0uG4vD7r8plZ+JtsiLfGAutmgiZb4fdPtRAMKHi+5I2/vk33
      6RZa2nR8CQTVVfdX+dcOBxn6N//yvgk/rFEARVFWbYgbS56HR87rZW7xNu2J1SVCduuZuJ7k
      xvdm8WyfnOnRv0n1uM0QwCenLX7Zq1NckXW239b5ylAz+1rLJkvHleQvZbmaLBEsuXhTJlFz
      feU4sylC3z//Aw5+4vnt39w2WLeTDYVCS+HNjVCHh0db5wDN7vv35doTUxaXvzPNoVkTXUou
      qrtj0DCk5JULDj8+peOHBMKHf9QX4/BA2c+Uyrj4EvSsRXwiXfUatqaife6TnP6d36K1o6Pq
      MbvJ0p1XPL9CCAKBQCO55SHT0TXE/HmVntbdtYU6rk/qTomjycJyg2qgKAShtWZJq0TK8VF8
      h4wHrueyLxolYQTQqswQhpS8mC/xjqmTDYFuCfpbdOYXHD7+/gyFt5JYYZ32TLHq2ErNTRz4
      9/+a/U+c3NV73ghN1/V1aYz34kxpsDuEw2FMBoH1JVJ2ytScTXLaRvv+zPJmF3CrCH+ykCcQ
      CCGlSUzXmSjmkdLn4mKagVgzA5Hq0QMGkmOTHuptHyE0zk3NMnExx/CtBeK+hHyVmkCApyr0
      /as/fqDCD6AFg8F1b/rG2v/hI4RAbxrB969vWCZxq1y8YjL/nSkSlkvrimST24pKvIrZszMS
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Demand Forecast' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Demand forecast  2018 Vs  2019' width='192'>
      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
      LB3/PyOuQPYPfni6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Demand_Forecast' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Electrification in India' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Energy Consumption Forecast for FY 2018 - 2019' width='192'>
      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
      6rDVf8MAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Energy Consumption Vs Intalled Capacuty 2018' width='192'>
      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
      +P+GVlTeQN0xgQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Energy Consumption Vs Intalled Capacuty 2019' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Energy Consumption affect on GDP' width='192'>
      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
      o65LVMu4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Energy deficit/surplus Dashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d5Qk93Xf+6nQ1TlNT85hZwN2gV0ssItMgAQzZGaKZpBEUbLSo6wjHcnn
      WZb9+HRsOdCybFlPlkRSsixKImmKBEkBEAgiEVgsNmJzmp0cu3s651BV74/a6u0407O7BEAL
      33PmzEz1r6p+XXXv/d38E3Rd13kLb+EfKcQ3egJv4S28kXiLAd7CP2q8xQBv4R813mKAt/CP
      Gm8xwFv4R40aBpi+dJbjx48zNbtUO0rL88KzzxOJREjlypXDiUiYogaJRPLaEZ1jx45y9uQx
      jh49StXQljh7/sLNfoe2kUwk2jr2fzbKvPT8cxw5eoxcSav5ZOr8aS7NLBCJRGqOh8NhUokk
      5uipM8eZWVjk2PFjXJ2ro5UmuHz+AsUNPl+ZmeLIieOcOnd5i9+lEdX0dOHs+YbPE+urvHri
      DDowNz+H9IUvfOEL5oenz57jgQceZO7cMey9I1w+dZxoukApfJUjVxNM9HvQrF6Wr55jIRhD
      kSR0vcDj332Cjq5+tNgCus3FYgTedt8+JC3DUjBDJryGxQ5nL85T1gUunT7K4nKQnv4BZmdm
      EHUdj9fL7MwsqViYqekZfF0DWCS4cOYEs8vr9Pd2cvrEMZJ5jWwqwtz8Cha9wLkLl5FsHkJL
      V5meWSHQ5eb4sdco6RJ+r5vVhRkuT00jyzJPfO8J3B1dxIKLXLk6i8fj5DvfeRynt5NMLMjF
      KzN09/Vw6thRknmVzg7fTb+QNx+KzMyFuP+evbx86BhOi875i5dwe308+dQzjIxPUC7msMka
      J0+dw2J3kc9lOfLiD4jlNfr6e5lbWCa0ssQ99z1IwOdmaXEZr9fDzMwsqXSK+bl5spkYs3Pz
      pPMaqUiYrqFO1hZiFBIhNKuNU8dPkFcFOnwerpw8w+QDD7B0/iw9o8OcO3GN7jIxpmZmWU9k
      8CjGfATFQTQcRCxmWYxlSMcjaMUc5y9eQhWszE2dJx6LoituwitLDAz0cOL4cdIFnYDfy+nT
      F5jwaZxfzRBZjzZXgXq8Vs4fPcRsrMyxI0fo6etlbMduhNQq4XiYUELkzj07WV1awu7vYnJy
      kuH+LqaCKbaNb2N7n8SzzzxDPJ1gaTXO6uwc+Xyc2UiBod4AmmjhwO39HD89B8DSoiFF5mbn
      CIdDqJqALOqATrmssXrhDGdPn8A1uo/t48OcPX2KXbtv4+LVWQ4ePMjVi6cIh0JogkgpuU4i
      W0KSZMCQXmVVw+ULMDk5yfhwP2q5jJBZ5dxKkcnJSbaNDnLolVcQy1EOHz5NMJpGlKXXhRzf
      KIgWOyJFXjn0CpIErxw7zdj4ODvGh5mbm+Xkaxc5eM9BegJeFpeW6B8c48679kImhOTo4qEH
      7+P4q4c4fvp85f3Nzs5x4expJnbtZi0UYf/+u1hbnL12xzxLi2HCi3PEknGi6QLytXcEJX74
      5LdJW/xELxyt0N3S0hq79u0nGQvz8kuvIMkSR149zOLiIrOrYeLBZRYXl9DUMjoCZ06dxuHp
      4K4D9zB3+QwAF44eIlYWOHLkVQAGev1cXM1QDE3h7OipZQC1kOHE8eNcXNfZt2sUlwV233EH
      NaQgu8gnljh17lLlUCYWYmFlBXQLaj5FMJrGKmlkVQtr8xeZml0EoKe7B4DlhWkOH73A0Ijx
      v0SREydPksgW6PB3oKVDTK0koJTg6lwYqyLj6eln+vQxpmYX8Xf1oEgCdlng6NGjKA4//o4A
      6dBVVrI2Ah4bFy4aS6G/w4+kpbk0tUIuE2NmYZWp6atYrVZ0TaOQTXJ1bpnBgQEkWye7tg/R
      1eXj8oWLt4rW3nRYmp3iyOGX6RmaZHBwAB0Ld9y+q2ZMp9/B0WPHCEUN9dbnUjh29BSnL8yx
      e9coy4uLWKx28vkcgpbn5MnXSOdKuP1dOBUJtZjl5PFjaLLt2hUVgqtTXJmeR5fsdPmclXcE
      Ft72/g9hzyyQs3VcpztBRBAABIaHB1E1jTvuuIOxgIPFRBFJzWCxd3B1ahpJkpBEkWImwfGj
      r2J1dwLQMzCIBZ077rgDgMGx7bjtCnvvupvgwlWEWxUJnr9wAmXoDvrclk3HHn71EPfd+8Ct
      uO1beJ3x6pEj3HvPPZuO+3F5x7eMAZLJJB6P51Zc6i28aaGSTObweFxv9ERuGW4ZA7yFt/Dj
      CLn6n0Kh8EbN4y38iGGxWBDFH7+wj6qVSZYMV7XH4kUS5U3O2BpqrhaLxQAQBAFBENB1nUgk
      giRJaJqG0+nEZrM1vZAJTav1LZvXKpVKyLJMJBKhs7MTQRAol8skEgk6OjoAKJVKpFIp8vk8
      /f39AESjUTo7O1u+vGg0itvtRpZlzMXMvOcbBVVVKRaL2O32LZ+raRq6rtPOwqyqKqqqUi6X
      cTgcle9cKBSwWAxbrFQqIQgCnZ2dWK3WLc/njcJKZolXgz9kLnkVVVcBkASJUc823j7wHvzW
      wC25z4bsZD44E6FQaEMGqCd+MF5SKpWiWCxisVjI5/PEYjE0TSObzTI0NEQulyObzSIIAh0d
      HTUvv5rw8/k88XicfD6PLMtIkkQikUDTNAKB6w+k+vw3ghEkScJms5HL5bbMBOZ8TQG0ESNI
      koQkSciyTLFYRFEUABRFoVQqkcvlcLvdb6gw2Dp0jgRf5qWVZ9Gp/e6qrjKduMxSep4PjH6c
      Uc+29q6o60RfPEToyR9QCIaw9nTT/f530fHw/bU2QDAY3PBhaZpGNBrFarXidrvbklThcJi+
      vr6G46qqksvlSKfT2O12XC4XqVSqwZA2VwCTaaxWq6GqCQIX5y+xVgzjV3w8fPsDWCyWlvP5
      Ua0KrZhNVVXy+TxOp/OGr1v9Y8Ik6FQqVXO8FbOpqoqu6wQCgR+LFeBk+AjPLj256ThJkPnk
      5Ofocw5sOK4YiXLqs58n8txLDZ8F3vFQLQOEQqEaidtMomuaRiKRQNd1VFWtkbzNEIvF6Ojo
      qJFs9diIaHO5HJFIBFmWcTgcnJo5y3x2mfnUEkK/AgKg6fjWHXx4z/sZ7G18INWqUfW1bwVa
      CQGTIG+G8Zoxgc1mw2KxUCgUKBZrEwxaMUGhUKC7u/tNzwCJQoyvXPzvFZVnMwRsXXx2568g
      Cs3VY61U4tV3fZTEsddaXqNGBarW/TeC1+sFIB6Po+t6yxecTCaNgFPVC2yXIMxx+Xwen8+H
      1+vl5dOHeal0EjwCgke5PlgUiHfn+Jurj/No4n7u3rm/4Vqmbt3qXu0in883fGfzf0kyQoai
      KOJ0Oiu6uPl5O/epnmOzFSCfz5PP59ue7xuOYhCyF6AUBr0EogOUXnDcBrK3Zuip9eNtEz9A
      JB9mLjXNuGey6edL/+vrGxI/3CADVE6WZQqFQo1dUCwWSafTlMtlvF7vDUkdcx7FYhFd13G7
      3WiaxrPLL6MHJESapykUPCpPpF+Ei3D3rutMoKoqpy+eQRN09u24o0KoGzFvM2QymQaVpppA
      4/F4ReoXi8XKfcxx1d+v/nj9b3Pe2WwWm82GLMuUy2VkubXZ1ur9vSGe7twMRL4NuSstBgjg
      2g+dHwGLYWcupGcaRmmqRiaeJZfK4+32YHUoNZ8vpGZaMsDqN75T+Vty2BEUBSXQga5piLJE
      fmVtcyO4/uGZL0/XdRwOB8FgsEbHTyaTBAKBBol3I2qAxWJB0zQ0TUMQBH71vp/j6uIM/xD9
      IbpXRBAbrylYRJ6MvMjZ5y7yiXs/zJmpc7y0fpRsRxk0WD66ysGx/fT19dXMKZvNout6DYGX
      SiVU1ZBImqY1OADqpbPP52uqhlQTdysCbUak6+vr9PT0sLy8jMvlQlEUotEoTqcTVVWxWCyV
      e5XL5ZbXqWbEHzl0DSLfg9hTwEaMp0P6BGTPQ/dPg/suUsVkw6iVK0Gy8SzRlTidwx0M3z6I
      YruebZAqNZ5jInP1OkOJVgVrbw/OyXGSZy7Q8dB9ZKZnmzOA+ZKqib0ZkskkLpeLSCRScXNa
      rdYN9f12UL30S5JEoVDAarXicXvYf9s+ele6+fMr30DoapF24RZZyAf5T4f/GMEnI3QKCAgg
      wmlpitNHLvBrb/+FyuqkqioOhwOgRr0wvTkbzbP6dz6frxnfjCDbea7VY01D2jSqzedhOg9M
      BiiVSi1XW9Ml+rog/DVIvNj+eC0Pa18CvYwsNs4zE8+STxfYdmCMyFKU9fkI/Tt6K59bBAuJ
      YpwToVdZSs8DMOga4a7ue5Gcxjt1bp8AwL17J5mrszgnRom8cAjHxEitEby+vl5jBDdbnqt1
      6Wg0WvHh1y/Pt8L4A1hbW2uQ1gDHTh/nGflI5f9yLs/6UgKnU2JtNobbIyG7PHgHA1gstedu
      ywzwqfs/1vZ8mjkDms23WCwiyzKiKG5JldwI1c/VtGVEUazYF9Xq1kaS/kbV0S0heQSCf35j
      5woy3ylPcCW3tfqM3R17mU1eJVvO1Bx3yE52/veLFP/6Bxuev2FosFqSmz/my60niltF/PUM
      1t3d3XC942dO8HTuUA2ByXYbVruMu78Df58Xi81CKpQgMheujNF1HXtM5u3bfjRJWhUXLbdO
      765+rtUqlKIolWeiquqGxP+6xAG0PIS/fuPn62X2M7+lUwQE5lMzDcQPkC1nmPrJQbBtvPpt
      Ghuv90SYTJBKpRoMwmoGuRXQNA1ZlhuY79XEKQRX7QsvpTMklqNkIxncg114+gJ0betCtlY9
      gKTKx8ceo6+7MS5Rf99mHpjNoOv6hkbqVlEsFls+y1KpRLFYpFwuV8bk8/mmkeTXxQhOHQOt
      kRC3giEpz5ClfXtl0DVCupRqPaWASOfv/SpILchcEjdngGYvwDzmdDpveX5JMpkkFosRj8dr
      dNfqlzjhHG44z+JyMnrPJI6AG6siYHE5cAU8dA77AfDHnLwr8CCjI6Mt722qeObfrRigWhWs
      XrHK5TZqQNuESdimcV4PUyCIoojVaiWbzaIoCuVyeUvpFLcM6RO35DKPBcbxWLybjht1b2Nv
      592bjvN+4j3c8+Q38N9/EExaFgT8Dxxk/99+eWMvkDG2tcFWLpeRJOmmJH719XVdx+VyVbwf
      1Z9V38Nr8yDotffczKXp0G3cv3vjPPaNvDMbuS5NyLJMqVTa8B7tQtM0LBYLFoulJs2h/l5m
      WohpG8B15jFXz9cFhZXKn+lMyfByOixksiWcjvaNcLee4jM7foF/WHicmeRU0zF3dh7k7YPv
      JZRd3fR6Loub9F47sS//FKuRB8inEvi8PQT69mKXJzZnAGjuDjUftimJYOOlthkhNbt2Lpdr
      kGD1tohVVECtvW7l7/WS4R4N1D70lJzlwswlbhvf2c5Xbn7tNmASrEmQ9YTbLsxkQXMVbMXg
      xWKRUqlU8QaZgTdd1ymVSjd8/y1Dve6OnJpPXHteAvFUAUWW6O2yM72QZM92w2kSiecplTTm
      llNMjnrxeawM97lATeG0uPjoxGcIZleZTlwmlr6AtbSClyIjriG6XQrkrtBlG6Xb3ksot9Z0
      Sj6lg6PBQ1xNXDLyigTAAxk9yPLK9zkuu9pjAGgkXNMQM3301cfr0SxDFGhQnyKRCHa7nd7e
      3qb3NLF32+1Ezsc4lblEyaKCXYSyjjsMQzt6KBdUVtYSoEImYDBY0pPjpeUj7BrbsWm+081K
      TdNA1TSNUqlUueZWiNF8vub1CoVCJau2OvPT56st3DcFiiiKFRWtUCg0jLvlECTQDRVweiGJ
      IIDNKiMI8OQLizx4dy+xRAFJEoklCoSiObo77NisEk++sMB9d/YYDCBcE1y6Ro+6Qk/pZWAR
      THlWSEDhHACyaON9jkm+VZRJqbXqp02yo+plphKtS1sz5fTGbtCNkEgkcDgcDUZfK983XGcE
      05g1f5sJW6FQqCb7tNr7ZP5fjWw2y1de/CqJjhy6oDOYV+jY7r+uOmk6a5eiuHIdTNtWGbcO
      8qn7PtZ0zubvzVyeNwpN0yrBqur7CoLQ1D2ZyWSQZbnG22Oek8kYxqYZIa5Gte1i2iS6rtPT
      03PDblBN15iKz7GcXiVTyuFWnAy7+xn1DF3Pw5n/AhQ3VkmWgxkGejZJDvQ8AJ0fhbWvGEGy
      NlDAwqtsY14zVsFB5whlvcTp9eObnnvDDAC1cQATrYxGk7jqXarVhmQsFsPn8zXkDW0UWCsW
      Cpw4fIilK4cR3zOCbJUaxlqDLu7sP0hv9/UASjM9/vU0HE1JrWkamUwGt9tdM49cLofD4agE
      AVthM2Fj4kayQbOlHI9PP80PFl8iXmiMuPqtXh4be5SfGHsnyvrfQvLQlq7fFJ0fgcRLRu7Q
      liBC7+fAfYCiWuDLF/6QTDm96Vk14sMkgHZUgEKh0NTl1yrbszpZrBrRaJR8Pl/JKq1ewqvn
      1IwxM5kM0W98hUeyUfK6zuNzSdjhr5xnXi/piDaNyjdLkDOZciuMIMsyNpuNbDbb9gpiXt+0
      EwqFQuVcVVUr6eayLG/o528lcKDWPtsqLsdm+E/H/5hYoXVgKlZI8NVL3+LZxZf5rdvezSg3
      yQCCDImXb4D4ATRY+3OQOwipcgPxlwolIosxJIuEr8eDKItIslTrBt2K71tRFDKZDOvr6w1p
      ufUwVZ363KD5+XmcTie9vb2k02n8fn8NAW1mXKvlMp3pGHYR/JLA+HSMcq4xm9DikJmZvkKh
      kK/5nvWoN7bbhaqqNQS8VVitVqxWK4qiVGojzPlJktTSvbrRexJFsRId3mou0PnIFf7N4S9u
      SPzVWM2E+J3X/o65snvzwRtB16EUuokLaBD8n6SK0YZPpo/Po2s6yxdXmTo6SyaWBeoCYfUu
      yY0gCAJ9fX10dnaSSrUORlSPNw3DhYUF1tfX8fl8FR23nvirz2sVXDt57ChFXSOXzZMD7smX
      2PO9adSycZ1SpsTA/Bqjiyt49SMsTz1DMpmgmfqz1e9fDdPjcrNoRahbvba52t6I9E8Uknzx
      xJ9Q0rYW08iWc/z7+QQ5/QYT7yzd1/30N4NSCEuTmITTayc0u862e8aQZInwvNH+saUXqJXb
      sh5bDf4Eg0FGRkZqAk7Vv5uh2RxKuRiLz36ffV6NH8wFsXotLCY0bvNaeO0v1+l/53aEC2FC
      kTn2jbnxdrt54run+KcfvUqEg4xM3ocoipV5bObJ+lGhnZwhh8NBqVSqcYlW/zZhqpo3k4ry
      9SvfI1ncXKA1Q7gM38lN8k9d86Dl2j9R6Qf33RD57g3dtx49pWlEbGhcF6hDewYY2mMUS+24
      f6JyvEEF2irW19c3rQqrhunaq1a3NiP+ptL/759gtxplOZbGqljwWO3c2esjq+k4JFg4NsPK
      VJTdIx0MDftAFHng7kGGuyV6LceZu/APFItFgsEgsVis7QzNW4HqKG47xNpMktcLqOpneaPE
      nypmeHbx5Rs618STa3OUBn4LbGNtjBbAdQAGf2tTD9JW4NaiDDt72hp7U4kroVCIrq6utse3
      I+3r0exlzs2cp1ROMDEwiCYKHJTAIkBC1fn67SOM7+vANpNiYn2O/Q+PYLfWElC3X6CgLjM3
      N8vo6Bi6rrO2tkZXV9frEjm9WW9Tq5oC87NmMZt2cGb9wpZVn3qkS1kupVPcPvgvIHPKMGpz
      V0GvarkjOsG1D7xvA9uocawqkgwQXM/SHTCKi7YaTQZ4sHMPy7l1StrG6mMDA7Sr+oARCzD9
      2M26wuXz+Up2pKnHVrs562F6YDa6fzqVokt7hn2PWQjH/Hxj3YVwIYq324augXJHJ6IsMvjC
      WRxWuHQhi5gps/fB64GgZEYlIT/MxOh1KdXT01OpPX49OtzVC4N6j00rAjdhMsFmXiBo34ZY
      SK00PV5MFYhPr+PsdZOPZhEkEVvAgdVrR2qSvDaXXOL2zp1g3w7ZS4Z01wSwjkDXT4J1sPEm
      Wm2Z55nLUSZHvcwupRAFAUkS6PTbSKaL7N7mZyWcZTWUJRzNccfOAMH1HA/sv54+02f1857h
      D/L0wnc2ZIKWDGBiI0YYGxsjkUhgtVorMQRVVSsv0mKxVApNTP212vXY6oU3k2LmCw8tnWT/
      gHEtj1NiYD7F0riH4ogHyVKV3VfS6EsVKH5rEV2Ak24L+/caQZjFkETPbcM1UV9VVeno6CCb
      zRIMBpFleUuq3VZgEu7M4iwuu4sOn58zU+dYSCzz3n2P1niBzPGqqtbEUVoJETO2UJ2q0q6d
      li41z+a0OBVK2SKKx0YxVaCcKxG/so5r0IvnWrJhNbLlLGgFWPoiFKvSFHKXjeKXod8GsS4m
      IVwnxVyhTHA9R76goqo64WiO1XCW++7sIZMtk82VWQ5mOHFunQ+9a5QrswlOnAtz775uZOka
      3YgWdvm341M6eGn1Byym59D06zaBU3bhUbybq0DVD7Mepo/aYrHURHDBePDBYBBFUSo9cqqN
      OVVVK3GE6tC9+X/1dcx5zE6dZNBxrvKZVRH50D6FQrHE/5xLYx/yMPvaFLogMhWK4JVF+h0O
      0EF6fJnjqR4GdjrJyXsq16jWmXXdKPN0OByk0+mGCq9bBV3XmZq/yv9efQoAqSCgdYpIaZWR
      xUHu2nFnzdhCoUAul9swlaJ6RagWMIIgtN2byCY1D5QVk3lkq0z0cgjZasE7FiAbSqEWmjOW
      IipGMKvYJEenuGZ85n9n7XFLJ5SCANitMp/5YPM63+po8qc/cH3MY4/UZQjLhmre5xzg4xM/
      TaIYYz0XoqSXcFuMFf6b03/VyADNoq4bMUFnZyehUAin01kTzRQEoVIcXygUsNvtFAoFJEli
      ZWUFi8VCIBAgHA5X0niHh4crNbj1q8DcpefY23sRSWpckayKyCAF1nUj4BFbLqB025mdC1PU
      BUaddnrKZfSnl0n8QKIUSHB1cp2xD3ywhglNRhQEodKnKJVKYbPZ8Hq9FQl8M/r7ySunOLV+
      nhUlguAx1AdTLpW7BFKZVCV/B6iUmLpcrko6hRnRrTZ6q5m4VCqh6zoWi6WmY95mGHL3Nz1u
      9dnpuWuo5pjibh1VHnD1Qv5Y6xvl5xqP2be3lfqwaSoFgKXLcKlGvgvZiwhaAZ/Si89zLzj2
      gCDyvbn/TUkrtWaAerTyLoiiSG9vL4VCgeXlZQYGrvflcbvdOJ1OQqEQqqpWdFEzMSyXy6Hr
      RilhfaOt6nvFoiH6HFeaEr+Jd47Bt6ejkBPo6vXj3jeE/OdHsYvXdVQB8KkqvlAQPRRk6uJ5
      Bj7/a3ivJYqZqoZJUE6nE4fDQSwWIxgM4vf70XUdq9VaEQq6rpNMJnG73WSz2UqEXFGUhjye
      I+eO8WL8KFk5w/yhaTpuGyI6u45VzIOjg95tvbySP8XZl67wcN+9DHb2k8vlKnUXpVKpEhhr
      JpCqXaBmivRWkvt2B7YjIDR0ZNsKLKLMnsAOiG2w9ZXkBK1oBL20PFgC4LoLIo+zcSF9m5D9
      sPDvajJUKS4bNQue+yh1/iQLqVlj6GbXajeYYkYzTWiaVvEQjY+P1+T8eDweNE1DkqSaVoim
      9J+feoVSegZr4D4orqKUphkZ2DjKarWIOOIZPrnTw2pc42JSY4fLg69FdFYAJqMRQl/8D6zt
      3oPvobfRNTDY1Pbo6OhAVVWi0SiyLBOPxyvlj0+/9hzHkmf4zXt/CbfLjc/nq7QlTKfTrIbX
      cNgcLKZWeCV1Es0nIBQlHG4r5ZJOX3cXw9kU8WCSuZLK0F1DJLNZSloJr9dLPB6vSHGzBjiX
      yyFJUuX/Vu/N7B1aLBbx+xt19Xp02QMc6NnL0eCpTce2woP9B3FY7OC+d+Pi+PkvQPnaXmSC
      BZy3g31ygzYq7UI0Vhi9RXZC8jBl7BQ14/MaBrjZ6q5WL6M66GVKpVY5N4l4mF7lJF1jUCw9
      ic3X/pw+cK9hcA+kVPqns1ibLP25UpGr6Rx+CeLlMov5MHsj68gnjnPpnvuw7t6NkEqTS+fo
      2LWDvgFDLZAkqcHOcTgcnEldBMnwtHg8nooTwCwXnY8s8vzcsyQ78+C59nxUHYdm58NSCXeH
      xoH7+5hZy/OHQR29oHHAsoe9226vPJ+1tTV6enoqz9DhcFTKJatVMrMazGazUSwWK+9zK2Wa
      n975YV4Ln7shd6hdtvHJHR8CNQOSAwIfgMgTVIo3kIygV+JFaiS9XoL0SZBchjGs34QrVvZC
      ObbhEGvqFZxCNwnqGMBsA2LWm8LmlVbVUBSFpaUl+vr6Nk3eanbNbDaLHv4mPT3GZzarQCiS
      oTvgpJQrgd1CO95gn1vCt8/N94952DOfwLxTLJ+liIxLFslqOrIo4BQ0ZpNJBnSByVcPUXj1
      EFbgSEIlk8pR+uL/w/DISNP7pNNpJiQJv13Geq02oh53jO8hl8/xQvk4JFXwSShZid999yAD
      HTKapvPSpTzPrYm8p/8gk70TnLpypvLcfT4fibqdLHVdryTQ1bc8sVqtZDIZrFZr5R1sJbYx
      5O7n53Z/kj85+1dtnwNGgfr/tf0BOte/DPlpDAIXQA6AY7sh3S29sPLfaKnmqGnDVVpY4jrT
      bAHu+wxDehMGEPU8o4rM6VyxlgHMRks2m41otDGhqB3our6lzMVqZDIprHqJYklAsYigl3n5
      8ALveniEF56dZfLefgopDSGfRXFa8fpdFBNF5iIZctEEkzv6WFvPcd/+fjIZFftdPr7d78Gv
      CvTPRNmxDplCngupNBMeN6pgZ4/dSaqQw3ZtzqYS5/MqpHJFQr/97wk/+gCWzgDdB+6ks6ur
      EsX1er08NrmN3UMxZlafYiXuo0AfVm0WXfQgiyqiqDMuhNhlVRm4zcJSqIR/QqLTJ7MYLJLO
      apwIS7x37z9hYsCIS7y3p7fmubQqKDLLIk3vkKnvV/c7upEi/XePvA2APzv31zWuw1ZQRIXP
      j01yv/oCqNXvWIfyOiQjYNt2LR6wSVtHLQP9nzfcpVq2zRkL4H3EiDEs/Nu2ztgXuIMLKydq
      6wGqc88TiURFJ98MZlZob29vg+FXDU3TKtesT3AzJV4mk2bl8hMc2LbO0vQKJ6PDHBsAACAA
      SURBVOYSCIIVOVMgLhfJFBRGvQIWu0goVsSiWnj17Coffv8EhWSWF09F+a1fvY/FlRLH0lbU
      IUP3zc4meO/fnmmqFjXDM1gYnl3HohnjS6KAJghkezvJuB0Edu+itLzKK6sXufujD9LrSNDv
      y5MuWtk5am14BslYFrvfgXzt/rMrRRw2EXTI+n4Kl6t1JmUsFqvo8PUeH9NILhQKNQa6+bzN
      3qzt9gUqqSXm40uE0xFWsyF+uHaUhcxy07ECAgd69vKZifsZjHyJjaW2BO67IHV04wmIDhj7
      PSOOsP5NSB1nQ8NYGYDODxs2BMDqn7VRoC/A8L/mYjZauwKEQiF6e3srxdjtMkA6nWakhZpQ
      c9uqIphm0DQNh8OJXTFcgIMT/QxONHfNrYbTPNJl7FX14Z/YUTl+370aL15RWQh0YvFf/3qe
      mXjbxA8wqZaJ2hVSwTXcdhdXEymckoSWTNBlsWC/NEdphx/7WDeSfScXQ0mePfwcC8th3naX
      j5VoiXt2+1hdzXL0xAw7xns5cLCD7z51lfe8726cksRYv8J6XN00UtvqPei6jt1uJ5/P1xB3
      dXG86dXaDDOReb5y/G94cfYwmWKt5FUUhW09Y9wzehclvYxTtjPsHuBA71667AEI/hWbqywq
      ZNqo8JIcICgg26H35yHwEaPlSu6KodroRZA8hq1QCoOagpU/BsltNNy1Dm/OALYxUHrZZR2o
      ZQDTz2yxWLDZbEiSVGlQa5YtNkO7xrPpnmsWmayukJJ89/HazBHuHG+dj97X1XyjthNzZVaH
      +mpsheRckpHTW8szz6g6UxS4Q1FIIBq5RuUiFlFirpjFJtvIr6XY++5RrFKRvk4ve3Z8jqef
      /jv27yzgWMqSTeaZ3ObG791GJmMlr1q4c9cA5bxOzgYnLueQlQD9t3W0nEcsFqsh7mqbzFwN
      6iW7KWjK5TKKomyoemq6xldf+yb/3+G/oKg2Z8RisciFxctk01l+//1fYDxQJ+za9dwIAoi2
      jdUg+06IPwd5w02JbQy8D0HHe66PSbwIoa9BVbYnagJShwEBRHvrbFTRAV3/1Khhpq4kMhwO
      V1yT9TA9EtWpDIVCobJXgNfrrdH9LRZLhdBNwje3WjI3u6hnHNNDBLAeXKBffAKPc2ueqUxO
      4/iKztxSHuHAMJqqsfqNKUR0tgXTeAWdK/t6OXB0EZ+qkRMEuqokbBqBS8kS3kgGSdOZTkUp
      yzbUUp4hlw9NLbOWzyCPDdPzjl4eeayTY5c0PIOPMTy6jdnLr2AvnUFXc6hYcSgFiiWdTp9k
      6P8eieeXRIRd3eQieR7yv4uuru6m3yWRSFSKZKq9PRsJnGrPkLmyyLKM3+9vqgL9l5f+lL96
      7X+3/Xx9Ng9f+egf1DLBzL8wCHAzSF7oeN+1DnJNmFJQAKE2cQ4Mid//ebCNQDEEi/9uc1vC
      Ogyl9So7QgC5w8hDUpNGRFor1K4AwWCQ7u7mL6O6jteExWLB5Wq9ZWazpqzVnqaNVKyu3hGu
      nuvmztF1BKG1N+rMVI4XzuT51KMuAl4Zp10km8xR2N6DTYD8aoYHV+Nc/sX9xCWBpCyg5FVe
      7nfjjObQtvnw/HCRA5dDODSNqChWiB9gwm0Ig1iHD0nVcBdFSj4Pu70y0ZUcJ2cDbD/4sYoh
      OrbjfnT9vpoVTRAEXnjqT/jg/SLfuwzCbYY7VVRExBYOA9Ol2SyNodoorl8Nqu0Ds29TKxXr
      qcvPbon4AeL5JL/+xL/ha5/8U+yWa2kiSje009NT6TGMVdFuRGmr4wD2SchNNfffq0lY+SMY
      +X+NluubET9AOQkjX4DCsqEmpY4YiXnmPa+hhgF6e3srRSI/yh0FzbB+PB6vqYM175tKJonG
      oiyu5bHpeUQR0lkNu01E12HPxPX8nNmkgONtI/ztco7HMmnGB6xY0CvF8dhknKqGfjKI8jYj
      C1GySATcCmBEgMsf2c5T0z0MvbzA3qU4Lw8HCGgq2WQRRQBBERlwWUgBwZyGzy7hRGXFIWF3
      DKJptYxcTZSiKLK8vMj2gSIXZsusKD7MYH5XdoDAaPOEu2w2W9N6cqPkt+p7VjOHuVo3yyEq
      lIv8wct/1vSam2EhvsxXX/sm/+zgZ4wD7oMG8W4G2wSEvmpsmKFlDcnu3AeB9xvGbnaD6LGa
      hPizkD7d3iTVuOFOtU8YNkLuctNhNQyQSqUqIX2Hw/EjZQJTd9U0jZmZaSLT32CgU6CsGn78
      Tk1hfE8Zn7tq842SxtXFIqFome4OY+rjfoGILKIVVWbCKq8kIKPZsNuNz+2dNo781B0Vid4K
      vgkv6gkLMzaZA0UVn6aTC1gIJuMsZspE8jrdTg9jNisKKtNOG+Pv7WKw7yyvnrnKzoOfa7hm
      oZBn9tKLdCpXOb+Y466dNqSFPDmrhK7D/QN7G54JGETtcrkIBoMVI7ezs3NTl2Y9kzgcDnRd
      b7qjzHPTLxHORBqOt4tvnXuCn7nrE3zv4veZj83ziQ47A8oGVWCCFRLP10nvPCR/CJTbk+rJ
      Q2wpPlBYhOTLLYkf6hjATGbL5/OUSqVK35kfRYs9M9fmwrnXmH7ta3zgbY66ESqCUOsxUiwi
      t43bOHIuW2EARQTJKuK06MwFulF8VkylYX1+jSsXVvEoBeTAEOO9ThSptvJrfTrOXHgdRZaJ
      dxYp9NsZDGn8zKUMiXiMHreXvJYknc9wJpHAIfnpe/cwk/vc9HQaKp5oq222u74eJtDZxcrs
      cW7vuUAwYWVi0M5At8z79BIJ+zsploqVrabM52HWTIMhvf1+PzabjVgsdsObXJiu0Xq8Mr95
      z5yNsJYO819e+hO+fsbYheWQN8BfP3IXtuJ042D7diiuGIGuZki+YhjHm2KLNJg+AYWFDYdI
      X/jCF75g/pPNZitS3+xqVigUKhsz3MrOxya6rnVq9soLrK5ECCbLBDxWllcTuF3N/dZ+N/zw
      RIpSGZ6OO7B32pE67Eg2Y36m/ixqJexdAboHOkiGY0RDKTp6PDUrm8Nvw67JXEkFKTp1dAsk
      fAL5vMT9eZFcsUCn00XB7aT3s2MMP9zJnXf6cTmuE2QuvU5OGMfhMFSW2SunWE+WOHPqClcu
      HOfvXpKwux2sBpdZWy+huHdx6AffY34xRkku8+2/+VsCw7vwOq+rKqIoVp633W4nFApVsjtb
      oXoFMf9Op9Mkk8mGFeRLR7/KerY22CmLMu/d/nYcioM9PTsY8Q/S7+4lV8qTLTVK93y5QCwX
      B0BF5hN3/zJW2WaoK5Zu6Po49Py0UQGWOtxy3sak25DsXZ8wpHm7qRJtGOYtd4ipRzabrXhy
      bjV27n0nVy/YOXLqTygLDl44ZmHAtcpXvn6Kew+OshLOsHeyA1GHmaklchY7FtnGD15ahgcO
      4KN5opfi8xK4ZoRO3uW5zhhVxSKaqjG1sIbmqlUfTg/L3B1UmLhmzG7TBUJPJcj8RGNcYrhH
      4HI6TqCzC72UYHEtT1dPlEBnHwnp7Tzy9kHy6UtkckXmVzoQO8L0TezCowQQgR179uP3bByk
      CgQCleKjZsjlcjX7E5gxAFEUG3KYAEpqIxFJgkihXEQSJGZji8RycXZ0TvDg6D08fuGphvEf
      3v1+zgcvMR9b4ue2deEJ/bfrH5ZjEPl7Q/pvkpoAGAUySt9192c9bGPgvscwauPPbH49ZGBz
      RmkpTprVlSaTSZxO5y1vuCoIAr7uSW578DcILl5Ei77C8HAXbqeV3j4nK5EMHqtIMK0xPtGL
      1eNkdjaJMj6Ot6+xfLE6x7+aYeuZd30hTjCYIOaolW6CIDC4LiBaRC677AxHc1h1nahHQXwq
      SHBgiJ6O6x4uxSKil4yXLFi8vPe9jwKG5DY3856b62abLcHU5L0MT1xv6y2KInfskmoSBVuh
      2XPP5XKkUiksFguZTKaSpmEm5LVaMXrd3UxH52qOFdQiy8lVwpkIo/5h1lIhTq2epzsVbHqN
      ycAYn973EcgvGK7JepTWIPTXBuFuBtEJymBzBrD0gO+dxmfeByF9fGOmEhRw3Wl4fti4vnhL
      Os3NFnNvhGIuhj31Ld51uwW45oodMzwkk2OdXAkNkFxf4P57DCJ2Wp1cjTjx9jYyQKs51hSN
      ZEtcWlgh7SxhBPWv4x2Ck8/8pBdJglRG47XHg4iJEkM/0YMkwsxSCZ9LRrHAa5cLdPpkLEJt
      oM2shDNVGUWxcXZWxtXXqPdvVuYIRsxFVVUSiUSN7ZDJZOjs7CQcDlcyRtvB/oHbOTTfmJZw
      KXwVgEj2OoEtxBtTIWRRZk/PtU7b6Q3sicxZ6P7UxsEpMOyD5LXNrJ17jaS45MuGOlUKGrlB
      YLhMZb/xW2/i3pU7oPefGQX517BRffGWGOBm2n1vhv6hHajFD5LJP4HT1qTwxuLG5bQBxpe+
      OFfgnT0az0+pOMa8iHLVBt+RHP5shrDLjey0oOtQzpawJHKUvHa0kkaeMilHsY70QSzBXUM2
      rIpx3O+ReMdP96NpOuK1XSkDfo2XT2cZHNnDpaVZFo6meehBF9vd7orErV95PB4Pvr0/26DC
      tOtpM12i8Xi8sjNMPp+vpEYHAgHm5+cZHR0FansENcO7Jx/hjw//BWobyW7N8OjEgziUa+4G
      daOkNQ0QoOuTrfcPsw4ZyXKJ543/9bJhGJebJGTqJaOQRrCAfRfILiinQPaAY5fRZkW0VFyq
      m9UXb6k9usvl+pG1DREEgeFtB5if0pCLT1UIEEBVdSyuCXp708ASmqaj6+B1SfzKmMbJ+RCR
      gkg4B5luL49aknQOihyajjGgCrhlHasi0LNDJpFOoOk6XzqVQVBqv4uchcGyhTtGGz0SJvEL
      gkC0vJv73/8+3G4POw+olQqtVrsxSpJEPB7H4XDUMMCNPEuv10symSSfz1eYoKurq2k3i41S
      zwe9fXzwtvfyrfNPbnkOsijz8wc/ff2AbRha7VYq+Yw8HeftBhNEn6iq1JLBcxA6P26kJohW
      Q9pnL27uFtVLRgpG7+eMplr1UIyM2s3qi9tmAHeVdPtRYmTyHmYvlXEkn8Fth4WID7njQca3
      7+fciRCwRK6g09tpof/aNqn7R4zfyYxKOBFlvM9Ypd53R6PB3uGVUTWdUCmHbrm+6ZwnJ/Gv
      9nTicUpIYnN1xCSkstyL220QWzu9N61WKz09PZUyxZuBOV9FUeju7q7x+DgcDsLhMC6Xi0Kh
      UEmjaLXK/PqDv8jJlbPMxRa3NId//sDPsy1Q1fjKfS/EnjV0/nooPbD0nw03qFYAQTRcnko/
      dH4M7ONU3JuBD8Dyf20vJgCAamzLap9s2HUexy6Mvm+tn/dAj3PzPcIkSaoprng9MLrjfl6e
      2cOq9Gn6Bj9C9867EUURT9cuEmmV1y5n8bqMqUdi15dfj1Nion9jFU3XdUQBttmuj4tPrXKX
      y8Zwr0ImnW5J/MlYlnRRRxS3pgZaLBa6rtUR3GithAmzA7Xf769Emk0GsFqtdHZ2UioZ5ZSr
      q6sb2m0uq5M//fAXmegYbeveAgK/fM/P8FN31m0xKyow+BuG7l4hKRkQDLdlfvqa/q8Z6o2W
      h/wMLP+B4SkyXaC5q+1FlKuhpowuE/WQnMZO9JugIQ5QvVwKgoDX660s7a9H1zSAUnyOp/7h
      MJ0j41w49hpTixc4dOwqV449wRM/eI2hYTuxhQhf+e55KBcIhpL8zd9Pcc+BQTZiU5MQSmWd
      xy+lSFg1QCd8YQkhWqYUS7OwEObx5+dQZJXjl6LkckXCwQRf+9Zx5lZKLGc7ePr5aYa230nA
      217LFDMZ0MzQbFb8v9nGdqlUikgkUmnDrihKS2Yy1SxFUchms5UNtZut4E7FwQdvey+FcpFL
      4amWNsHOrm387u6f5ENrRfjB43D0BViZB7cPPD5DqrsPgP9dRgVY9lxjUlsDNEONUbNGKnPi
      eYMxtgotB56HGpvr2oYhsXH0eMMNMqxWa8NWqK8HQqurBHq7mL1wkYXlKAPj3WRyInOnvonH
      Oo1YKuPv8BJezzA25EQt6yyvF7j/4GBDyWQqq/LaMxFG9nkYGLQCOpIo8HvPhjlnL0C5yO6U
      gwOdIpl4mt3jLlZjRXoDFi4tZRn1WyhbbFxZ8jA4cjcdIztJrq2x++57CXjqo9ebQ9M0stks
      yaShB9dvql2tIhWLRRKJRCUIaW5zFIvFcDgclMvllj1/MplMpQ2N3+9vmQ1ajWgizD/8xe9x
      fukcqbF+nBM7GPEPcKDvdu46dAReespoYV4NQYCH3gcf/2cgy0a3h8X/BMWtqFUC9PysESzL
      tt7SqCVEp1FE0yyanDpm7DbToqjmTckArXD53CtMONoJghjIFTSOHk8x8tQyWavEukWiKEvc
      //lhnngtzbfUJAjgzIr8/n29eF1SgwSOpS2UfB9hYGTXLfseqVSK9DVVq94FWn3/SCRS053O
      HFsul0mlUhSLxZa9WVdXV+np6anEBDZjADWZJPiLP09p+qp5Mzr+73+F+0Mfhr/4fTi2QYcH
      gIOPwGd/w3Bdhr7a3oOohqXLIOTC3NbPFW0w+nuG2qPrhveouGok3IkOw/6IfLep27SlVWvm
      AL2ZoDg6WFgrM9zb3rzmlwr0P72CFR1roYy/UGbeZuHCfKFC/AB5SSeVUfG6JMKxMoe+tcqj
      n+znxGt5Jh/6JUZHJja+0RZhRtSr6yWaqT+t/jfrkTeq2/b7/ZUtrNqx31J/89XrxG/cjNgf
      /GecfX7EzYgfDJXo7ofAt0nKQyuUwiDfQCE8GDEGUTFcn9GnIDdNrdojg8VnGOFqmurVoCkl
      ud3uli69NxJeXxfZSHt2SL6oEbucYaDO69JXKHPmySDdIyKhHmO1e1BxIMsCqazKC//xCgML
      cZ47HmH8Nz/P6NitJX6g4lSIRqMNq4D52yyGMdGMSepbSJptFEVRxGazVZob2O32TXeJLF5t
      ND71fJ7y1/+ctk3+F78N79vCvgD1EG4w+9g6DOvfMdKlm3p9ykZxDKIRlXbsNBhOaxIIk2X5
      TUn8AF6vj/mkTE/Hxt3OVteKnPv6CkqsQCKXpYhIJp8FSSZSKDOZc/CxrIv/4XdwULLz0dvd
      HPm7VfIX4nSHMmTdDkZ+7jPsf/c7W97jZmDGDMzWJtUwCbmdlobmWNMmsNvt5HI5ZFkmlUrR
      0dFBR0cHodDm5aDKtklyP6yV9ILNhqUuyLWUznEpnsGtSFgEkRG3nYDpUVudBu0mGgorg4ZB
      3HY3iGsoJyDTTp2ABqlXjbhE50dBEGrdoA6HY8MKrzcaoihi924HWrsNF1eLzPx9kMlwhrVE
      AqfVQaFcwmOxkCjkiReLXI7HccWy3H2xTGC2xOHfPov9hWV6V5KU3U7u/MofcuATH2t6/VuF
      +lre6qitmSpencdf7TWqztgNh8MEAoFKqWlHRwc+n6/S2xRoWeVXDfenPoNlYlv1BPH/+m8i
      VFXtrWXzrOeLFFQVRRSZT2U5tV7dfrB041IcwNIBHe/f2jmyHwrzWzsn/izkDGO7oTHWj7II
      5mYhCAKCbRC41PDZ5YsZsoky0cNRbotkSQkC/V4fsXiUqVSGIZsFSbKy128hkc+RV1XetpJj
      LZbAF8uiiQLFt93D7b/8OXqGhxpv/iOAJEkN1WPVNQFOp5NkMlmJ8FZ31TBdqx0dHUaMpC4K
      bHqHqs/fcC4eD31/+VWyLzyPGo1iO3gQZXwCTj8DwSUAeh02REEgWiix0+eiy6awnKkKWrl7
      jCqvZikM7UDpM/YJLq4ZxvRmsI5cS41uI9u0BpphK9h33dwOMW8E7J4hMkkNp91g1HRW5ep0
      ntTpJNsuRTFbSmUQ6FFV3C43/VU9d3QgbHexoAn0LiXxF0ogCCg/+wne/gufe91iHUBDk1vz
      b7fbTTqdrrRpN1vL1+f2mM0L6uulTVvBbEvfLgRFwfnu99Qe3HsvfP+blX+77VbeMWCsXIMu
      O4OuKjfsHfeBQ2yPeBtuLhvRW0EykueUXog+2VwdEmQj+ux7BBb+/dbvBZCbQS2t//gxgN/f
      QWRFx2mHi2fSrL8aY2whSX0eZFYU8dfV6p5XBXLZMkoyQ68OroLhFssqMj237Xhdib+6VLGa
      sM2WNGaej9vtJhQKNTBAvTFcH8Csxk2t6u/8EBx6GjKbbJzndMOjHwLlWgF6s0zNjeDaD/K1
      ugVBMgJq7oNGz9DclJEAp6tGXbHvYcNeyJ7nhlooAlDmxNL3N0+FeLPB6XSSvbYfbSKpsm0h
      2TT661VVgqKEpsOSJHFWE8mHMnSEUrjyJVyFErm+bvz/8Xe482tfZv9DD76u36O6Y4QgCJWM
      UY/HgyRJlZ11zO5v1ZK8fiWo/7v6R9O0La0CDXB74Rf/Fdg2CPrZHMYYtxesA+B/T+uxzSD7
      jR3i6wWQ7DUKavSisYdYccXIEo2/YLRQ3KqxXIerkfOtWyO+WRALL5HVXQx0+4isrxPo7OTC
      6R+iRZ5i/pU4d1wwC7t1cmUNuyyRAQ6nNFy6jiSAez2DiI58rTC+YLeiPfoAw+94mNseuO8N
      +27m5iHlcrmheEVVVeLxOIVCgXg8js/nq7HRWu2lUF9bDEYK9cjIyM2929AKPP6XcOYomNVk
      kgz9wzA0YawQ2TQ4XDAyAaNrIF9i037/sh/6fsVIW6hH9rLRDqVZqxRLJ/jfD6H/dcNf6Y/C
      7je/CrS4FgU9ytr0GVKFMideOcy+Bx7l0IshxmNp5pIpFpMxcqKFoioglDMUPd2M50Rc+SLR
      UomioLNQLOGTBLoUG9ZPfoSHf/Fn3+ivtmGw0YzgVtdpQ2NnuHo06590S6L53f3wC/8S8llY
      XYRSAY79EI48D4t1+TunXwWLAvcPw90K6PHG65k6v+cBQDPcn1LVKqPljSKYVn3+S+tGBzkk
      bkwNkkkLbewR9kYjHlomK7jwKxoel4Nd++6h02dFcY1QnDvGXDaPw2LFq1jJFsvIiot1ux2t
      UKSoqSTUEvlyHqfFwXIuxnyhxH2T2za/8ZsAoihSLBYbglibVY9VB9SgdW/RG4LNAQOj8KX/
      AOc2qAQrFeHFq7C+Fz79S6AtGf560WKkK+SuQOacUTFmfCujZiDwYbD2G32C1E3sjuLStb3F
      1rf+PezjeJ2db34GeNuj72t6fGx0jIu//0X6ikZfymqpdyyrIySThMoq05kkO5weZnJpDroD
      XMlmuHT4OA+/46HXZf43CkEQKk2K8/l8xa1Z7+2pHm/CbJZrRobb3Sa1Leg6fO+rGxN/Nc6f
      hufG4COfM3T89ClY+3ITI1mHzBkjGa7355vvI9YM9h1QirJR3n8jROh4H7tIvPkZoBU8Xh/O
      h98OU42NWRWnhcWdQ4wtxHiX3Vj+h6/93uexYh3ubTjnzQibzYbP5yMUCiEIQsUwhsZOcLqu
      VzJAFUUhnb7egycSiTA42GRv3htBeBVe3GIV2YtPGhmjXloQfxX0kjHGunm3ccBopis62uwU
      cQ2+R8G+i7u6sz9+XqBqbLv/AcL2694SEz2CDhaJZLeLhT5vg2zIXL7KGwGzlrddmKuA3++v
      IWjzMzMwZrazzOfzBAIBXC4XXq+38jM+Pn7rvsTJQ4Z6sxWUisZ5kW+35x7VS+3XBdjGjP0B
      fO+CTclZNMZ1fhgEAbfi/PFdAQCsNhvqxDY4d6bmeK+m8hOaCjbICSJHO90MraeIeuzEfXZi
      kyLv2MLWT7cKl869gi8wyvDIaFvjBUHA7XZX9vsydXszXSWVSlUYPxwO09fXVzkPGneWuSWY
      a94KPZovspotEC0U2e5z0WOv8zjNnYWJrbSo14x2ihsU1WjaKNmnX6E0M4PgdGK/4+0ofQsI
      +RmqDWMdieJMjtRzGfIXvoKW+q+Ibg/Kbbf9eDOAIAhYJrejnTuDSKMHJCsIRCSJdIfC2X8y
      CSNe7IMu/JHWu9jcCrz2yvOM3v0IfkVgaXGRwSEjteLipSs89k/uqoxLrkewdwY23PdMFMUa
      96VZolrdpr4+ea46reKWt7LJNrY3PBNJUlA1ksUyiVKJVDjBgS4vXdVMkF2CtnZ4q0LgsWsl
      k40rTnm9RPA/fp/yyvXu1glRxPn+x+j4jd9BFKKgZSkH46z/hz+lcKa235CazZILrv14MwCA
      5879nPvhM0xGk9jrXvQLB4Yo7euBcBbHbdezFHucffWXuYXQuXz1IrGSQCZZopgO8pdzUR59
      x528evIY4zsPYtHyPP/ME/i7bmfvPaN855tP86mf/1W2DzWmLJsllB6Ph2g0WpHyZk2AuQ+A
      WWVmdu5ot9/QluFoTJa8vcPNobUYqq6zP+BlNVsgW67zPFltbNldad8BQ3sM1Slz4dr5EuXc
      GGu/+13USKZ2vKaR+fvvIXm8+H/t1ymvrrL2z/816nq45S1+7BlgfNs2MrsmCZ6/TG88g003
      oquvri6xoo+gxNYpiyKRqTU6uxwE57O8/YHHiIXWmF6NkAnOs+2Ou1hfj7J3z81XfenFJA+/
      /7NQXGfmyhyd4/sIDGTwee0Uik7ia4v0j01w8KFH6fL3U1AE3vHwAwS8zbPuzf1+6xsUV2eT
      mr+XlpYqEr96Fbilq93odsPPXwVBEHiw7/qmKqPNSkXH7gVeof2NsAWwdKPrCrrnswhdIgI5
      kFyk/uh/NBJ/FVLf/jvcn/4M4d/5lxsSP/wfwACCIDD08c/iT/8BMV+SC+tZdIfAyyU3yFG8
      6hChi5cRnF5yRTfOoJdoJMbJmQtEo+sceOAgkdmLXFpKs33PLppX2G5hPoqXvk6AYfr6jejm
      dl1ncWGOn/row+zZ/8i1Lty3XT9psnnfGvP7mQRcKBSw2WwNBG3aBc0ivbdc1dv/ADz5ta0Z
      whYF7n6n0cAqc2bz8YBaHib5R39K9oXn0JIpRI8bxyPvwPMzn6U016J/6DXouRyJL3+J4rmz
      G46Duq4QN7qt5uuFTCbTtDOdzeFkTXExOnuWk8N+4u8apvMduwn0+ymkZmE4QAAAIABJREFU
      k4zsHUPToKfXjZ53sX9sB/9/e2cWJMeWHuQvs7L2vbqruruqd6kltZarK919MAN2OBhjMwRg
      jAO/AAEG82qYCGMiCEMEmDDh4AHCDjAEDjCE7WFxzAyMZzzMwty5y9y5utLV3pJavVZ1174v
      uRUP1V2Z1Z3dqpZKumqpvoh+yL8z85w6ef5zzv+fc/4zMz9NMDzKzEQQR3AMURSYTkwcNQB3
      3wiCiOQIMDb2eC7Y3YgdsVjMslLvGsytVqtnjdHun9PpHMy39figUYXl/UvSD+Qnvgivf75z
      PFH5PR7ls28rbdK/fpX6dz5Ar1Royy30SoXW9U9pvPsubV1He8QmHy2boV1/9Fqh534tUL+0
      Wi3Wf+NXmdCb/MczMXznrXcmtVck/vbP/NIzzh3k81mCwfBjxVcql8usra0xPz/fMxewF13X
      qdVq3YPORVGk2WzSaDSYnZ0d3LeVW4+eCd7l/Ovwi78Cjp20D5wI69AW7OR/N031mwe7qsVw
      GL1w8B4Awe1GkOzold5wdbbYGNBGDAZpt2Rso6PHex7AjNPpRDn9Cg4BxkstdG1/K6NrbYQn
      HeM8JhurS4+1JKHdbpNOp4lGo4+swLsRod1ud3czTa1W64ksMRAczk6l/sm/1BneWGF3dP5v
      rvwAvldh6lfB+wq9B14I4H0FzfV3qH338EMtBElCPGSTj/8v/yztPeHfpZlZtHwO0esDQcAW
      CmELBl+cHgDgwa2bRL/8W2wKIu/GA9je6fX2TJdPs5A4xcx0n7OMzwG7e37b7XbfFXn3WNvd
      yTFZlvH7/YP/tu12Z2b4yg868wO7q0FnT3VshejE/iXOZrR6Z50/dA7UsHloXrvK9i/uP27K
      jBgIMvJPfo38b/xLtLQpdLso4v2Zv0DkS79C8uf+Ctp2b6hGKZHAPn8CvVxGr9fRq5XjbwSb
      mTq5wENN5KSk80Oh1+nmKHn4/Bt/Bofd0V0u8Kwnwh4Hsx//oJMy97K7XRI6dp0sH3Hmtl8E
      obNK9Kd+7vGet3nANtsjEg8Z4nWTddhxv/U2E//t92l873soyw8QfD7cb72N4+w5BFHEcfYs
      jT0KoG5uom72hnp/oRTAbrejT87B1gNGKi12zaRmUcZbi5BKpZiemu6OiwOBwDPdA53NZhgd
      tQ5kdRCa1ok+LQhCNyTiUaJ2DHQl6DNAmppGisdRk8kD73Feeg3B6cTmdOL74l+0vMf3hT9P
      4zvffmR6L4wNAJ2Wz/HOT9JsQzraWfxmKzv4hXN/i5//c7/AzPRMd4Xk7kGAz5Jw+OAT4Q9i
      d8ZX1/Xu/uCjTGzpun6o4fy8IbpcBP/uL8FBDZMo4v+rj+5x3H/2x3Gcv/Do9I6aweed+fMX
      SH3up7td24gQIxQyzhBTFKW7RqZWqz21E2+ssNls1GoHT+BYsXfvryzLR1rj4/V6j5UCAHh/
      6qcJ//KXELy9s86C10f4H3wJ58VXH/kOQRSJ/vNfx/aIHveFMoJ30XWdT+5+jKzIvL74Zs+Q
      oV6vd+NyQufACZervyjPg+DBg/vkclnefPPtvu5XFKUbKW43z16v98i7vI7jt1XTaZofvI+a
      ySBFo7jefgepjxhHPe9IJcn843904KRYjwLUarXneiJsEMiy3I2xv7vc+FkGA9ttvY9qe+zm
      GzoBzB7nqKrjpgCDoq3rNL73Hap//HXkW7fQK+XuatAeBRgy5GXjhbMBhgw5CkMFGPJSM1SA
      IS81QwUY8lLTowC5rQ0+vvIJ1cbeqXOdTz56n0rj0Ru679y5w9bGCnfurfS19WFtfePQ/9+9
      eY2r12+j6U9oqzcLrGV2t/M12Vjbv1EiubZMpSGjNipUm/1vXh9yfOlRgE9v3+Xyqxd479t/
      QlOHjYf32M6VSd79iCv3clSza2yVZYrZLe7cX2Xj4QMyuQy/+5//C2vJDK3iOnKryfWVCvER
      F42WTKnSoFIooKoN8oUiye0cqfVlbt/rbGpY39igXCoBncPfaqUs167fRtup7xtbec6eiPPd
      73+A0qxy/eZd9Dbks1t8+ulNtDbk00kerqeol4rIeud8LOj4zteWl3iwugnNIp/cuMPKxhbQ
      ZGM9Q7Na5Obd+x1F1SqsbFa5ee0KVz+9icv5YruDh3TYNwQSRIkLc0GuXblKWvVx+/oVJsZi
      zJ4+h1BJka9W+NG1ZaYTUba3MvhHoiwsLDAdj3JjKcXZVy4QEPJcvbmMpOW5tbTF0pWrVKtb
      /NF3rjAWjXD15m2ijgqf3O0sVrp1o3Os/dUrV3nvvfeJhP3sbilNp9b41nffZW5+jh+89yEn
      piJ8eOUG7773ESdjIh/dWeGTm2u0tu+xXdjm2p113v3mN9jaWGI5LdNqNfnwW9+goILDHaC4
      coPcTkj79z68wlTExpUbKyA6qJdSFAs5kpkc//db333suMNDjg/7FKCta9xaqzIVFrh94xqy
      JuwbyuxdkajIMrquoQFCq87M4iVmgzrLuRaq3CKX6wSwPX3mLDaxs32vJas4HLsrFlVajQrl
      eovLb7xNZf0mdzY7Gx5iE9OcSESp1BoUMimu317G5/MyEo3icbnQNJXV+3fJ1RQ84VmyN77F
      G1/4Kb72jSucn5V4mGxyMjFKSwWv14OitbHt/OpMao3byyl8XjsITn7yCz9BeGSc0UiIEa+L
      4SDoxadnIiy3tcFKMsPpxXP43A7Wl5dQ7X7mJkIUGuAVZRS7H6WcZrskEx8N4Q0GyCXX2N5c
      w5F4hVNxPyv376LZ/ZyYSfDg7k0kV4hEIkKtZSPodfBH//2/cuGNH+fETJxSqYxT0rm/liE+
      PorUlllJlbhw7hQCnWFROBwmnU4T9ru5cXeZM2fPIzdqBL12Si0bajXDVrHJ2VMnSKWSxONx
      kqkU8YkJHt67jdMTYjQa5t69+4SjCeIxP+VSC7soc3d5g7Pnz+GwiSiNCi3BjaRW2S61mEns
      PXVgyIvGwGaCNzY2+g6/VyqXCAaCg0h2yJAnYrgUYshLzXAeYMhLzVABhrzUDBXgOUSpF/ng
      gw/ZThe6nqhaqWzySul89L3vUlWNCb2CRZiQ6x99n0/urOyTFwqF7tzLy85wtuc5RK6XKVaa
      XH/v+4xfusBHX/8/hCMJps/P8cG3v8/nP/+nqbfaVNUmn777Ha6FgvjH4kRsDyg2QGvkGT/z
      NlGvSCMa4z/99r9lYnqR+GKcjRtbTM0H+fRHN1h85TyVhorYKIA3wmjIx+Lik4eHPE4MFeB5
      xO4h4FBxhqZQixlG4wnGxuew6W0Wzl+mUJd57dIJfvj+FcZPJHD5AqRqsHtcZmRsEllRcXgD
      tKU2kycWGfEGmZ+fQqp5aItlTpwwDgMfGZsk5tW4UbTxclX/oRfoWJJKpbpRogfFdjLJyEQc
      6fmPFDNQnlgBNE17rHB/Q4Y8D/RtBCvNGuvJThSuQnablfWD47YMGXJc6NsGsLu8SGIn2Gi1
      qWCjE6vGfFLJkOcXW+1DBDXfvVaD1qdvvmz0rQCteoXkZhKHy4eERqmld8+tGg6BjgGVDzpn
      8+4gjXzxM8zM80PfCuD0+HnttZ3zrUJ+nuYhQ0OGPCuGbtBnzA9S3+G9re92r3/+5N9k2j/3
      2WXoJWc4EzzkpWaoAENeaoYKMOSlZqgAQ15qjrcRrGRByRnXzqnOqSNDhvTJ8VaA8vuQ/5px
      nfhl8Jz+7PIz5NjxTBXgRu4uN3N3u9c/Pvk5Yp7RZ5mFIUN6eKYKcDN3lz9Y+mr3+tzI6aEC
      HFda651THnc5pj3v8R4CDfnsyPxhz9IKFv7dZ5eXJ+BABdjeuM9mWuGVy4tDLfkM+IOlr/T0
      lv/snX/I+ZHj2co+zxxYtyuVAp98tMz5yy/bHqEhx41/9f9+i7uZB93r//Czv9n3s5YKUC9m
      2NyuMDET4yXbIDTkGHI384CPN6891rOWE2HuwAguyYbebAwDxA55obFUgGathKzIZCu14VTx
      kBca6x7AH8brd9LIFOn/SOYhQ44fBxrB8bEpLr7tHnqAhvSP1dzAcz5fcLAXqJhjM7k97AGG
      9I/V3MBzPl9woAL4wyNMT9uGNsCQF5qDJ8JSD7jzSYkLb146XsOg8nudRXK7RP9aZ5XoC0rz
      4x/RvPJx99r3M19Eisc/wxwdLw6s28HQBJMLLuw714V0krWNJHPnXyO/tgROP7NTz2FBK7ne
      Ltc8/nwBaV75mNLvGMMK1+XXkJw2yKWNm05d+Axydjw4UAFqtTpej7t73ZJVEmMjNNU2Lreb
      9e0s04nxI8UF0vVei0LXNFT18U/iEnW9Z4im6TqChaz9BGkMmn1loOuWZdBvWe29T9N19B/8
      CeLX/6ArU//N/8LWbvdMaj5JuQOW7+tXNmj21r+jpHGgArhcApsbdTTADownEmwk00Ro0vb7
      mXL4jxwXSBR7LQrRZkOSnmCAted9NlG0lj1JGgNmXxmIomUZ9FtWe++zieI+mSRJsOdgwycq
      d7B+X7+yAbP30MajpHHgnV5fgLqcpVu1BRuTid1oQB68R8zkkCHPkt+/959Yr650r7906Z9a
      3mepANnl21xdWUPWheFaoCGk6ymaWrN7/SLFMbJUAMnjwyk5CAVs+84IHvLy8e3NP+6rNT2O
      WLr5/dE4b507i9vnGfYAQ15oLHsAtVnh4+s3qenO4UTYkOeLjd8c6MyypQI08hmWUxW+8BPn
      0HnKwYPqd3t/UOAdsA/3CQ8Bvvw7sL5sXP/yrw88CUsFCE0t8Df++sLAE7OksdQb2sR9aqgA
      QzqsL8O9G081iefHQT7kmfMie3f65akpwMbv/SGbv/fl7vXib/wauJ5WakMehxfZu9MvT00B
      Gqsb5L//QfdaKZZh/GmlNuRY8RztERgOgYb0MmAviyXP0R6BoQIMiifxZlk9O2TgVL/2FdRU
      qnsd+sW/NyAFyH11f5Dal40n8WZZPTtk4FS/9lVapr0Tg1OAIZZYnQc25PliONE75KVmqABD
      XmqGQ6BHUGoVKMnF7nXMPY5Lch/yxJDjxFABHsGN/NXn5lxfNZlETSW7145Tz1eMneNI3wqg
      tWrcWd5kcfEUpew2pYb21DbF11fXaaxudK8Dr5zFHgo+lbSOE9X//dWeDfBjv/3vP8PcvBj0
      rQBbmQKnJrxsVXS0psLT3Cqz+Xtf5v6/+Nfd6ze//oeMfH7oGx8yePpWgLDfza2VJNMnwjTR
      KLWOT8y4r9z6Bl+5/c3u9Zc+//c5HT35GeZoyPNC3wrgCY5w8eJI58I3wwSdkBy6roMYBscJ
      091OnJNxgp97sysR/V5GnCqLIaPiuUQnGv09q2kWgdot0rWSabqOrhvPa5pu/T4LfFKAuNsI
      rGUXHH3nxepZy/dZPDviDO8rKyE2hv3VS11Z2+OxlGmhUThx1nidpoEUB4fWIxtxRNHc5nJ5
      svueSGZFfAbMYV8OeHYhMrvn+1rnWTpxsieMjKZpCO1+g/ocgKZp3bAo7XYbQRCGsqHs2Mie
      eB6gG4NGrZMvN3tlbY1UMkm13jxcpsmsrq5RrtYPfV+lXEEQoFKpdGX57DbJZJJSpXbkdFuN
      Kpubm73pajIPHy6TL1UPv09XuHH9OsntnCFTapTqKsVS6fD7LPOnks1kH1kGlr/XIo16pcS1
      Tz6m0tK6Mq1VZ3Utid423ic3qiS3tpBV/dBni/k8+s4O8cPuq1eKbGxu0lJ2ZLrK5uYmyWSS
      5iPSaNQqbGfztE1paK06q+t78ly3yvOedIFGtczy8jINWTsw3SdWgG5QIsFOJrVKqVrvytLr
      SzxM5jsR2w6RoTXIFhuIonjo+9bXlllbWyNbrHRlEb+TbLFBamv7yOmWy+X9v2OH7W3jfU67
      jeZOIXbvU+tUWiC3Gsb78hkerq6h6cKh91mWgVJjaW2bYiHXlbWxkVp/QKFcO/T3WualXMUh
      KtRaWle2trqGWkvx6YOdZzWFa1c/pSmr6Dut4kHPuuxw//4yTUU79L5CJo0uSgjCThmIEihN
      5GqObFU99FlBgHq5wPLqRjd/H398FaWaYjXX7N6X2tzYl+d96e6gVrLk6gfneXAzwWqVm/dW
      WV/f7Ipi8WlGgl6ajcahMhCwiZ2wfoe97+z5i0xOTuGUTJVVtFOr1/B5nKY0ZpiZShD0eQ6V
      RSNBNrYLVEqFrqwlyzgcThLxia4svZ2iUq335k+QCHpdCDbDjAqEgiw/uE9qa9uUPwfRSJDR
      UWNhnFUZ5LNZ/D4vmm78NkXVENFpyYrxPpsTl8NGImFyQdvcjI/48AcMV7HabhMYnSLsNqL2
      BUIhZKXNRCy885ydk6dOY1drNFVjJOx02JhefIPxgKMrawsS7eo2W2UjL8FQAP9IArfNKBfJ
      4UBXFXTTyNrr9yN5R4j5jLJyuxwEx2aJeAxZMbNNUxeNsrfZOX/hHLUmjPrt3fui4xNUctso
      ps+xL11dZTOVxhMaJeAyysDlsvekOzgFcPhZSIwwGh0zZIJIvlhEbjUeIbNRKuXJZvOm9/k4
      NTXGyMhIV5TPpkmn00gO09Yymx2fA+xOU6w6wc7Gg5usJDOHy2x2PJKOZHo2l8shCm20nrru
      Ihrx94aIsTlwO2143KZZYZudC4uLzEwlDFlbo1bbqzz7yyAyMUPIJeD1+YwiEBUqTRGPy9Hz
      vkaj2WPMpdMZWrKMJBkf2u2QWH1wh7LJW+dyOVF0Gz6XUekEvUUuV0A22ZWyqpFbXyJdbnVl
      mlwnWdSIh42GRhAA0YHcqHZlksNF8uFdKqZ0lUYDRdONyqkprK9v0tppxbv580c4fXIel934
      HeYW+zCZ2+fHLpobRolIwIOmKrTU3ryY0x2YAqTXl6hobnJZU+untUhn8lQb8uEyUWQ8GsXt
      dpned5+yYsPjMWSaqrDy4D5N09cqb69SFzzUqhXjfUqZbF2gWS0fLmuDx+1CM32ETDaHaLOz
      tWXMuEbDHq7dXWPLNAu7trGF3GpQrZjeJzjR1XrvoSK6woPVtZ6ezLIMlCpb+ToeUxmgqyh6
      e8+Mi0CxVOhpLGIRD7f29JaqqpOYnMRuMypFsVCkWc2SrRqteLXaoFjM0FKMMs3lcwiSG5/L
      aHUz2SLTYy5uLRtRp7OZDHc+eZe6aCitVbqiw0lqxaQUNjvh0VHk4iaFuhHI1iHKvP/eh1RM
      FdvpchAYnaJRNEW7bqsE9vQeks1GsVhCNxVWWxDZ3DQmVAFamsaD6x+yXemUwcAUIDa5wETE
      RSwW68ry5RaXzi8wMT52qAy1zr3VbcqmoUgwOsXMRLin1U1vb5OYPUEkaBR4IDxKMbtFTwxi
      yc1cfJRGq3W4DIFqvY7baXzoi69eJhaLcWbBcEvqNh8nEyEmEtOGTGng9nhxe428WA3bkNy8
      er63V7AsA5sXvZEjWzQpsuRhfDTQCfC7iygyMT6Oz2vqeQSJV1+5QDBg5MVp06nrDlym4WIk
      HEDwjDG524rrKoLDxfzpi0RNQwy/00nb4UIyJTsSi+IKjLM4szOU0xQURWc0PkvEYzy7L912
      GxAZGx9HMrXQLqlNCxdep1GJ84UaSm2bokkpqoU8mmgjsXvmgaZQKJZpNRtGy64pbGXy+L1O
      FJMiS5JjnzIGfX78IxPY9U49GNwQSGtRb6rU6sZez4jfSbGqsGUaE1vJsLlYmJ0gFIp0RWtr
      a5RKRYolo4U9d/EyoYAPn6lXwO5iNhHHa245aWOTJGq12uEypcxGpsa2KS93bt/k5vVrLC2v
      dWW3bt1ifCzGdtpohWZPnGJmdo7x0XBXVlcETkzGEM3RskUHrWqeB6vrh5eBRQ9laXtoTUqV
      Fl6vMWwrF3KUaw08HkOmCRLUc5QaRoVQVRWnJFBr7VSwHQNVb5bIVndkmkJTbZNLbfTYBbqm
      IdhshoFpszM2Fu00O6a2R20LONtNqvJOntsastIkkysjYozPC5UWkaAfM/5AgPnFS4yZlTHg
      Y/nuXeq7vYLNTr1Rx67LtEz5Q2txa2kFh8PW/R2FYo71ZAbB1MOXymXGIn7uPOz0DINTgLaK
      okOraYTZQLSTy25htzsOlwki2CTEnlOJBUCgrfdOkmh74uGjtWjIKqWK0XK2lDY+r4tXzp8z
      3SeTK9V7jNtsWWEuHiZuOlElHAwSjowQDBgfJxQK0mipBPyHx8T2uD0EgoGesThKDc/IFK+e
      My1csyiDTKnFxTPTTEwY+YuNhqk3FfJ5Y7iTThdxO1QyeUNRrIxvUXIgq1pPq+twe7HbQDDV
      G5fHy8bmluFYsNnx+734HALVptES7x07wwFjcZcLRDvO3e5DlGg1ZASlTEVud2X7xuc7doGm
      05OG0+MnHnZTVQzZ+ESCerWIohlDqtFojAvnzhgVuq2SKVQ5ubCA22F8j9jYGJJ3hB+7tNjJ
      CgOipUmE/U7Gzd26KJKIx3u7awvZvXsPyaU3cXkDXdnC6UXOnTvXM3TIbCepViqUq6aIApIX
      nwMiEaP3qOU32cjUWF83Wt2WZsPraONyGT2FKIrUGw1EUyUZm5hAFER8XsNbNDk1w/j4OLER
      o7U/GAG7OT69zcXWw1u9xrdFGURDbtZSRfIFsyMggN+u9jYWNgelYolwyDT0cnhZmOx1GFQL
      aURPjLB3pzXVVZbuLeN326mZ3CeS5GBqZrpnmGC328nki9hNY6C9Y2fAciy+sbWFs10nmTcM
      /GDITziaoFHO7eRFIVesougCXudO5bTZiUQixMN28rUdhWprbG2nGZu/wGTIKIPRkI+aLBoV
      Wy6TL9XIbW8bRr/NxaWLF4iOjvb8ttTmBrLJIB+YApTLZSSbQLVmqpyqTK5QxmX2lFjIZufm
      GAmH9512spdoJMj9h2tkzN4iTUbWBOoml2IkcYoTcT8zs8ayZafdxuzC2Z7xfmQ0xhuvv947
      pGqVWEkV9/c0fZAtlEFXeox5S+Pbogzqqo2J0QAhU89Dq8hatk7V1LvFIj5Eh6/XI9WqUlWl
      HoeB3RsiFvag7raSosTJ2Sk00Ynf5AVqVPL7bIV9hqyu0m6LjE+fZGRXoTSFWr2JvKdXGB8b
      A1eIyYiRF13TcDjsVOs7owO1SaWlYdNaPb1MMODi/Sv3CHp2KnY9S7Ypcm/pFrLJk5PayqLU
      81R3K7vkplmrceLkLI5dpW1rLN9f4urVqz1p+IIhtkwG+cAUQFVVFBXGokYr9GAtxfjYSI/v
      3Upmd7o5s7hIyO/hUNoa4Ui0p+XM5EsEAx7CQaP3QC7xcLMIbaPQytkUd5dXaLRMLVirxHs/
      vErJ3KM4/PidOrWaeZ6iP9Jbm+gI1BuGoW01zLIqAxCJRkfweAxZMlPlzYsnicZMvardg98l
      9uZPcjE9Fe953/j4OOPj40aFAHKFAvduXiFb3fE+qQ1yNZVQINDjetxvyGrIuo7P60PYHcfb
      7IhtnWZ+nW9/eL0jU2rcuH0ftS32DL0QRJKbG0xOTnauHX4uXTjD7JkLxPxGyy5KLuIhB4X6
      Tg/gHeONc/O88frrPb8jGA4SnzuLVtnpVUU7Z84u4guOENz1+YsSk4k4Y3vKYK9hPDAFcDpd
      uN1Omk3j4+t6m0a1bGj+AbK+Ee1ocqO3R7G8z0EmucxGKmvI2jqa1kZTTTaFVWUyzaoelbPn
      LzI/f5L5aaOyWw2zrMrA4/Xh9/txOoweyuV2sbGRwukwDams8mc1x2FBOBAgOnXCaMXVJtg9
      FLLbPS2sJkgUksuG21LXyGayFCp1JJNHanomgYyPd17diWJh93L21By57S1U8ySVhTdGEARE
      8+z7ARNXVuiaxvrDJdyh6KH3mWeHOz9MoVKvIzl9uHeUe2A7wqrVKrLSGY7sDikWTp8hub6G
      Yjq0bP7EQs9aj6NQzmwg29zksrluaxcNufkf3/whp0/Oc35xJ6CvrhAem8bkxiYQTSA/uEYr
      ZGp1dyqTf09ldzmdPTbFUdj7uyKjMSKjsR5Zv2UQGR0jFInuW6bh93l7ZpZ3h1mhahk4oFJo
      CrfuLBGJTxnuTVeYxTkvq2sqmsmBvq/C2j289dab+16ZSmUoZFYYmT1NGECpky7WSUxNGc+a
      vDHhiRP73tFlxzAuV8o7hvHBStDJXwKbcOAtnfscDmTz7LDNjqApbKzdQ/NEmYkM8BxsTdNQ
      tTaaZjqhr5nnyp31HjdjqZjn+tWP2UwXLN5yOIFIDK/DRixm+sgWBiBYVBIr/3m7jcNu58HD
      hz3P6pr+WAraL/2WgZVLNp0r4xD1HhvFcqi0lwOWPaytrLG9vkSubppczGcQ3EE89kPKQKlR
      UWDu1CvGEge7h9Mn53qHXgd4Y6xwe320GrUem2Ifcol7a1tk8jV8bvvB92ExK90s0PaEGU2c
      6s6FDKwHmDthEU5dcvPOG5eJBI1KF/HZeK+g4A4UYXxk/zOHIdrQ5FavgbpjAM6YDECrSrLr
      P08kTK5Mh49o0IXXY15X40GtZ8kWR3uN4wHSbxmEg0EUTUdyGR4fQbTh9TrJ5fLdXtDldrGy
      luTUmcVD0xWFNoJNwly/xibGcPiDTOx6WTQF3WZj5d4SweBoz/i5B7uXWNjL6toG0YkpnNZ3
      geTmjdcuHfTf/bc7vbjthyiKIBGJBEFz7/j3D+gGlBo1WeztyTSZlbUc8bALWdFwOwbYAyAX
      +eGVW71je8FOZmuNco/B5uH0/GTvYq6+EWgqKlXTjHGm1GRqLIDdYRhTtabG6dMnyWeNiat0
      roreLPQavHKFH91YQjMv/LHy2gyaPstgbCyGrCg9+YuOxZmcnCYxbvSCkdExLl++9EiFtdsl
      StVWz2JCQYBmtcTy7h5sm522Bk4aPb73fSh17j9cJzoe7xnbPzatEjfvr4PDe7gNYPcyP51g
      fm7uYOUEaJVZTqbRBQfO3fx5x/ix184yPz/f7Y0GFxWiO5UfNT6EVqVcbzNpGk6kt1NUa63D
      u7kDUNsiHkkHyfjQ0bE4bV3h9tJDzp7p9EJel8TKygqjUVMFU6r8M+51AAAEFUlEQVRodn9P
      JclXmpyejfcMn5LZKpcXp3EFnt4hHUcrAwFZbu2TOp0HtrnWaAqZbI5cNsPk3Ck8OxWgmM/j
      8HiJ7S5iVGo0dIH43Fmi3sMqooe33nzjaHk4DFEiEgl13Nqqfnjl7gdPlM9dHnvkewbXA1i0
      nHeWHqK1iuRLxmrBWDRCJBanVMgdOYl7D1a5cH6RSsmI05PcWOXh6iYLC8b2wdjEJLOzc/i9
      RiVpO0f4U2+cp1k3rVy02XG6XDidphnZbA5RcrBtWgw3aPouA02mpcJIpJ8JuEdgs9PW2jiF
      ptGyW/nyd4Y22Uy6x5Pz1Om3Ze8XUerrPYNTANHJ/PREz1T+mYV5PIEodfNwwhEkv3od0em3
      eMnhTCfGWdvMsLAw35XFJ2ew26VHdsONapGVlRUQDcMpXyji9/tx2I2O8OKrlxkfH2fx1FPc
      NN93GWjU6q2BGeSzJ0/y5htvIu7OjwgChXwRoZEx1vkPemjznDPAwFga9YaMzWb6WDubN+IJ
      Qylo5tksg7uYg1joSCl4AyG8gd5nNFVlYnwcXT/cczN7Yn/EZZ/PjyBAo9l6agavJf2Wgc2J
      UitQqo49ef50la10FjQZT2hH8USJS5fO8v4PP+XVuZ2GYdBDm+ecAdoATvxuqdfzYrF5A8nD
      6bkE4xODOS6mVMyzuvKQ0cmTTB3Rq7S9laJab+IPR4lGnmHgLYve0hKthegM4B+EcooS4+P7
      y3x9fRtJr1BsaPich7spX0QGpwBqgxtLyyg6BHcmpDL5Cm2t2eN2o61Rqzcfywi24kncqude
      eZV2+6kfBGuBRW9pheWGmAHSr8H7AjOwL58vNzg5NU4oZBhs7XabfVFXRAcBn4NM5uhGsCWS
      m4vnFzltsgv6plXgf37tT7h5595g8tIvVr2lFY4AQVf7sdYl9cVnZfA+RwysB4gEPKynvVSr
      ZaDjQoyNx4mN7/F1awoNWWd01Lf/JY+DqlAoFmjrMtOJRwwp9iK5eevyRYLmhXTPgEKhiK6r
      yIp6+I0HLNUYGDsGbzyReCkMXisGagPsM3itEEVajQYu1xH92AdQLhXQ2gJez+GbVSxpt0mn
      0/ifsQI43T5a8jYB7+GL+jKFGtMTISTHI1bJPi4vmcFrxQB3hFkYvBZkckUENAZkAhAIh1Ca
      rR5ffr/k00kkt598Lv/omwdIs1EnEAigqAeEBNxhd9bX5RieY/K0GFgPYGnwWmBpFzwJNi92
      sUWtVj+yqzAyMUNV3sDlG9BwrN90R2NEjjDRHAodzV08pH8G1rT0W7Fj43EuX7786M0v/aLV
      WN3MkS8WH33vXuQKH12/Szp9+Dr6IS8uTxwc97NmezvNyEiYXL7AWCz26AdMlPJp1tZTTMyc
      ZDT0GDbEkGPP/wfTSIcMpj+QnwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Energy deficit/surplus across states for Renewable Sources' width='192'>
      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
      7jASnQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Forecasted Deficit for Each State 2018' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Forecasted Deficit for Each State 2018 (2)' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='National Security' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Overall GDP and Energy Consumption Relation' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Region Wise Energy Consumption and GDP' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Region_Sources_Of_Energy1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29Z3wc15Wn/VR1zt1odCNnkGAUo0iJQRKpQFGygmXJtpzHfu2RZuzxzOys
      7Z3Z2fHaq3fecdrd1zu2R7I9DrJlZUqWRxEiKYqZoEiCGUSOjUYDnXNV7QcQoCgxAQQRGvX8
      fviArq7bt7rq9L333HPOX1AURUFFZZYiTnUHVFSmEtUAVGY1qgGozGpUA1CZ1agGoDKrUQ1A
      ZVajGoDKrEY1AJVZjWoAKrMa1QBUZjWqAajMalQDUJnVqAagMqtRDUBlVqMagMqsRjUAlVmN
      agAqsxrVAFRmNaoBqMxqVANQmdXktAFkMhlkWZ7qbqhMALIsk8lkJrzdnDaArq4u0un0VHdD
      ZQJIJBL09vZOeLs5bQAqKpdDNQCVWY1qACqzGu1Ud0BlDCQGOXbsGF2B+PD/1gKWLZ6PQ+vn
      0I5jBAFBa6F22Uqq8owIU9rZmYE6Aswk4gN0B5OYnV68Xi/ePAcGrUgq5afHL+D1eskzZziy
      7S3awlPd2ZmBOgLMMMz5ZSyom0ee6dxr4awWV2kdy5ZVoEhp8hpep6svSpXdOnUdnSGoBjDD
      iPW3cyQewaIDTC7mVFWcN4wrUpJoNIu+QDNVXZxRqAYww5DSCcKhEFkdIBnISDKGTJL2g3t5
      pt+OoNHgyK9lRZHpsm2pqAYw47CXzvvwFCiow10xn6oCP/VnDNy8eRF5+qnr40xCNYAZRio8
      QEdbC0EDoLdQ4HGDqMHqLmXhurVU1x7grbcPsmzdQoocJjSC6gu6FKoBzCSMThzKGU439gz/
      by9l3Wo7eaZ8SksNw28pWMG65afp9gfx2Exo1KXAJRFyWSGmtbWVoqIijEbjVHdF5SqJxWIE
      AgHKy8sntF11H0BlVqMagMqsJuenQIIgoNWqS52ZTjqdJplMYrfbJ7TdnH8ybDYbev2FfYKy
      LNPd3U1ZWdkk9+rak8lkEEURTY6sgpPJJLIs43A4Lvqe3t5e3G73Re/3hch5A7BYLBddBEuS
      hMViwWazTXKvrj2pVApRFNHpdFPdlQlBFEUSicQl71U4HMZqtWIwGK683Yno3ExFEIRL/qKo
      zCxsNtuYR7xZbQCKotDf3z/V3VCZIAKBANlsdkznzGoDEEUxJ+f/s5WioqIxzf/hKgxAUWQk
      aWZXXJBlmc7OzqnuhsoE0dvbO+YiCONeBEcGGnntmT0kPYVUVddSN6eGPJsR7QwaUwRBwO12
      T3U3VCYIp9M5Zpf3uA3AYPYyd2ElrX09HHzrWbb8dpCsxkJxzWLW37SOpYvLMY+38UkkkUhM
      dRdUJohkMonFYhnTOVdhAIUsubmARdk08UiY4NAgQwM9NJ1o4OWfb6Pof3+Oqku2oCBn00RC
      URSdCZvdjAaQM0lCwSHiaRkQMVodOB1mUkEfccWK02lBKwCKTDIWIpgUyXfZ0GrGPvQoijLm
      RZPK9EWSJMa6rztuA0hEOzi08xghUUTJpBjs7aE/nMSSX8m9X1pL4eUaSA/RdOQUzR1+ZHsR
      6267HicQ72vm7a3bGJJt6EUjZQtWsnplNSf+43cc0C/m7rtvo9QkoGTCnNj1Ii+c8vDXX7gD
      t+3Kfb8jCIKAy+Uaz+WrTEMcDsfkTYGi/sP84X/9G4GqpWy443Y2fvR2ylzmMawBRLT2Iq5b
      Xo7ffza8F5lkQqF4wTruWL4E2/vaMhhLKCtT6O+LUlJlIxWNkcwI5Be4xr2SVxQFn8+n7gXk
      CAMDAxQVFY1pL2DcBuAqvYVv/WQhwfAAbWdO8syPX8UX01JUt5j1q9ezYnEJl9yD1Dupmesk
      2tvLwOiLMkklg0YxoaSTpEQNWq0WjSggaPU47R7SgR6SFXOJRrtJCMV4rOcu9kLDn6IoFx0W
      BUGgrKxszMPmTCJXrm3kOi51PUVFReh0ujFd87gNQKu3U1hpxZ0qwFNQRMXcxQQHAzQfeZPf
      Px7H++MvUj3mVhU0RDm5azu7doLRVcKyG25m2RwvoMHjcdIfDBCOScTaOrDOXYax6dxGliRJ
      583pJUkilUpd9AsZcYNWVFSMuafTHVmWEQThmhSUnQpSqRTZbPaSTovu7m48Hs/kxALFBk+x
      bct2WsMREuksWUnAaLViz1vFQ3+24vJrgAuio6huPZ+rW4+iSAy2NNLQfIyBMu9wZ+15mDM+
      QpF2egJuFi/T0NX0vovRas+bA2o0GoxG40VjgWRZxuPxYDbPBH/V2Mi1WCBFUYjFYpe8V/n5
      +Vit1jGtA8ZtAIqgYHAUs2iuG6fLjddbSJ7TgkGnGX9FskyS7pYThGw11BVayKTjpLOac2l9
      WhsVziwNR/cQLrwTlxgZ7yeNkkqlrroNlelBKpWaPDeo0VLC4lVWsuLw466kIwT6hx9Ijc6K
      2+u49Bqg/wj//sLb9A3GkWUZsb6eZff+BWucBt57+/f8qSeErWQJG2+/CY8ewlYrOkRcVcUk
      9vSx4FMuRCGJ1WxEHGfit6Ioavn0HCKTyYx5zTPuhJj+5pf54TefI1buxfwB14/Du54v/N09
      lIyn4QnkcjnBiqIQiUQmPMliOpBrU6AryQmORCKYzebJ8QIZraXMu66K08k0du88Vq1bQbXX
      gVYAjc5G/ngbnkRkWaavry8nDWA2MqluUGv+Ij72F0UMhiNE/T6OHH6dt5uG8C5cw123rsU7
      3oYnETUaNLeY1GhQUaPHnl9EZfUc5i1dzq133M+nP34PFfIhfvXj/6Dn8k1MOWo0aG4xqdGg
      2XSYrlPHOX6mg8FkFk0mQywtYStax5f+ehml4214ElFDIXILh8Mx5oywcRtAqK+B5554lVRF
      CXkuNxXltdS6LehFgWQwTLLANiOiQXNlo0hlfF6gq0iKl0nFg3S3JvC1N3Pi0L7RI87CDXzl
      7z867Q1AURSSyeRUd0Nlgkin05NnAO7yW/mHn9863tOnBaIo4vF4probKhOEy+UaczToDMrf
      mnhkWb4m2rMqU4Pf7x/zlHYCDEAim52ZEYeqGzS3mFQ36Dm6eO6/f4vv/K8neXPPIVq6B0jO
      kGR51Q2aW0yqG/QcFTz4D9/g5P59NBx5l9N7ZLSeUpYsv4Glc4sxTuPKfIIg4HQ6p7obKhOE
      3W6fmsJYGoOLstoK8nVJmpua6esPsL/+ZXaf9CFNxAdcQyRpuvdQ5UqZ1Jzgc/Tzp+//kC2t
      Ess3foQ//9bnKcnXcfKtN+ns7Ce1sGDaukMVRSEej091N1QmiGQyORUGkMZSeQ/f+Zs1FOtE
      kKL09SRZsOleFqNhOmu1iaKI1zsTopZUrgS32z0VbtAs/UfbienONiV38NovtzOgN2DQa8ef
      HDMJqG7Q3KK/v3/MbtCrGAHS9J4+yJ49O9l28BTtv5GG0yCjTewMLuDO8Tc8aYiiSGnpTIha
      UrkSCgsLJ9cNqsgSmUwWNJDNZMhkMmSs1/FX37yfgqtpeJIYEchQyQ36+vom0w2qp3jeWj4+
      by6VrjOUP3DjOBPhpw5BENRkmBxiPPoAV2EAGfxt7YRFI0WL8xg4enS0vo/O4KZ8ThGmS54/
      PZDlmbFpp3J5xpPdexUGkGWgrYVurYa++np2+YIIgoCiKDgLb+XR//YxpnuQwUipDZXcIB6P
      Y7PZxpQHfRUGYGL+LXcwnyTtZic3z11KmVWDFO/iyEmZmRBjKYoihYUzbeKmcjE8Hs+YiwBM
      gBu0l/onXqNbGJ57aYQeXn+inpngXJRlmZ6emZC8qXIl+Hy+qYgGNWKyDNDTN5xYkuzpxGcx
      ceFCJNMLURQpKZnq4i0qE0VhYeGYR4AJ2Aku5PbP3MB3/+Xv2OM2EwukuP2vv3sFHqEL6wMo
      cpZEJEQolkJrsuNyWNGKEL8G+gAjI8CcOXPGftkq0w6fz0dhYeHklEU5h4B7yUP8v/+yjp7e
      OObiYooc5svvAF9QH0AmHmhn77t76YxkEfVOlqzfyKIS6zXTB8hFjeDZisVimUw36DmiXQ28
      9Moehs4WZrbmLeMjn153mYXwBfQBpDQ9nR0IJav5+PIKBk7u5sSpJqqKll0TfQAVlQkwAD9b
      //1JjhmrcGVcLC7vpclZwGVLlF5AH0CRMsiyhLO4DKNWg6eoGl+kjWiaa6IPIMsykUiEgoKZ
      sG89PmaTPkAsFsNms01OdehzBOltL+P6L1YSOmrh+ntree97jcTunjP2MGhFAUVBp9chICCK
      ClkpyfDu9sTrAyiKgsvlykmhvNmoD2Cz2chms2Pa3JwAA3BTWh0hnHEQG9jB88/q6I+WM56a
      y4IgIiOQjMVRMJNJSyAbMRohysTrA0iSRHd3N/n5M6GS6djIteK4V6IP4PP5LlkM+UJMgAG4
      WPv5h4kaCwjrEzS0xvj4n68fX21QrR6zwUB722nCxQvpaz5EgHks1TE8TZpgfQBRFCkuLr6q
      NlSmDwUFBVPhBgWTzU5Tw256IxLeqjrmVuRfWhsALqwPcN9XuX3OfAZ63uTf//+3cNTdxN23
      1WIQQH8N9AFGqkPX1taO63yV6YXf76egoGBMnqBx6wOcI8T2//kdno/NYe0cG32Nexha+GW+
      +fB1Ux4Mdzl9AFmWR4fNXCPXpkBXog/g9/txOp2TFQs0QoAzJ1188gdfYY1NRL69hG//wwH6
      Hr7uMkLZ0wNRVJ2ouYIwjpnABNz9AhYtV+hoDeD3+wlEkggWLSl/gGgizXQONlYUhXA4PNXd
      UJkgIpHImKt8TMgI0N4Vof7Hf0/9+1794d+fYsNnP8dHb6qb8qnQxVBjgXKL8aREToABlPPx
      736Pj199Q5OOLMt0dXUxd+7cqe6KygTQ19c3FW5QCLft5KlntxM4u+diz1/Fg1+5bdqnSIqi
      mJML4NmK1+udinyAPt54/A90G1yYdbWsn2+BskpmQsFBWZbp7++//BtVZgSBQOC8SIArYQIM
      IMJgfzlLVxRhtzuYt/F6wtsPEbr6hq85giDkpEr8bMVoNI7ZEzQBUyAP5XMiDGVcxHxv8ptf
      CvSkFkxr78/7GWv4rMr0RaPRTJ4ByMkwxxsb0ZYsZu0X/x+S+jyylR5O7noD19I1MyInWM0H
      yC3Gkw8w7inQUF8j+3c0o3fasXnK8TisFFUuYMNtC2l6de9oiPN0RtUHyC3Gow8wbgOQpSSp
      JAjC+ZEUslaHLp4cVzToZKPqA+QWk6oPYHNVYNOe4KU/7WEglgVZItrbyDNPPI9y44oZURoR
      VH2AXGJS9QEMzko2f+wenn7yaf7zH3+KpIAgmqla/1G+el8dY8/QnXxUfYDcYjz6ABMQDSqT
      isdJZUFnNGKcRiXRLxcNqigK0Wg0JxfCszEaNBaLYTQaxzQNmoB9ABGD2YrdbsU0jR7+K0HV
      B8gtxqMPMKtjgVV9gNxiUoPhYkOn2fn6QQYvcMxsr2PdXcvIG2/jk8SIPoBaGCs3mNRgOFlK
      ER0aYugCxzIkZsROsKoPkFtMqj6ALX8xDzy6eLynTxtUfYDcYZL1AUaQ6T/8R37y67cIpEW0
      Gglr4e088l/uY7qnmqj6ALnFJOsDjNDNa794C9OKlSwMe1i/tJ/t4QXMhEo7qj5AbjFF+gAp
      Uskyamud6PTgWVxHqH7/jIkFUvUBcofx6ANMwAhQRO2iMD2pfKKdT/Ev30kR0m2a1gLZI6g5
      wbnFFOkDmLnp0X9EFjTE5xdxui9FzdwaXONsLd5znFdeeZkzARAFM3NW3codGxfS9PT32ctq
      PvbAerw6ASUb4eg7W3j+uJOvfX4TbtvYTU7VB8gtJlkfQCIyECAhaNFm0ySyEmCg2GsgHU2Q
      sejHMQooJOIKpcs2cefyZdjfdx06TRllJTF6fUk8pSYy0QixZAab24nI+KI51HyA3GKS9QHS
      dB09RJdWT2jfbg70n0uCdBas53N/czdjr7opkZIk9For+g9ch6jTY3fkk+jvI11SRSw2QFJ2
      47FPSF6/yizlKp4eA1UrbqBEUEiWVbESzsYBySDYcI+rTZlMspvdLx/gzdcN5FUs4pZbNzLX
      YwRBiyfPyWDHEJFkBYneFjRlc7H0nDO8TCZzXnizJEkkEomLhjzLskwoFMrJUWDEJz7WBJHp
      SjKZJJvNXtJtHQqF0Ol0k+UGFTHa7Bjp5J0n3mPh39xPJUD6FM883sD6r25i7AVH9FQs2czX
      lmxGUbL0ndhPw4E9ODbeAoDR7UbXPEgk5KO3y0DNRjP+9xnABy9eo9FgMpkuGQ1aWlqKxXJZ
      OY8ZR65Fg8JwtOel7lVJSQl6vX6y1gBZgr1tNDUfYOe7DQSvz6cbIH6cfScM3DieJqU0gb4u
      4qZCil1GDEYjem0KeWSKr7NTbs5wqnUPAccqVmuuTvxhJBZILYyVG4zEAk2aAQz1NrFv+wHa
      w12ktm+n/WyTqz71yfFlhAkCciLA/m1b6R2Ko7eXsvSGteQbORtzpMVT4WTbk6eo/HQBGrrG
      331UfYBcYzz6AFeREKMgZTNkMu288qMDzPv6PcNTIAR0BiN6nWbsuQGKgqJIpFNpspKMoNFh
      MOjRiALZdBpBr0ejSKSSGTRGA1pk0hkZrU57QY2AyyXESJJEa2trTuoD5NoU6EoSYtrb2yko
      KJis0ogCGq0ejbaKNfd2sfOVVzh69ojZUcf6zcvGvhcgCAiCFoNJ+6GUSu1InLegwWAaGeI0
      6D/oLhrTxwk5Of+flSgKJp2AmI2DYoArrA80AaEQPrb+4o+0SRo0mrN/ojhjMsNUfYDcQJEz
      mCLNyB07UbLJKz5vApzoWoymIm766IOsmq510C/CiD5ALsukzgYURUGJ9iM3vU423ofOVYlY
      uOiKqsRNSChEcVkfr/zhTeJVw/NNg7mUxavnMN296xeLBfL7/ZhMJqxWKzCcayqKIhqNhnQ6
      TX5+PqIoMjQ0RCaTwel0cvz4ccLhMFqtlurqagoKChBFEZ/Px8mTJxEEAZPJxMKFCzGbzSiK
      QiAQoKmpCVmWKSsro7S0VB2RxoOURuo9jKb/MErMT7b9XfSucjDa4TJzkQkwgCRZ20I8Qydp
      bBx+xZanZc4MMICL6QNs27aN2tpali1bBkB9fT1ms5mKigp2797NQw89hM1mo76+HqvVyooV
      K/jJT36C1WpFq9ViNpv52Mc+xuLFi9mxYwdbtmyhpKSEZDLJ8uXLefjhhwkGgzzxxBMEAoHR
      h/7RRx+lpqbmsv2WJIldu3bR0NCAwWBg8+bNVFRU0NHRQX19PaFQiPnz57N27drRRXA6nebV
      V1+ltLSUFStWADA0NERXVxeLF8/sxCYlMYjUuZ+MLKB1lJFt2YrGMw9N1U0I4qXXiBNSHHf9
      Z7/I+qtvaNIZiz6AIAjU1tayc+dOTpw4QUlJCT6fjxtvvBGdTseKFSv49Kc/jV6v57XXXmPb
      tm1UVlZiMpl49NFHWbNmDYFAgB/96Ef09/ezZ88e3G43X//619Fqtbz22mu88sorfPWrX72s
      H7uhoYFnn32W1atXoygK7e3t6PV6nnzySSwWC4WFhWzbtg1Jkti0aRNarZbu7m727dvHsWPH
      WLRoEQaDgYGBAQ4cODDDDUBB6mtEDjShK1+FzllCetePybbtQFOyAow2LjUKTMB4KxNo3MLf
      fekv+MGTu+g//iz/9OuGGVEa8WL6ACPqkW1tbbS1teH3+1EUBYvFwoYNG3jzzTd56623KC8v
      /5ABGQwGbrzxRoxGI319fecds1qtmEwm4vE4Pp+PDRs2YLVaMRqNbNiwgf7+/stmqCWTSV59
      9VX+8i//kocffpiHH36YVatWcezYMUpKSvjSl77EJz7xCR566CEaGxuJx+MoikJjYyM33HAD
      BoOB9vb2q//ypgUKSnyI7JmtyMkwg9pi5OLVoMjI/lNI/cfItu0mc+IVFOncpum2bdvYu3cv
      sixPxAjgp/632yncuA53LIW2thrb/z5E1+dXUH31jV9TLqYPkEgkePrpp0dLbLS3t/O3f/u3
      CIJAXV0d+fn5NDQ08M///M8X/LXWaDQoikImkyGdTlNfX09nZyc+nw+Xy4XX6yWZTJ6naq/V
      aslms5fNUR4aGkJRFGpra0enTqIoEgqFqKiowGq1IggCFRUVpNNpYrEYgiDg8/lYs2YNiqJw
      /PjxnNj7UGQJqfcwUucelFQYU/NLYB2+H/JgC6l3vo8c7EJbfQuakhUI9uEfq1QqNXrfJmQN
      kEi4KSwwkW1RSPn6GDAaZkRCDFxYH8BisfCP//iPo2uAp556CoPBMPr+devWYbfbcbkuvNMR
      iURIpVI4HA4URcHv99PU1ITNZuOxxx7DarVisVjw+/2jc/7BwUH0ev1lN3EURblg8vel9jP7
      +vqQJAmPx0M2m+Xdd9/NgVxoBSXqJ9u+G+QsYn4dhkg/mT0/QQCUVAQlkEA77270yz6DYLlw
      ku6EZIStucPMd598CRIyO95JU/PJx2ZEcVxFUQgGg3i93jGdp9FoLqpGEolEePzxx6mtrcXr
      9WIwGPjkJz9JbW0tW7ZsYdeuXWzevJklS5bwm9/8hpKSEiwWCz/96U9ZuXLlqKFdDKfTiSRJ
      +P3+0XxmrVaL1WodTQnU6/UMDAyM9vPgwYM88cQT/OIXvyCbzVJRUcGdd945pmuebiiyjDzY
      jNR9YPhhD7ZDNg1S6v1vQrR6Ed21CJpzO+KxWIzHHnuMdDo9MSJ53tV/xo9uGKK7NYihqBiP
      cWbIDkmyQgwLvYEIBXnW0XAKt9t93g6x2+3GZDq3yWGxWHC7zwV8C4JAQ0MDv/rVr7BYLHzt
      a1/j7rvvRqfT4XQ6sdlsFBQU8OUvf5nf//73vPPOO6xbt450Os0jjzxCMpnks5/9LPfee+9l
      fddms5lNmzbx3e9+l/vuuw9JkrBYLCxatIjHH3+cRCJBeXk59fX1rFy5Eo1GQ09PD9/73vfY
      uHEjyWSSp556ijNnzlBeXk5HRwd79uwBYN68eTOqXLxgL0a/8otkew6SbXoTGRGddwFy/3EE
      WzGIGtKHnkJRQL/yC4hGBzB8/x577DHWrl07EcVx23n+f+xhyX/9BLUAmRM8+cPT3PKt+5jq
      ooOXigVSgJbuQX79H/u5fmElG5dXYTbqZ8QOdjab5Y033mD79u2YzWYefvhh5syZw5kzZ3jx
      xRcJBAKsWLGCTZs2odfrOXDgAPPnzyc/Px9FUTh58iTJZJL8/Hx+9rOfjU6HHnnkEebNmzfF
      V3dhLhULlDn9OpljWwhYF+BZspnM7+5Hf8OjaCrWkDn6AoLOjH71VxDNwz9ar7/+OmazmbVr
      117NCJChv/UY7723m3f2H6XnBd1wHaDYKXb3lrNx/A1PCulMliMtPk52hRA0PSys9FJVpLvi
      GJKpRKvVctddd3HXXXed9/qcOXP4xje+AZwfDLd+/TkntSAIzJ8/f/T/xx57bHI6fQ3RVt2M
      pnARLsGKVsySARA1aIuXocmrQcnEEU0XLtR5FQYgk4wO0tPRRzgTxdfRgQSg9fDJr941rdcA
      iqLQ7Y9wpNmHVhTwDcVobOmn1GtHr1VF82Yags6IoCthqLMTj9OMpmw1on14/iEY7QjG88tf
      3nTTTQiCgCAIV5cSWb54I3+2eAHVrmNUfnI1tmgavdWOZRqXSVcUiCUzHGnx4Q/GWbOohIFw
      msPNfSyozCeZlijOt+G2T31gU1aSGYokSGUurmJjNuhw2owXDAefbej1ekSDDeODv7jk+96/
      npuARXAhKze289S//it98TRacyEbP/5pVpVOz4Wwoij0BqI0NvsoyrNy/RwPvohMfUMrOxs7
      2fZeG5+7cwkbl1dNdVcJRZNs2XGKlt4LlSAeZmltIR9dPw+9Th25dDrdmGVSJ2AnOMTuZ58h
      VLGB++6/jw3lIZ5+dve0FcpOZSSOt/UzGEkO/+LHIygKOK0Gjrb2MxRNksoMa0219QU51TEw
      rqKrE0E6K9HuCxEIxfE4zRTmWSjMs1CQZ8FuNtAbiNA9EJ6y/k0rFIXQ0CBS5gIxCIqMImdR
      lA9vMk7ITnDrCQ/rH13JYpOIXJNg618dYYBbcVx94xOKokCXP0TDqV6sJh2VRS52N7az7XAz
      douBaHz4y+sbjPKLP73HWw0trJpfgsdpIW8Kp0Rzy9w8cu9KDGd/5ZWzffzplgOMsyRSbqEo
      yIlBihONiF3NKJXrEHRmEIThB3+ojWzXATT5c9AULz/P0TEBBuBl3tIwrz35J8I1JuLNOwkv
      u3VaCmXLssyRZh9tfUE0osgL208wGIwgigL+4DmxvFd2ncZm1nPz0kpuWVqB3TK1kn+CIKDR
      CGg0wwO2oihoRGEmOKwmj1SUROsetLFeUBS0lWsQ9BaUoTbSR55F8h1DWPQAmuJlvD84bgIM
      wM7KBz/D0PYGOpr96BzL+OzNK5mOshOSrKDTaFhQ6UFRlOGUSJObgoxEpz9M/9CwPzwryXic
      Zu5ZM5dSz3S8EpUPIlg9GOvuQGp8mkzjM4CMmFdL5tgLSD0NaMpuQFOynA9Gho7bABQpRdfh
      t3l6Sz1dUR3zb7qfex5ahNtqRK+ZnkkdOq3I7ddXs2F5JQCSJPPGzkPsbY4RiadwO0wEQgns
      Zj19gzF+9PRu7lk7lzWLyjDopr4CnTrXPx853IPUthMlHUGJDZDynUJrMCP7W0nv+lcw2CAd
      QVt7G7qFDyA4Sj+0zzPuuxr1neSl5+txrr6HmwsldvzxWV635POZ22umrQtUEARMhnMxIdms
      RCI77A9+8JYFLKkp4O9+8iYf37gIt93EK7tPc6ojwLI5RVNqAIlUhu6ByHl7FP5g/JLu0dmA
      HOwgtf/nkEkAICYGUWxFKNkUSrQfFAlN8VJ08+9BdJaB8OEf5nHf1XisD615NXduvplSbQZr
      3MfOlm5i1DBToklEUeCm68rZuMpCsdtG32AUAK1G5MaFpcwtc5PJSjimeA1wumuQx19uOM/F
      l8lK9ASiFLmtU9iz6YG2bjMIApn3nkS36AGkrgakgdOQCqEkQkgDTQjWAgS9dZBFA3sAABLv
      SURBVOJGAEXJEA30cbLxIP1IdHX48HXGOXzQSp7RS82CUsazE6CkQxzfs5UdhztxzFnLnbcu
      x6WDk2/9miPZZdy56TrsAiAnaHnvHd5uNvLQR9bgMI+9/o2iKGSSUarKh4tjaTUiJfk2LMZh
      f3K+Y2r3MkwGHcvmFOJxXrgfZV4HdWVuRHG6jrmTg+gqZ8SjLweaURIBNN55yP0nUKQ0mcbn
      QBDRVt2EoDvfmzduA9CbbQiZM7zy25bh+GtZRlZgy2+P4iy8hS+NxwCUDN1Nx2hPFfLRz2+k
      r+ENdu93ctuN1aSHtOgLOuj0z2eBV4cUCzPg7yKQrEWWxid0J4oiZWVlo/97XBb+51c3oZ0m
      axiHxcB96+ouOfcXBWFWGoA00ERq549Rwj2k3vkBI4vbbNMbw/7uQAsoMtrK9SiJQTKHnkIQ
      tWhrNpw3FRq3AeSV3sx/+vHNV30h55FNEY7H8dSsxmu3Ypm/gtjJHoLZajR6A448N9FeH1lP
      KbHIIImMHY9r/Kk3sizT2dk5mhQvCgIG/dQvdkcQBAGtZvY93FeCYLCh8dQhB5oQ84cFTuTe
      w2hKVyLaS5BjfqSe99C4axDdd5Bt2Y4ifXiTbPrcbYZHEQ0KRosFAQG9QY9WlyaZAAQdboeL
      aO8A0XQJiUAriqcW+9CVF0H6IIIgqDWBZiiirRDt3DvItu9EV3cXCAKp3sMY1nwVTeESsp37
      SA61gdaApmwVYl4NgmEC1wDXBmG4QK4soyCgKAIajQ6NdviYNd9JpLODWCTKQEeS0tVOBvef
      Szy/0FRBlmUURUGWZURRRJbl0cWkJEkMDg5itVo/dExRlNHXptMxQRBG9zAud+z91/7BGJkP
      njfy2kgbYz02Gd/HSDro6PsUBVDIdu4bPS/Tsp1sbyPKUDtKKjq8SywahkcFRUGQh88ZaV/z
      7W9/+9tjeUSvJQIyAV83A1EdxV4bg12n6AjoqJpTTPj0KfSLrsPZ20l3spnOyAJW14qcao9S
      VV6EyaBFkqRRkQxJkgiFQoRCIYxGI+3t7ZhMJjo6OkaFFkZyZQcHBzGZTHR2dpLJZIjH4/T1
      9WEymWhra8NoNNLd3U06nSaZTNLb24vFYqG1tRWDwUB3dzepVIpkMklPT8/oMb1eT29vL4lE
      gnQ6TXd393nH+vr6SCQSZDKZ847pdDp8Ph+xWIxsNktXV9d5x/r7+4lGo0iS9KFjfr+faDQ6
      qn9mtVppbW1Fq9UyMDBAODwcO9TZ2Tl6nkajGT0GnHdMFEUGBwcJhUIIgvChY0NDQwSDQURR
      pKOjY/SYIAgEg0EGBwc/dAyGxSwCgQBarfZDx8LhMIFAAJ1OR3t7OxaLhY6ODuLxOGazefQ7
      FVNDyP0nEMJdKOGe4dCHYCdy/3HkUBeC1ohUtJL2iB6dXn/B73QCMsImEplwz2n27jtKTGNA
      yshULruZZVVOTrz8MuZ776Wk7z1eeukA+Xd/gQ2ubl54p5cN65bjsn3YVXm56tCyLDM0NHRe
      emOuMBuqQyvJEPJgG4qUglSEwZ5m7CV1aPXnPD2isxzRdnEt6Gk2BRKxFVSzcrWR3kAUg6uY
      siInIlC+ejUaQO+Zy5rb8rEXaUHxsmaFA6tpfDd5pDxhLhrAbEAwOtAULxn9P6apxl5UhHZy
      yqNfGwSNHldRJa4PFGyzjSxWNRZKakYS1s0Uesfvq/+gG1RlZlNUVDRay+lKmR4O7ylixA2q
      khv09vaOWRRwmq0BJpbW1tbh0OGL1NpUFIVQKDSjSoFcKSMV5nKl2nQmkyGVSo1W7L4Q4XB4
      zFrB024KNNG4XK5LDosOh2PMw+ZMQJIkBEHIGQNIJpOEQiHy8y9c4Q2G76VWqx1TWmTOG8Dl
      ZFJHqqflGplMZngnWZs7t/hyMqmpVAqdTjcmo8+NnwcVlXGiGoDKrCZ3xsdxcrlitDOVXJr6
      XCnjWcvNvm/pfYy1hsxMIpev7WKM55rVKZDKrEY1AJVZzayYAilyllgwQCAUR2Ny4vW60IsQ
      D3QxlLHhLXCgG05rIxEJ4I8IFHjzMOhmwO9DMkh73xCSrAAa7AVFuHQSAX8AndOD02wYDoFX
      UgR6+kma8ylxTX3d06tBSkXw9Q2QwkCe14PdqCObDOMPRLF5C7Dpz26EyQn6ugbQOL147Bde
      682AO3y1KCSGOjmwYyu79u7jna1vc7g9hAy0bH2JP27bQVd8eDNcycZpafgTv3z+XQbCqUs3
      O01Itb7LC2/t5cCBAxw4cJjOoQSJQR87X3qKrae6SZ/d6JeDTdS/8gzPvzvTQz9StB3Yxtad
      e9mz421e39tERlEItZ2kfsvT7O0Oj75TGjjEM8++yNYjvou2lvsjgJylv7uNjHcF919fTaTt
      IAdPnSRcvhqNtoiqKi2+rjCVdQ4yiQTRqER+qZuZUmp2aDDNktvvZWPFuaDAaF+CsqoCTobC
      pNMyBqPAQKsf+9wyotEp7OxEEGrhQK+dOz66Gafs4+0X99OVrsOOjbrFHk61BZCrXIhI9Bzt
      oWBZDZca73J/BJBllEwSR0kFRq0Gp7eKAmuccBIEUYPTXYo80EFUVohH2whRQZF1pnwtWYJD
      Oiz6CKFQmGg8dXYqBNq8EkrifrqTaZTsEM0hHdU5UOVOCfoQyueTb9KisxSxpEKh+2wlZn3h
      XIr9TXRlFJR0L40hD4sLLu0azfkRQEEBWUarG9YsEAQFWU6SzgAIOPNcBH0dBEMZlOZ2bAuu
      J9PSNcW9vlIk9C6FIy+/wHuKBoOrhNU33Uy5AAg25tdF2dccobIkhGQx43LMfNeolM2iM4xI
      WYnodAmi0bPxnKKLhfP7OXImRp6uG7GyDIeu9ZLt5bwBCIKALGpIRGIoRTay2QzZjBGzCcKA
      1uLAKohEQi30DeRz3TINe1umutdXioHqtfdSvVZBzqbwH3mb+pYBymuGY5uM5XMx/OkULXYH
      Jr0Dm2n8BQSmC1qjiVhHEBknImkGAwby5wnQO3zcXFGHsLORU3kiZYUWNJeJjp4pY/34EbWY
      LQ6CrccYTKbpPX2AHqWAvJGRUWOm1CHQc2If/d4F5M2UyT9Aopf9e4/ii6RByRIKxjEY3ncB
      +iLmWFs51DKA1lWMYeYPAOCpxt25j+MDCeK9J9gVMFNteV+1Z2MRBdJRjoUEbFbnZSto5/wI
      gKChoHoBlb56fv9/dmCqXcf9m+djEMDgcKBFxF5RDA0+rlvjRBSC2G1WdNoZ8LQYvdQVdvLS
      b39CT1SgePE67lpQhBgPYrJY0KDBu2Aelr0SJSVGiFpxO2Z46Ie+kJtun8uLv/9XXtMVc8vm
      zbi0AmGjEZNGg1ZrwFU2h8KQFZdTRyZuw2G5+Dog5xNiLpUUrzJzuJRM6tWQ+1MgFZVLoBqA
      yqxGNQCVWY1qACqzGtUAVGY1qgGozGpUA1CZ1agGoDKrUQ1AZVajGoDKrGZ2G4Ai0X9qD9t2
      nSCcmeC2U372v76LlkiS+EAbu/buZSCavexpkZ6TvLP/EJHk+RrAQ+0H2PL7X/HLX/2O1w93
      T3Bnr45w537+8PM/8M6xLlIKgMxgywFe/N3PeeNoP4Mdh3l3byPhlIySGOLQti282tBOWoL0
      UCfbd++nfwIy8AZObuf5nafGdM4sNwAZ38md1O84Rvjyz+YosnSGZ37we5oulV2V8rPnP96l
      OZIk7m/l3T278V+BAUR7jrNt73uEk+eUL6XB9/jl/3mKDrGI2movof6BK+/sGAh0bOPJx5+j
      NQgdO37NE9var+i8cMdhXnvuFd5ubCSSVECJcfrQKQ5te443TwRIB9p5Y8dOBiJpUqE+ju14
      ked2NZPIZAl2HWXXvveYiAzUgeP1PLPj5JjOyf1o0DGQCPUTSosImSQpWUOetwCLJkt4aJBQ
      PI2oN5PnMBELtHBo3yEsm9ZhL8vHbdURHewf/tUW9bgKvFyshrEiZYgEBwjFMoh6Kx5vHnqy
      xMJDDIaT+AdCpM6zkyh7/vBr/Nd9gX968DqMGshmZeRsivDQAJGEhKA14HDnYzNIBPuGSGsg
      nUyjMTnw5NkQpRTBoQDRpIRGZ8LpdmPRi2STYQYGQqQVEWueB2v+YjbcmcXKAIdOHuRgupSO
      OSbcbjOJoRim/AIsOkiGfMQ0eeRZdWcTU7RU1NSSjscIRRLkpQfoknVUlxdxShBxe0swxpvp
      isawpiMY8ufijgeJpuME+3yYjcXYrRNZoFgiHgyRkGTSiQRZQY8zLw+LUSQa8BGKZ0FjJC/f
      qRrA+zn8wv/gidZarneEOXXiDDVf+Bc+V3SK3z7zFn1x0Hlq+MiGxbRs38bJgdOEfvdzfLd+
      ggeut7P1md9wZCBJNhjB85Gv88iqC3/GYOtent+yld5Iloyk54ZP/TnrLM088+yrdIRAifno
      d7/vZNlP0/EMC788B5N2eMDW6QTi/k62b3mK97pTZJNJytZ9kc99ROQP3/g+PauWYehvZiBd
      zMNfe4T5tPHWyy9yrC9FNq0w//Y/48F1NnY//SveOBlGZzCyaPPnWWPdy9N/iLL6Vgtv7Guh
      PfkSP49388DHFrD1R49T8pUf8dB1sOPfHuPM+v/Gn9+Yz0jQuMZTSkUySEswQp42gCKJuD22
      4f66PdSQpMMfpVjbRyb/eq7v6KQrGiM1EMdcWIrVNJHh50F2P/VzdoQMuOQgzT1xlt7zeT62
      XObXP/oVvXorBq2X2x6+XzWA8xB0eOeu5fOfWELnlv/KD5t6iWk7aQ8KrLztTpbUVVGan8ey
      BQpNewzc8c1/YqUL0ok+HG43tniQ6OAZ9uw4wWdXVV7wI06+/TvePmFmUa2bWOshXqs/gNl1
      gj7nWr75V7cSPvQCT+yJfLBj8IHnQ9TpcDjzsQ0NMRTo5Ni+Ywx9ZDGCYGTpXV/kvtIE23/2
      T7x1uJdFqww4nXnYwmH6e09x7HATt5aneO6Ykb/8xl9R55RJZXQMnc0eLF75IJ/uP0gi+ym+
      86lFgIx8Sxmv7TlIsFDHu/46Pr0k//z5s+hifrWfA+2DVOcPIBor8Vh2DB8zuqmsyFDfHuA6
      Ww+U3MNC+QgHO+PYkhEcNV4mPmBdwFq+mi8/uIjGl37Nnm4/8bkxmjtFVn52E9fXllNYUjTL
      1wAfRBQxWKyYdFoMeh0gkL94E1+4/ybip+t5/Mc/o/54PyMzlBHZzsixt3j1KKzYdC8PbVwM
      isLFkiyiyQy1a+/igfsf4It/+13+80PzyIYlPN5CjFoBQRTPz2IS3VRUSZw40UFWPisTKkn0
      Ht/OnhMyK27/CHfevBjrSFqHoMVk1iPqbLjztMSjIVoatvNel5kb77yHW2+ci0VRkCIhonmV
      VObpETVGTMYPpMKdVSEdvkaBqhV3kBfbz84392JYvY7qDylTaSidV0lX4xkG+trQVczBPHod
      ZiqrC+ns6SPQ04e3pJDySgdHTzQTCkYo8nquwYOowWK1odOKaLU6RMDgXcuXH7kFoekdfvKD
      71N/JqYawKXJMtDViT+pZfHKm1lSaCTgD5IhD7ujj4Pv7uZUd5BMJksGBSkbxdcfuujDDzB3
      4Qripw7S1B8iHArQ15ehZJ6LjqM72bOvgSMnWggn3n+GnZs+8xmMu3/Dr17ZwYED77JlayNS
      RiKLgpyNMTgQZGQNqSgJWhsPsm/rC/zpsJ11y0qR0jISMnImyuBAiBRgmLOC1YNb+feXdrJ/
      /04Ot4Z4f2qUI7+Q1MldvHP4DIF4GmdRLVUFCZ57PcKGGyouOHXQVi5lRe8B/nQqQ02N432D
      lkBBbR3Gph3s6iqjsliDdc48Ugdeoys8j7KiyVGylLpP05SyU7f6FlaXS3T0h6aXTvBEEwwG
      sdlsl6yULMsSBlcpNZUF6JUMZm8tNV4LipRBk1fN/PwsLceP0HimG335Em5euxSv2U1+XorW
      U00krKXULajDPHSapu4kRdW1FJbWsKjajaAYKZlbQZ5eRDTYKS8ro6CsGo8wwOlTTXQH0nhr
      FrFkYS22RC+HTnWCrYjquXOYV1GM8WxlOtFazuK5FjqPHeFMRxBXzWKWzq9ACbVwujNKwdwF
      1JRWUF2jpfHFbbSJEBvKUHf7fWxcUIIzz0ZqoJmm7iRlCxZRXVZB5Zz5LK7Lp+doA02dYWxl
      tVS6DWj0bspqi8krKETrO83p3jTFleW4bXqibSdoFUq4c/1SbO/LPVbkLBpLAVXV1RQ4B0la
      r+f6BV60UgaDdy61BRYwGTGFQ+jrbmTFnHx0JhO6/jCOZTdwXY2by5lAJpMhkUjgcDgufi+l
      DDpXJddVeZCzAo7iMko9VhRJwZxXREmRidZD+zjR1IVUuIp7b12ipkTmFk382xd+Rvn/90M2
      X1wad1y8++tv8eKZPDbe/0luX1aOfpLnDtcqJVI1gJwiSywYR2Oz88Ep/dWSCAdIKAasFjM6
      rfjBNfk151oZgOoFyim0WJzXpvqbye6+ZInBmYq6CFaZ1agGoDKr+b9EqFadSXjfDQAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Region_Sources_Of_Energy2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Region_Sources_Of_Energy3' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Region_Sources_Of_Energy4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29WYwsWXrf94s9MjNyX2qvu/c6vXKGpGialC2SImBbgBfZkgU/SSDsBxuw
      IBi2AMOEN0B8NmDAlmDJfrEFQZJFi1psyxIkykPSM8OevvtSdWvJWnLfM2P3Q1ZVRmRm3a7q
      udVVPRl/dOOiTv3r5C8jzxdnifOdFHzf94kUaUElXjdApEjXqSgAIi20ogCIdKbRcIBp2Rf/
      A9+nXq8DYJkj+oMhFx1P25aJadkX9I9fx3GcN7I4jhvy+L6P49g4rodljrAdd+bP5AvyRloA
      /fbf+ZsosTz/8r/4XbqWSFy06Vjgmn1ScR30NE6/jqckWS3l8H2bly93yOfz/MN/8He5/eBj
      lgsGfVMgGxfpuwox0cITVOqNGul0jlRCAyXOP/jtv82Dj3+OpbSKJxvEVAnwsQY9BFWn0eyQ
      TSg4coKMMuLFTpXG4R/w3c8/xBJ0ZKePJ3pUhgoF0cLIJPnRFzuIUp97G5tkl9c5fPWQ/fIO
      A3UFr9/h088+YdRrsby6xvHREUsrK1EARJrIGrQhtsz//ff+Ln56lbjkISCi62CZAq4o4roj
      JFln9Vf+GNVXjyne/wAAz3UYmDY/+NEXOL7AsF5Gzt3G61fZWMojSBIPn+0g+B6/9uu/yicf
      f8gXL16yLzt4nkgmk8FzLY4OqxRySe599F1+5//4X8nd+ojv3cmRzhVpHO7xgy++BElBGDQo
      3ruPUdjkD7//+4wEkXx6nWF9h995/pr1QorUyh1EVSfum+gb75BWbf7f3/+n+EqRtdsb/PgP
      f4QQrQJFOtX2zmus4QjRt+i6GpVnf0DZNPiVf+FT+q0qfrxIXBUAuHPrFt///vf5uZ//eQTg
      4Y9+n4EXo1BIIQBOv8WAOJmEjGJ3+Ot/5x/yS7/+r7C/1+BP/PFf5OEPfw83lkez29haFr9X
      g1iGdDxGJi7wrNwiIY4gXuDBcoIfvqhSSGpIqgx49OtVtPwavV4Pp9cikUkT11Pg9Tg6qLCy
      scH+7j4ra6sYqSwH289IpHPUa8eIts1O3eTzjx+83QDwfR/f9xHFmzG1uGk834Q8z3tL79fH
      Mk0QZVRl3kDBp95okM/lv5rJdTAtB0WREEQJ6dJ8Po16k1w+d8m/m6rlpKn7vgeIiKLwdgPA
      8zz6/T7JZPJtVfkT6abxfBNqt9uk0+nrxriRGo1GAOi6flZ2s+YAvs+r549RkkW8fgMxkWNz
      tXTdVBeS77kcHldJxGM4wy7HrSH5TJxmZ8T9+3eRReG6Eb85eQ4Hx3Uyhk5/OKDW6HH/wT0U
      6eb1xDeOqNlqAT6SnmLYbV43zoXlez77r1+xd1ih1WoBYFoe+aRMq2teM903LN+hvPOa8uEx
      jaHDSiZGvTu8bqq5unEBkDCSJBMxauUtehZ436I5+trGKuXyIbKikc1msAZtXrw+IhG7WR3t
      N6GVW7c53t3BHvZ4sr2PoavXjTRXN2sO4Pt02k0EWSemq/i+hyQriMLXGz58k3MA3/dxPQ/b
      shDx6A8tkqkkkijgeqDI0pUzwA2ZA/g+juvhOhairCCLAs43eA3O07w5wLX3AKYZGB4IAqlM
      jqQRR5ZlFEUNNX7Hcd78NPBt81zCLwgCsiQRi8XQYglyuSyKLCOK0tkH7/s+lmVdKc9l9XXf
      7xslCMiyhKbH8FwXIXANroXnDbr2ADiNyovIdd0rD4DL8FzW73nepT+wy/JcVlf5fm+if1pX
      Mjj1fY+XTx+jJvOY3TojV+KD9+/x8MsXfHS/SEsskY+Pvf1GBTmRpnG4jSDFwbfp1Ct4ikEq
      JtFqdbj93kek9ClUz+WLL36EZhQQ7Q5CLIvsdLHEBO/eu3U+T6fOyDvhefiC79wr0g7wDLsV
      Xrx8zfLaOqro0qweIiVy+MM2QiyDN2ggxLKkDY1ScbJC5Xsez588RErkuFVM8KzcZiUtc1Dr
      cu/BA+LqmL9RqaDrKof7eyiJLL7rUim/Qs+soPlD2j2btfUiB4cViiu3SKiTHvDZ4y+wPA0j
      LjK0RVK6QHPg8sG7D5CmVpl2t58z8jQ0waTZGfHOh+/z4tETPvrgHrWBTyljADBqN3j1eotC
      cQ1dFmhWy0hGEWHUxFPTCGYbT0mSTsZYKgVW5HyX50+fIGgp7qznePzikLV8jINam/vvvk9M
      Gd9b+5UKSjpNY+81iBr4Hr1WBVuIkU1q1Btd1taX2Ns/Jp0rkE8nePzjH7Gxvky155AtrGD3
      GvRaNdAzJHWZYmneyqDLlz/6AimRQWeELcZQfBNb0Hhw7w7By+N7Nk8ePyFdWL6aHsB3LNRk
      jo1SCjVVZKMQ4/WrHVwRuoMhljfx2qMejx89pNYeYbUPkWJZUrkShZRGpzvEdWxcb940xcc0
      R9iOczasUFUVz/VmNlj5doAnXWQ9H2Pn1Q6uAL0pHt/3ufvgA6x+G8uysEwLEFBVBc+bDGGm
      hzKuO0CL5TBHAw6Pa7ijHpKq4bkuQaB+p86jx4/o+xqVvZckszmKyxsoootpmTi2TbMz4jsf
      fYdRpxV6Dcs0sW0L0zx5v9q4/nlXx0XmnXu38ASZj+4W2SsfgzPioNHHsiebwjzb4/Y772GP
      euP3G7iWruudvdb0+/XMHkq6gD0YcLR/gOtZCLI65glMKx2zz6OHD6k0+1idClI8TTJTZCOv
      U2kPcRybymGd9z7+GOzx3TyRTFLe2WY4HGG7Puaog6Bmubu5+oYhpI9ljrBs5+QzA00bv4dp
      Ob02qeXbLBv+1fQAgqxi9RrsIWB36+y7MsmEQk6U6Q1syuUnZD96B12WUPQkHzy4T7NSxpBV
      4rkEr8rP8GSDwtISCja+OaDngCtqaGfEApu372E5PiMGAHiej+M6+EDwfigoEx6rW6fsyRjx
      +TyiILL94jFLa+tokouqqYCP74Pj2mjaeDVj2G2ye6CSTmgASFKc0eAVrhjD9TwSukSrM0Tw
      fRzX5bSzTaQLPNhco9roICfvktRlto720bMr5EqrZKwRgijx6MuHFFbCPdnS+i2skYllDhm5
      4/fru+7JSlm4B5Bxef5qB01w+HKrSiGXQiosYffbNDp9jNh7ZAwdSRF5/fwZheIaqgyqOn4/
      vg+uY6NqGj5gD7ts7R2ST427SlEzsFp7OChYPqRUgWZ/hIiHHbhhybrBh/fv0zzYJxHTiRlx
      Xh+8pCnGWFsuoODhAc++/DGpbBGAWCKNaHXx0lkOXj4iW1rBH9XZ2vUZNI4QZYVkKokoBJuv
      wMbtu4wsF3vo4Jy0B9edHTLLRprO46cIhaXrXwW6zKqFaZr4vh+axV8nz2X9rusyGAxuDM+i
      +b+RJ8H9fh/Pm+123uS/qGzbxvf9C08kTyedV8VzWf9N41k0v22Pcx2C7ecSAeBjDkdImoZr
      DrE8EUnwicViDIcj4vEYAIlE4tLr7jepB7gMz2X9X6cHuEqeRfP/ZD2AD9W9PfS1VSqvX7Oy
      fovHX/4hH3z8IT/48hW//AvfnVgvOaq6jP90h+dV1R/5F8t/8QAQBHL5PCPfo9ft8nLrNaur
      eZ4826VYzI2fhLru2f8X1WX87skKw0X9nuddKc9l/TeNZ9H8p76g/xI9gM9R/RhbNrh7a4Mh
      GrlkDM0YoOn62R50SZKQ5YtXexn/aQBc1O953pXyXNbvuu6N4lk0/+lD1KD/Uj3A3Xc+mClO
      GMaFq4gU6aZp8bYpRloI+Z4Ldi9c6Ekghpt8FACRfirlV7/E/uu/HirzfvUvI97+lVDZtW+G
      ixTpOhUFQKSFVhQAkRZaUQBEWmhFARBpoRUFQKSFVhQAkRZaUQBEWmhFARBpoRUFQKSFVhQA
      kRZaFw8A32f70SNqgyGNoz1++Ogp3//nv8to0OGf/PM/uELESJGuTpfaDr20vMzAs3j68jWu
      pLGRS/Ds5T6ZbCaU7HGZw6su43ddF8/zLuw/Zboqnsv6bxrPT7Pfn5Mk43ku/pT/UgkxB8dl
      LDXF937256g1GuiahtdsYiST31hCjCiKUUJM5P9KvydJTB89IIoS4pT/Uj3A/Q8+PvtxZXkZ
      gGw2e+EqIkW6aYomwZEWWlEARFpoRQEQaaEVBUCkhVYUAJEWWlEARFpoRQEQaaEVBUCkhVYU
      AJEWWlEARFpoRQEQaaEVBUCkhVYUAJEWWpfaDr3z/BnpzVu0yruMfBV70Ob999/li8db/Myn
      H14hZqSfNvlWD/fhXwuViZv/Eihr3yjHpbZDFwtFRr5PPp+nY8JgWOPVzgG+JEUJMd9Cnuv0
      +4Mm3u/+V+EyJYm7tnxzE2L2y7uM9CROu066tE56aYOj4ypLuWyUEHMBRQkxE/myxPRXXoui
      dLMTYt75+LOTH+6fFZeWli9cRaRIN03RJDjSQisKgEgLrSgAIi20ogCItNCKAiDSQisKgEgL
      rSgAIi20ogCItNCKAiDSQisKgEgLrSgAIi20ogCItNCKAiDSQutS3xCzv/WKnmmxu/Wc3YMK
      W69e4rkWz15sXyFipEhXp4tvhwayqTQja4CrGGD2GLZq7B9oNHuDKCHmW8hznX7fmZ+wcnO/
      IQbY391mEE8jj3qgJcmVltnbPyRfKkQJMRdQlBAz0bcyIebdz783U7y2cfvCVUSKdNMUTYIj
      LbSiAIi00IoCINJCKwqASAutKAAiLbSiAIi00IoCINJCKwqASAutcwLA59kXX/D64HDmaVqk
      SD9NOudJsMf/94//Ce7qHf7Un/zXUL9ZpkhXIH9Qxf4bfyJUJv2R/xRKf/R6gG6IzgkAgY9/
      4bsc9UD6ZnkiXZU8B789tWvX7F4Pyw3SuXMAWdXoNhvRECjST7XmBsDuq+f0LI879+5Fs+RI
      P9Wa274Ly6uItkvMiCFM/9L32H75jJ3yMc+fPsUyhzx+9vLqSSNFugLNnQMoqobZrvLsqMm9
      e7dDUeL7Hv1eH88SSQojnr54jSfKUULMDeeZnyByjTw3OSFm7+VTTD3JUkyd7QEQ0HQNX9VI
      Z/K4jSbJVDJKiLmArjMhxpfmJaCIUULMvEo9z0cQBUrF0swYSRAlHrw3+UK8XC53YdhIkW6a
      5gbA3fc/5r4YTX8j/fRrbisXo8YfaUEUtfRIC61LnQoR6dsgn271H4VK1MQdVPRr4rnZigLg
      p0y+77P3xZ8LlRXv/scUSv/WNRHdbEVDoEgLragHiPRW5NsD/OarUJmQvnVNNBdXFACR3or8
      5gvs/+2Ph8rkf/V/htzPXRPRxRQNgSIttKIAiLTQigIg0kIrCoBIC60oACIttC4fAL7P9osn
      7B1Wefjlj3HsIT/68eMrQIsU6ep1+WVQz6ZSb5GVEqjeiO2dQ1zEKCHmhvB43vzEF+eKE2Lm
      JqC459d/oxNi3ihRppBNM7AsSksbHB1VKeWzUULMBfRNJMSI4uw5HqIoIl9xQszcBBTp/Ppv
      dELMGyWI3Hv3g7Mfl5ZXLl1FpEg3RdEkONJCKwqASAutKAAiLbSiAIi00IoCINJCKwqASAut
      KAAiLbSiAIi00IoCINJCKwqASAutKAAiLbSiAIi00IoCINJC62sdi2IPOpSbA3xrwK3NdV69
      PuTBvfEZMAPH5WmlE/LfT8fIaspPThsp0lvWpQPA933KxzUs18NqVSmrKvV2l3snyRUvWwP+
      nd/dCf3N//CL9/m19ezc+qKEmLfLEyXEvIHnbSTE+J5Nr9Oh1h3y4NYyuzsH5JfyZwkx845W
      f1OSQ5QQ83Z5ooSYN/C8jYQYUVL5zief4vs+ACtrtxCE2S9SihTp26CvfTTiaaOPGn+kb7Oi
      VaBIC63ocNxI3wr5vovzj/9iqEy882uQ/e5PVG8UAN9SHXZ2+R9/7y+Fyv7Up/8+JWX9mojm
      y/c9Xv/g3w2VZVb/JOnkJU+N9n28h38tVCQYy5cOAK+6g/n4/zr7OQqAb6mG9oDHxz8IlXXN
      1o0LAPAZNL8fKklkfwGS10PjHb3A/lv/zdnP0Rwg0kIrCoBIC61oCHRDdNDZ5Z9u/U6o7Ffe
      +TeQ0a6JaDEUBcAN0XF3j7/18K+Gyn5m/ZcoKmvXA7QgioZAkRZaUQBEWmhFARBpoRUFQKSF
      1tf6hpjq4R5HtRbVSgXfdzmuVK8ALVKkq9fXWAXy0RMpjip1erVDBNHnxetDSsUCnufh+9O7
      sCeJF/P0pt/N8/q+fyn/Zeq/LM9l/W/i8Tz/kv7519mfU+77/ny///auz9zXPZfHO5f/XJ65
      9fuX4/E9pi/z11oGrRwfsbx6i7bi8vLFHoXiONtLEAQEZrdHC4Jw7rbpN/1unjf4b1D/7Mtj
      /srfexYq+63f+B4x+eL1X5bnsv5T7zz/eWVfxz/7i8vXf57Of41zGM/xXppHPL+ei/Jw0jqD
      MfC1AkDXNNqdDsXlTbJ5B0mWJiDnvLF5mWJf9bt5XpifdWa7Hu2+HSrzL1n/ZXku6/d9/1z/
      /M9QeIP/4g1O4JwGx/n1n6fz/N5lGvp5PG94v/Pu6IJwOZ5x/eGyr/UVSWubt89+1LToSeVP
      o3zPxfrLH4bKpO/+R3Dvz1wT0dUoehIc6XyZrfDPzuh6OK5QUQBE+lbLtZvs/fg/C5Vl1/8M
      cRIX+vtvLAA6A4vtw26o7P5a+lz/0HR4vt8Ola1kVVLx6HyhSBN5rkm38vdDZUb+l0F+90J/
      /40FwMv9Dv/l//KjUNlv/cbPspSa7z+sD/gv/uoPQ2V//t98n599r3BViJEWUNGT4EgLrWgO
      cEVyPYfD7l6oLK1mgdmDqyJdn6IAuCK1R03+wm//6VDZn/3ef8LPr/7qNRG9HXneiE4lnOOr
      Jz/81jakbyt3pGuSa7c4/PF/ECpbef+/Ja28f01EP5miOUCkhdbC9gB9q8tBJ3yK9Ub67rn+
      kTNkr/UqVLaS3LwStkjfnC4fAL7P1ounoKexei0ePLjLo+c7fPzhxdZdp9WxHP7iP3seKvvT
      95ZYnbOp7m3qefVL/tL/8+dDZf/1r/8Viuecq3PY2eU///t/LlT2F375t3iQ+oShWQuVy1L8
      7cJGujJ9jePRLcR4ZvxY3Oryev+IkTO7UemiGrke//vreqjsj5TSrBqxr13nNynf9/gb/+gX
      Q2WfPPgPWV/9t6+J6Nuv6vZ/h+cOz36Opz/DyP/RK3mtSweAIMoMmsegpcktrVM+qFAs5K6C
      7adSvcEeP3jx34fKvnP3N66J5maqsfs/4drNs5+99X/v5gQAgsQHH3169uPyyjd7bMfL9pC/
      +egoVPZn31s51287fQ5rPw6VZZPXt2JhOV32jv/PUNm9tX8dzjn/x/UsDmu/GypLG/ffKlO/
      +Xv43mQruaKvoMZuv9XXuKkS/NNvuvgJdZqZU6vV0GKx8d53BE7+A98HhHEywsm+eEEQGAz6
      6PE4pxTCtN/3x/vKAcdx8PGRFeVsb/3Jm0AQBHx/kuww/o3PyBwR07VQPeN6AWHsPvkVgiAy
      6A9IJBJnXwBy+hqe5wX8J/yIDAYD4nE9VB6sP/i+fB8s00S/JE88rofqmfXP5+HsNQQ8H8ST
      q+Nz+tmI9Ofwn+8X6A+Gk/rPNOb5qvqvg+fMC9gnX8ukyNJZ3W9tFeg0KcEwDJLJZKgB+b6P
      7/vnJoKk0+kL+U3TxPd9dF0P+T3Pm5sZ5Hkecl++HA/ChXlOfz/tP33tab/rugwGgxvDc2K4
      pF+8FM/l6x/78X08QHyLPKPReDt3sP1c2TKoOeiyvbOLmshyd3MVURSxzQEPHz0lm4ojpVfZ
      KE52wg26LXZ290hkl9lcKyEKAuagx5OnzzEMnVTxNum4NOXfJ5Fd4tZa6eQ1ezx6+pxsXEZf
      fY8lQ/7aPI45YGt7B0FNcO/OJpIo4tkmjx4/IW4YiHqKOyevG64/x91bk/qfPnqKkY0jxVZZ
      KyYuyBNDyqyzUUjO8mgJ7t0O8yQMA2GKx3dMXm5t4woq9+/dRZFEcG1ePH+KKxtIssSDO5Nl
      XNscsL29A2qCB3c3EUUR1zZ5/vARajaFIGW4u1EI8bza3kEM8Li2yeMznjR31opfyfP8+VO8
      OTx4Nq+3txlY8OCdB2iyCJ7D/usX1E0VXRF59/6dmfZj5JbZWB23n9Ggy9OnL0gkdDLLd0hq
      kxtk/6T9XNmDMNMckswU0VXprPtWtDi3VktYro8sT93dB0OypWUUYTKM0eIGK6UcricgyeE9
      NMPhgFxxCSlQrMUN1ko5bF8cX+Bg/aMAD7M8ylT9jjVCM7KkEyqOO/4LUdG4vb6C47rIU35r
      OCSZKxKXRNxA/etrJRzbn/GboyGpTBFtLg8z/I41QktmScVneWzXnfmiON8xEbQUxUwc0z4h
      khQ21tfAt2f8jjkilsqS0hQc/9SusXFrBdtyUZTZ66Of8pxkmkuKxu315ROesP88ns0znqlt
      7q6NI8ZYK6YYmiff6ijKrKxvoPg20hT/aDAgt7SMwqT96PEky8Usni8gTV3P4XBAobh0RQHg
      e7x88ZJet4WLjBhIaO50u9Rrx3QHZuAPXF4+fUG318CX9BBUv9+gclRnEPR7Dk+ev2TQqSMo
      4eXSbqtGo16jPQh8dabv8eLlS/qnPIGhUqfToV47phPigb3Xr2h0uvRND02ZEPX6fY6OK/T7
      g4DbY+vJc7qDNpaohLrVQbdFrV6n054s6415XtDrtvAuzPOSZrvLwJrlOT6u0O/3Q/5qeZvj
      Rodm38bQAz3haMDuYZ1hP5ib4bP7/AWtXoehJ6IGPq9hp0ulXqPXDb5f2A3yyEGeAceVY/qD
      sL/ylTzh75ZuVvYoV1sct0dkEupZuWsNebFXwRr2Am6Xl09e0uk08OVYqP0M+g2OD+oMBoHv
      pPQcnjx7Sb9dQ/rN3/zN3+Qtyfd9bNtGU1U0Tcf1fLLZLLqqnBrQNYXeyGFzfQ1VljBNE11X
      UTQdzxPI5bOoJ3cb3/dRVQ3T8ljfWEU4OXJFlkT0WAzXE8hlJ358H03T6Jk+dzZXkARmeDLT
      PLpKb+iwub4a4NHHE23PI5PNEdPVQP0qo5HJ6toGuiqf+DVUPYbrTr1ffFRNo98z2byziSIF
      eTRcj/N5NqZ5VLxzeIYzPDqCpCL4LulMlkRsMkmUFQXH7FNa2SSuq2f8sq7juR6ZTGZSPz6q
      rjPoDVnbDNevfBXP6nrIL0rKJXh0EGUkwSOVzmDEJzc5QVIR7AG5pTWMuH7WflRNw/MFsrnp
      9qNiOuP2g+9O2o8ew/XFK+oBBBFREFlZXmJkTvJIHXtEvd0nlUxyNi4CQEKWRFbXSwx6kzuf
      bQ7pdIYkUwYEzxsSZQRE1lcKDMzJ8p1lDmj2RqRTBr4b8J/wLJ/Hk5rmAUWWKSytYpuTO5nn
      2tRbbRJG8mxF4gQISYDl9RVGgTu3Y5k0mz2MdArBD5xdI4iIgsTyyht4vAvyNE94hLBf0yRS
      uWU8O5DH6zk0mi20mIEUOmZEQBEECssr2KMJv+vYNOptjFQKcepbd2VZprC08gaekB1NlUnn
      L8oDMU0hniqAG7xzu7SbDWTdQApNcCVkSWJlrcigH2g/oyHt7jntRxBZX8lf3RxAkWBndw8/
      sP992O/w8Mnzk6WtsETB5fXWLqI2GQv2mw2evdzCn3PEhSq4bO2UkQKTgE6ryfNXW3OP3DiX
      5+nzucdlSJLI4f5rbG9yiRyzz8PHz8dj8Kk/UBSBna0d/ADPqNPi6fNXuHN5fHZ29vCFAE+v
      w6PL8jx5djInCP+BICnUD3cZOYHAcEc8e/qU3mj2IClFlSjv7OAE6rGHPZ4+eop1srQblCyK
      HO7vTPH0ePj4Ge6cQ74ESaZ2MMvz9MlTeuacg7AkmValTN8MDGU9m52XT6l2rZnrIwouO9t7
      SOpkuNRr1Xn2cnvuUTEKLluvy1cXAJZtU97boRsYKyfTeT758N3xCWZTftscUt7dodOfRHy6
      tMR79+/OPRVsZJrs727TG04ivlAs8e79e3NPHTvl6U3zfHDCMwXkODZ7+2U6nclYWY2n+eyj
      95BEzpbRzuo3TQ72d+n0JmN9o1Dkg3fvI855v5bljHl6AZ5Mno/P47Hn83z6nffn8viOxc5+
      mXY7MLZWDD76zgcYmjjjt02LcnmPdncyttaTGT786AOUkxP5vvr6ZPj0o/cRhTk8rs1OuUy7
      HZh7KAYffzSfB9eZ5Zd17r//IUVDmTlJz7aGlHd2Q3PLTGmZ9+/fGZ9QF66dkTlif/f11QWA
      KCosLS0RC9zREUSOq1WSGlTb4UmbrMYoLS8RkyfRKggi9WoNRXJpdcJHckiKzvLyEmpwtUGQ
      qNZqJESTai98SNYpjz6PR4VqOzxpE0SZYrFEIvSQRaBerxPTFKqN8JEhkqRQXF4mrskhf7Na
      I54QqdR6Ib8oySc8asD+Jh5pLk+jUSOmKdSmeARRpFQsYiTCG/P6nSaCGqdWrYT9kkRxaRkj
      FnwiLdCqVNGTKtVq+IACQZQozb0+NeJzeBBESoUiRiK8aNFrNxCUOLXa1PmygsBSoUjCCJ/u
      4AxamIJOfcovqTGKy6XQhFwQRGrVOoro0O6GFxXkk/ZzZc8BbLOPourYUxvlCrk8UjzFZjL8
      NYGjfh9V186W1E6VLeRJpNOkkglsa9I7jIY9NFWf6W7zuRxKKk0hpYfOKbXO4cnn8kiJWR7X
      GqGoKqbthMozmSyKnuB2KZzNb42GKKo6U386n0NRUtwupEKnm1nmYMwzda7luTz2mMea4kln
      cqh6gsIUj+/YCLKCZYdvBDEjjSwo5JZvz7xfWVGwrDBPKp9DlBLc3gzzOPYIWVWx7LA/k82h
      6AluTfO483niyQy2oJBbvhUqx3PxJBkn8JkDyHqKjChSyIX5R70+mq7NtIdcIU8inSGVjGOZ
      kyAYDfuomnZ1PYCqKNQbdSrV6qR7E0SGnSbNTgfTCn+QiipTrzepVapn0y1BlOi16rTbXSwn
      fKF1WabaqIdPphYl+q067W4Xc8qvKQqNRm2GZ9RpzOWRZYVWo069VsM5nVALAoMp6KoAABQt
      SURBVM6wS7XZZmiGPxhFk2nU6tQqFSavLGL1WtTbXUZmuH71lKdycZ52o05tmmcwn0eQFPrt
      BvVabbLuDgiuydFxncEw3KPKqkKr0aBaqeCcDUcEvFGHSrMzU/+EpzrDU7ssT6Uxw4MoY3Zb
      1OtVBoFrp8oe+/sV+oNhyK6oEvV6g1qlEmo/3WaNdqczc2PSFIlavXF1AdAdDBkM+iQNIzQp
      zWUMynv79M3wnWDQ7zEa9IkZmRBUMqlzWD5gaIXfQLs/wBz0SKbDZwulDZ3y3n54shXkSSan
      eJJzeUajAa3+iEQ8hhx4iJJOp6gcHtLrhz+wQafP0BwQN9KhtHcjY1Ar79EdhRt0t38ez/zr
      MxoN5/JkMvN5XGvAcWtIIhFHCzzEiiWStFs12p3wGU3D7oDuYICRTCIHeIxshnp5j24/PIQw
      h6c88anrk+T48JDeIMzjvYmnWaXdDfPgDNmvdUkkjNCwUlINRv16eC5BsP1k57SfQ4ZTPVWn
      N24/VzIE8n2fQmkVNZZAi2dCv2t2Bnh2h2Z3SDE9Hp/6nkdx/S6akSGWDTfo4ahPv92l1xsR
      z2hn/rX12xjpNEY23NX2ul3sUZtG3yZ1cm7pV/JYHZq90RkP+CTSRb73iYYoh8es7e4A2+rT
      7HZZKWZO6vfIrq3zHSONZmRD/kGvi2WPaDX6FJLqGU9xaRUtnkBLXJznu59oSHJ4TN/unPL0
      znjAR4xl+aXvfQdfCu8yHQ4G9EcW7U4L1pbOeIxiic+0OLIWHnP3W20sz6LV7LFaTJ/Vn8ic
      w9Md4th9Wp0eK4WL8PTHPO02rC6d+V3Z4I/9wmdYU03UtfrUuzbZTgtYHbs9l9LGPfRklngu
      3B6GZp9+o0Ovb6InlRO/x9rGHYx05mp6ALNzxEHLIp8xOK5Nkl1sc4Agq6TSRYqZyYVu7m3R
      8VWKuRiHh5PJkznogWSQL+XIpCcXun60R9cVyScUjhrdkF+MpUili5RSk8nlqH3EYcsinz6H
      J1MMNDbAbPDqoEuhUKBSmWy99mwT2xPIZ/MUspOG268fUem6FPMJjo8aofodMUYmlaYYGBOP
      2kccts/j0U6uT4BndMKTL1CpHIZ5/Fke7D4vdirki0Vq1eNJuWvTHTmsFjLk8pN9Q/aozd5h
      h2I+TeW4FrCbmIJCPpWmUAzUfw6Pa5s4vkAukyc/w1M9h8dltZAmly+Gyp+/2iNbKNKsBybr
      nkO9Y3JvLUc6N9mX1Nh9RReNfFbn6GgyWR8NuiAlyS/nyCQnN7La4S49TyKXkK8mALRkEWFY
      ZXvvmLWVpbNyRYuD51DKGdQ7k1WO7PoG3YMdtvaa3N7MT+qJG/iOQzYdo92djPlypWW61TKv
      j3tsFNMhv+c4lNIyte5kyKGnijCssr3/Jp7AmFLLEafNq1fbrK5PJmeioqGKPtlclkZrcqET
      uRJ2t8rW62PWN0qh+mXXIV9KUwusAumpIgxOeJaneNwTnuDWCf2EZ+tiPCgJUorN1tYWSyuB
      FE9JIRWTSaTzNBuTuZOip5AZsLW9z+racsCuoeGSLeWo1wPLkefwSIqGIvpkc5kZnqRizefR
      JRLpAs1GLVSeTchsbW2RL61OykWZfEpDjGXpNCc3jtz6Ldrl17zeb7G5PknO0uNJfNsmk47R
      7k2GZPnSMp3KPjuV/tUEgO+6CKKMqiqYgZm3a5uksnkcdNbygZ2OjossiaiqzHA0Gfva5pB0
      voCoJEJ3RNd1EUURTZUYBSaLtjkkky/gqhlW0pPlzsvy4DqIkoKiqJijSUP0XBvNSI+fIi4X
      A+UusiiiaCqj0WTy59gmsWwe31XZWJ30AGGesD+Vy+MIszzCCc8oyOMEeQJHRnoeoiwjSgqW
      GX7y6koxdMlnY31jwuO7SIKIpKrh6+PYyKkcoiOwsTa5Mb2JRzfSCII0wyOd8YT3dLly/IQn
      EBi+jyhLCKKMbQX9Ln1bJpcQWQ/wO46LctJ+Rma4/WQKRSTFoJCZ9ACu6yGctJ8rCQBR0dDE
      8dfdVOqTIY0gSsTiCfL5XGjiNL5TmiA6ofVyUZKJJwxyuWzoUbmixcExEXwztF5+6s/nciF/
      iKdxDk9wd6qkkIpLmC5UKpMuWBBE9FicXC6HGtiNKCkaOg6u4FGpTuoXT+rP5XPIgUf3Yx53
      hkd8A086NodHDPAogbGyKFFI63SHHpXger8w3gOTzeVCz0NEUSGpCtieR6XSmK0/nw9NXMc9
      yQlPtTrrn8eTOuUJDIHO4UEQKWUNWj0r/LxCENA0fbz/KPC8QtHjSK4Jgk2lPq/9ZJCD7UeP
      Izgmgje6ulWgwtIytuOxXJxMCl3bpFqtUq1WQ0thAIXVFRxLoFSc3Plsc3jir2G74VWg1bUV
      RrbEUjYxx1+dff5wylOY8DhBnqllRyNTRPAdVpcnQxrPtc/808t8udU1vJHD8lKgfiv4fsP1
      T3gmY+U38mRPeSZDJs+xJjyjqWXKeI6Y7LK2MhnS4DnUamN/f2qVJllcBtthJXDn9hyL2kn9
      g6n6k6c8S6WQ/1yexOV4UFMkdVhbDaS7+h6NRo1qtUq3F35QWFxZxrElSoEcCms0OGs/1lR7
      WFldZuRc0RwAoFY5Ynv7JQfVSXKzoicopA2qlWOGUx9w7XCPre0tjiuTsaaeSJFNqlSPKphT
      b+Bgv8zu6+ccNXohfyahUjk+xnLDy6C14yO2t1+EeNQ38PRaNZ693GL/cHIHkhSdpXyGeq1K
      fxheFmwe7PNq9zWHR4H6YwkKmTj1yjGDqWXc6vHxXJ78Cc/IPo9ncgeV1NgZz2CKxxk0+OLJ
      K/bKk0kqksrKUoFmoz7TgLrVY15sb1M+nNzRZTXGUj5NvVqhPwovy3ab1THPUeD6nPFUGIzC
      PPagwRdPX7FXDuRzSyorpQKNRj20JWT8Bx1++PAFu/vlSZkos7qyNObvTm3/Ptxja+sVlepk
      USRmpMkYKpWjCtbUsvjhSfu5kgBw7RGmJ7K5cYuVYvjEiFq9iYgV2u9ujfo4ksH62iarS+En
      js1WG8caMAjsEbJGfQQ1ztrGXZazRsjfaDQRnAGt4aSHce0Rpi+yuXGb1Xk8vkU3uF/ctWj1
      He7fWmd1NZxw32y2cD0ntKfIsUYMBJVbaxusLoeXQduNJp7g0AkM1Vx7iHXGkw/56/UGom+G
      9kRdhKcb3H/vORw3h3z0zi2WV1ZD/kG3Tc/yGATyATzXom353N3cYGWlGPJ36nUc0acXWLTA
      tWgP3DHPyjk8/cAk3nOoNIZ89OAWK1P8g16bvuXRD+Yn+B6H1Q6ffXCXpeWw3xl1qPccBoPJ
      jc8a9nDlJOvrm6yUwu2h2W7jmAMGQyvkF7QEaxt3r+Y5gMB4vByLxULJHngOyUwGZIVCJrze
      LIgisXgstHHPc20MI8fKRoxsWj/bzy2c+mNhP641HiqoCUpG+K2d8gjn8kwdZiUIs/y+R9ww
      KJVWyBayU/Y5PLjoRpaioFEoBj8YYb7fc0hmsiCrl+fJh3lAQI+FH5rBuBfbWC6Syoa/Z0E4
      qV8KA6EmMywhky1MfZnJqT9Y/RnPKtl8Zsavx2JT25jP5wEBTY8hS+HMMttXub+5RCKVDXnP
      2k+Q3rVJGjmEzTiZpAbepFc9bT9X0gMIssZKKU+n3QrNyhEkhqbJWjEd6gEULU4pn6LdbGDa
      k6GCIMpYlk0hn6QfuEPLWpxSLk2r2QhvkRAVTMtiLR+jPZy8WfGMp8nI+moeRIW1lRK9bpth
      aGghYFoWS6UCvUAGlqRoLJdydFrN0KoUiDimxfJqNpQR9hPxjL6aB0FidXWZfq8zs2XAcx3S
      hWUGvclQUxAVVpaL9DrtqbG+gDM0Ka0Vwz2AqLC2POYZTF2f0RlPwP8VPJnCUogHBJZXVhj1
      e1OZd6DgoKVL42dEp2V6nFJu3H6Ch7SdtZ9cItQDKHqCYi5Fq3lFWyEEQaBydEy70wqvB/su
      9WqVcqVN2tBD/urBAb1+i1p98kH6vkO1cky10cNIaCF/ef+AYa9BvRvuaquVCgf1IdmEEvJX
      jo5od9o0WoELfQ4PgkC3WeWw0QuvT+PTrFcpH1ZJGkao/kZ5n9awR70efETvUatWKB82SAcm
      64IgcHw45mmew5M5j6d+Dk/SCPmdQYOtcotmM3zqXqtR47BcJpFMB+wCncoRx+0uzWZwF6dP
      o16lXK6QzITr7zSrHDV6NOv1kL9Zr1I+qpJKJkJ+p99g+6BFaw7PwcFBiAdBQLA7PHtdodkO
      7yptNRscHZTRE8mAXaB6WKbXa1JvTALG907aT7OPEQ+3n4P9Awbd+lXlBPsous5nn36GEdwu
      K8okVBlBVafSK3xUPcWnP/MpCX3S5Ymigq5KyMqU3/fRjCSfffIpcTUw1JEU4oqIpGnhDC/f
      R9ZjY57gdl9RJqFKc3hAlFU+//TTqQ9SJBnT8KVwnjP4SJrBZ599QjIe2N6MhBFTQNLCGWS+
      jxIb8yTO4ZnWeTyGfsIzk/Qh8fnPfEY2FZ5TpZIJHI+poYiPoMT4/PNPSIW2T4vjQwEEdSbD
      S1JUPpt3fXQNX5TnJCVJfPb5Z2Tm8LjuNA94nsCn3/2cQjrsz2RT2JYzNbTzUfU0n37+KQkt
      0H4kBU2RkKevp++jGSk+//TTq1oF8mk16+yXj0hObestLRUZ9vuTHYQAeDTqNXZ3K2Ry4UlM
      oVRkOOjjBJNcTpbD9o7qpKfOEC2Wigz7PcKLRj6txjk8pdIcHmg3G5T3d4knw2PrbL6Iaw6x
      Q8u4Pq1Gg729I5KZcP3ZUhFn2J9axn0zz2guT52DOTy5QmEOD7RbLY4O9tDi4foTqSyK4Mxs
      S+60GpT3ysSneJLFEoz6M/W3TnlS4bH+uTzt5pgnEd6rk0hmkefwdDttKof7yFp4LiRpKQwN
      zODQEY96rcbufo1MNjy3LJQKDPuD8DZp3x23t8Or2g0qiMR1nWr1mIPjcOJFo96kWS2Hli9B
      IqErNFuH7O01Qv5264jj8hH1VmCoI0rEFJlGZZ9ybeo0geohjUqZo05wbC2S0LX5PI3GmKcZ
      XlZLGnGOKk2ODnbDPO02lepxaA8PiBgxhWrjmPJ+OFGj06zRqFc4CH5DpiASP+MJ+xuNBo05
      PIaR4LAybkRhns4cHkinDQ4OqhwelkPlw36XveMGleODQKlAMq5zWKtydBg+drLfaFBtVDkK
      LO8CJBMJDiuNGZ7WGU/4c0ynk3N5BoNTnsMpf4qj/SP2j8M8rtXjxV6VejVYLpGIyTSaB+zv
      hznbrWOO9g5pBLeWiDIxVaZZ2bu6hJh8Ps/QlShOLfOlshl6I5NsMnznzpYKWGqMpeXwakMq
      XaI3bJAydAgMI5ZKRQQtwdJUj5HOLzFwJPJG+JyZfCHP0JNneTJZeiNrhieRyrG5apMvLoXL
      k0ly6TTpVPhOllkqsSRolJbCy6xGOk9y4JDLh+9M+UKe0SV4jEvyyLEM9zaXyBdLoXItZrCS
      T2Kkwq9r5AusjzwKU/5YOkO2PyKTnepJ0lk2V52Z+o0znrD/zTwGRnrqgGXV4P7dNdL58LKs
      pMS5vZIlZoR7nmyxiKPGKa1MtZ9Mif6oQdLQIJDYv1QqIGiJq3sQ1qxX8SU5fECS5/Do6Qvi
      MX2mi29WqyBrobGd59o8e/IKLabiTmVOVY8ryJoW2mKAa/Ho+RYJXTk7B/Ks/lptPs+zE54p
      /6DTYOQIKMEDmHyP58+fo6gajht+UNWpHuPK2tSBXy7PHz1HTeg49iwPshL2n/FoMzz9S/I4
      ozbtoYushO9xu1vPcAQVb8rfb1YxkacOCPN4+egZcjyG44T9g3aTkcsMz7Nnz1BUbebzcoZt
      OkMXWQnfmMY8Gt5U/dh9Gl0LZYq/sveSniPP8DeqFVC00JYHz7UC7Wf6QWQV5aoywjzHRjGy
      GNpUByPKvHfvNo5HqKE7lkksWyQuhydOoqRw994tQAid/uBYJqlCCXVmnqXy7p1NHF8INSzP
      sVCSF+fBc7DFOIV0LHwYgiDy4O74W2SCPK5jIaYKpNXp0y4k7r1zB9/xkQN7aTzHQk1mxxPe
      c3nCgepcggfPpWdKbCylmSbauH0fXfIRA37fc3DVJIWEOnX4g8i99+6B44VPYvMcHClOITWH
      59698V9O81gS60vpmcWGjdv3ZnjwPVp9l9treaZVXL9LWgvX71gjErkSMUkM8YiSyt27m4zb
      jxjyJwslFOGKzgYVRBHDGHeBihqO+HH6nx/qAURJwkiOu3B16gg+3/fA93A9j9N39ya/5/sI
      vhea9Aii9BU8XjgXWRBJGAYJQFbUOX5CdxRBlEgYSRLn1S/4uE7Y/5XXJzjpfwOPd5L3HLrD
      CQKxRAI9nkCS59UPTvAOLYgkjCTxee/X8wA/fEd/4/U55Qn6z+dhHg8CeiyBqsdnjkA8PRs6
      6BcledIepo9k9P1x+3H9s2/EEyWZ5In/igJAIh6f/Zqgdq3MYaNLPJlhOTB2FyWZeHwWpba3
      Rb0/wEitkk/qZ1t1z/Mf723T6vZJ5FYpJJSz41HO5ame8mRZzoaX8+b5zV6NVwd14gmD9cBY
      Xzyn/s7RHuVWl3giz0ohcdYo3hpPt8bWQWOGB0EkFpvzNU1Wh4cvysSNOHc2JlsMBEEkNqf+
      YavK1lETPZ5kPbDJ73ye6tfgOSBuJEI8p0+NZ+QM+eLxNrKqc//WZPv0ee2hurtFY9DHSK+T
      S2pnp0MH/d/wt0SOe4ZhtxXa93+efGSS6SS9RnVmc9hcvyiRShp0mlVGU2PuuX7hlKd5IR48
      n7iRxB71ZnJe59tFkqkko06TwUXe7ylP74I8/uV48Dz0ZBLPHtGZOutzrh1IGAb2sEdvOml9
      Ps4ledwTnuGFePA89HgCwbdpdnpf7RckkukUvfrs7uNT/f9KBSrvOI5gQgAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='192' name='Source_Of_Energy_Recommendation' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sources_Of_Energy' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='oil Imports' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
